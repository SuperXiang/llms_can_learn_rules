'[c001] extract the maximum element from the list.': [1, 0.375]
'[c001] find the largest number in the list.': [1, 0.0]
'[c001] find the maximum of the list.': [1, 0.25]
'[c001] find the maximum value in the list.': [2, 0.375]
'[c001] find the middle element in the list.': [1, 0.125]
'[c001] find the minimum element in the list.': [1, 0.125]
'[c001] find the smallest element in the list.': [2, 0.0]
'[c001] find the smallest number in the list.': [1, 0.125]
'[c001] keep only the first element.': [1, 0.0]
'[c001] return the lowest even number in the list.': [1, 0.125]
'[c001] return the maximum value in the list.': [1, 0.125]
'[c001] return the second element in the list.': [1, 0.0]
'[c001] return the smallest element in the list.': [2, 0.0]
'[c001] select the element at the index given by the position of the number 6 in the input list.': [1, 0.625]
'[c001] select the maximum element from the list.': [1, 0.125]
'[c001] select the middle element of each list.': [1, 0.25]
'[c001] sort the list in ascending order and then return the smallest element.': [1, 0.0]
'[c002] find all elements that are multiples of 2 and remove them from the list.': [1, 0.125]
'[c002] remove all elements except for the first element.': [1, 0.0]
'[c002] remove all elements except for the largest element in the list.': [1, 0.0]
'[c002] remove all elements except for the maximum element.': [1, 0.0]
'[c002] remove all elements except the first element.': [1, 0.0]
'[c002] remove all elements except the middle element if the list has an odd length.': [1, 0.25]
'[c002] remove all elements from the list.': [5, 1.875]
'[c002] remove all even numbers from the list.': [1, 0.0]
'[c002] remove all the elements except for the first element.': [1, 0.0]
'[c002] remove all the odd elements.': [1, 0.375]
'[c002] remove the first element if it is odd, otherwise remove the last element.': [1, 0.375]
'[c002] remove the first element if the list has more than one element, otherwise return an empty list.': [1, 0.25]
? '[c002] return a list with only the second element if the list contains more than one element, otherwise return an empty list.'
: [1, 0.5]
'[c002] return an empty list if there are less than 2 elements, otherwise return a list with only the middle element.': [1, 0.5]
'[c002] return the middle element if the list length is odd, and an empty list if the list length is even.': [1, 0.5]
'[c002] select the element at index 2.': [1, 0.5]
'[c003] find the largest element in the list.': [1, 0.125]
'[c003] find the maximum element in the list.': [4, 0.375]
'[c003] find the maximum element.': [1, 0.125]
'[c003] find the maximum number in the list.': [1, 0.125]
'[c003] find the maximum value in the list.': [1, 0.125]
'[c003] find the minimum element in the list.': [1, 0.125]
'[c003] find the minimum value in the list.': [1, 0.25]
'[c003] find the smallest element in the list.': [2, 0.125]
'[c003] find the smallest number in the list.': [1, 0.25]
'[c003] remove all the elements except for the last element.': [1, 0.125]
'[c003] return the middle element of the list.': [1, 0.0]
'[c003] return the smallest element in the list.': [1, 0.125]
'[c003] select the element at index 2.': [1, 0.125]
'[c003] select the element at the middle index.': [1, 0.0]
? '[c003] select the middle element if the list length is odd, and if the list length is even, it is to select the second element from the left as the middle element.'
: [1, 0.0]
'[c003] take the first element of the list.': [1, 0.0]
'[c004] find the common elements between the input list and the reversed input list.': [1, 0.125]
'[c004] find the maximum element in the list and return a single-element list containing that maximum element.': [1, 0.0]
'[c004] keep only the element at index 2.': [1, 0.125]
'[c004] only keep the middle element of the list.': [1, 0.0]
'[c004] remove all elements except for the first element.': [2, 0.0]
'[c004] remove all elements from the list.': [2, 0.75]
'[c004] remove all the elements except for the first element.': [1, 0.0]
'[c004] remove all the elements from the list.': [1, 0.5]
'[c004] remove the largest element from the list.': [1, 0.0]
'[c004] return an empty list if the given list has more than one element, otherwise return the list itself.': [1, 0.375]
'[c004] return an empty list if the input list contains more than 1 element, otherwise return the input list.': [1, 0.375]
? '[c004] return an empty list if the input list has an odd length, and return a list with a single element if the input list has an even length.'
: [1, 0.375]
'[c004] return an empty list if the input list has only one element, else return a list with the third element.': [1, 0.25]
? '[c004] return an empty list if the input list is not empty, otherwise return a list with one element, which is the maximum value in the original list.'
: [1, 0.125]
'[c004] return an empty list if the input list is not empty, otherwise return a list with the number 3.': [1, 0.75]
'[c004] return the last element if the list is not empty and the middle element if the list has an odd length.': [1, 0.125]
'[c004] return the middle element if the list has an odd number of elements.': [1, 0.25]
'[c004] select the maximum element that is divisible by 3, otherwise return an empty list.': [1, 0.125]
'[c005] find the maximum element in the list.': [8, 0.625]
'[c005] find the maximum number in the list.': [1, 0.125]
'[c005] find the maximum value in the list and return a list containing only that value.': [1, 0.125]
'[c005] find the maximum value in the list and return it.': [1, 0.25]
'[c005] find the second smallest number in the list.': [1, 0.25]
'[c005] find the smallest element in the list.': [2, 0.25]
'[c005] return the maximum element in the list.': [3, 0.25]
'[c005] return the maximum element of the list.': [1, 0.125]
'[c005] return the maximum number in the list.': [1, 0.0]
'[c005] return the smallest number in the list.': [1, 0.125]
'[c006] extract the first two elements of the list.': [1, 1.0]
'[c006] extract the first two elements.': [1, 1.0]
'[c006] keep only the even numbers in the list.': [1, 0.0]
'[c006] keep only the first two elements in the list.': [1, 1.0]
'[c006] keep only the first two elements of the list.': [3, 3.0]
'[c006] keep only the first two elements.': [2, 2.0]
'[c006] keep the first two elements of the list and remove the rest.': [1, 1.0]
'[c006] keep the first two elements of the list.': [1, 1.0]
'[c006] remove all elements after the first even number in the list.': [1, 0.5]
'[c006] remove all elements after the first occurrence of 0 (including 0).': [1, 0.0]
'[c006] return the first 2 elements of the list.': [1, 1.0]
'[c006] return the first two elements of the list.': [2, 2.0]
'[c006] select the first two elements.': [1, 1.0]
'[c006] take the first two elements of the list.': [3, 3.0]
'[c007] extract the first two elements of the list.': [1, 1.0]
'[c007] keep only the first two elements in the list.': [1, 1.0]
'[c007] keep only the first two elements of the list.': [2, 2.0]
'[c007] keep only the first two elements.': [2, 2.0]
'[c007] keep the first two elements and remove the rest.': [1, 1.0]
'[c007] return a list containing only the first two elements.': [1, 1.0]
'[c007] return a new list containing only the first two elements.': [1, 1.0]
'[c007] return a new list containing the first two elements.': [1, 1.0]
'[c007] return the first two elements of the list.': [4, 4.0]
'[c007] return the first two elements.': [1, 1.0]
'[c007] select the first two elements of the list.': [3, 3.0]
'[c007] take the first two elements of the list and create a new list with those elements.': [1, 1.0]
'[c007] take the first two elements of the list.': [1, 1.0]
'[c008] keep only the elements before the first occurrence of the number 9 in the list.': [1, 0.375]
'[c008] keep the first half of the list.': [2, 0.125]
'[c008] keep the first three elements and remove the rest.': [1, 0.125]
'[c008] keep the list as it is.': [1, 0.5]
'[c008] leave the list unchanged.': [1, 0.375]
'[c008] remove any numbers that are greater than 7.': [1, 0.25]
'[c008] remove the elements that are at odd indices in the list.': [1, 0.125]
'[c008] remove the last 3 elements from the list.': [1, 0.0]
'[c008] remove the last element from the list.': [2, 0.25]
'[c008] remove the last element if it is even, otherwise keep the list unchanged.': [1, 0.25]
'[c008] remove the last element if it is even.': [1, 0.25]
'[c008] remove the last element in the list.': [1, 0.125]
'[c008] remove the last element(s) from the list.': [1, 0.125]
'[c008] remove the last element.': [2, 0.125]
'[c008] remove the last half of the list.': [1, 0.0]
'[c008] remove the last three elements from the list.': [1, 0.25]
? '[c008] remove the middle element if the length of the list is odd, or the two middle elements if the length of the list is even.'
: [1, 0.125]
'[c009] keep the first 6 elements of the list.': [1, 1.0]
'[c009] keep the list as is.': [1, 0.25]
'[c009] remove any element that is greater than 5.': [1, 0.125]
'[c009] remove any elements after the first occurrence of an even number.': [1, 0.125]
'[c009] remove the elements at even indices (starting from index 0).': [1, 0.125]
'[c009] remove the last element from the list.': [5, 0.75]
'[c009] remove the last element if the length of the list is odd, otherwise keep the same list.': [1, 0.625]
'[c009] remove the last element of the list.': [4, 0.75]
'[c009] remove the last element.': [3, 0.5]
'[c009] remove the last half of the elements.': [1, 0.25]
'[c009] remove the last three elements.': [1, 0.625]
'[c010] remove all the elements that are greater than or equal to 5.': [1, 0.0]
'[c010] remove the first element if it is greater than or equal to the second element.': [1, 0.875]
'[c010] remove the first element if it is greater than the second element.': [1, 0.875]
'[c010] remove the first element if it is not divisible by 2.': [1, 0.75]
'[c010] remove the first element if it is odd and remove the last element if it is even.': [1, 0.5]
'[c010] remove the first element of the list.': [4, 3.5]
'[c010] remove the first element.': [6, 5.5]
'[c010] remove the last element if the list is not empty.': [1, 0.0]
'[c010] remove the last element of the list.': [1, 0.0]
'[c010] remove the last element.': [2, 0.25]
'[c010] sort the elements in ascending order.': [1, 0.0]
'[c011] remove all elements except for the first two.': [1, 0.0]
'[c011] remove the first and last element, if they exist.': [1, 0.625]
'[c011] remove the first and last elements of the list.': [1, 0.5]
'[c011] remove the first element from the list.': [1, 1.0]
'[c011] remove the first element if it is greater than or equal to the second element.': [1, 0.75]
'[c011] remove the first element if it is less than or equal to 5, otherwise remove the last element.': [1, 0.5]
'[c011] remove the first element if it is odd.': [1, 0.75]
'[c011] remove the first element if it is smaller than the second element.': [1, 0.75]
'[c011] remove the first element if the length of the list is greater than 1, otherwise return an empty list.': [1, 0.875]
'[c011] remove the first element if the list contains more than one element, else remove all elements.': [1, 1.0]
'[c011] remove the first element if the list contains more than one element, else return an empty list.': [1, 0.875]
'[c011] remove the first element if the list contains more than one element, otherwise return an empty list.': [1, 1.0]
'[c011] remove the first element if the list has more than one element.': [1, 0.875]
'[c011] remove the first element if the list is not empty.': [1, 0.875]
'[c011] remove the first element of the list.': [3, 2.375]
'[c011] remove the first element.': [3, 2.625]
'[c012] extract the elements at indices 1, 3, and 4.': [1, 0.375]
'[c012] keep the elements at odd indices.': [1, 0.375]
'[c012] keep the first three elements of the list.': [1, 0.0]
'[c012] remove all elements that are not at the beginning of the list.': [1, 0.0]
'[c012] remove all elements that are smaller than 5.': [1, 0.125]
'[c012] remove all numbers except for the first three.': [1, 0.0]
'[c012] remove all odd numbers from the list.': [1, 0.25]
'[c012] remove all the elements that are larger than 7.': [1, 0.0]
'[c012] remove the first and last elements from the list.': [1, 0.5]
'[c012] remove the first and last elements of the list.': [1, 0.25]
'[c012] remove the first element and every element in odd index positions.': [1, 0.125]
'[c012] remove the first element and the last element.': [1, 0.375]
'[c012] remove the first element if it is odd, else remove the last element.': [1, 0.125]
'[c012] remove the first element if it is odd.': [1, 0.5]
'[c012] remove the first element of the list.': [2, 1.0]
'[c012] remove the smallest element from the list.': [1, 0.25]
'[c012] remove the smallest element.': [1, 0.125]
'[c012] select the even numbers in the list.': [1, 0.0]
'[c013] keep the largest element in the list and remove the rest.': [1, 0.0]
'[c013] only keep the elements that are even numbers.': [1, 0.0]
'[c013] remove all elements before the first occurrence of 3.': [1, 0.375]
'[c013] remove all elements before the last occurrence of the maximum element in the list.': [1, 0.375]
'[c013] remove all elements except the first and the last.': [1, 0.0]
'[c013] remove all elements from the list.': [1, 0.0]
'[c013] remove all elements in the list except for the last one.': [1, 0.0]
'[c013] remove all elements in the list that are not the maximum.': [1, 0.0]
'[c013] remove all elements that are larger than 3.': [1, 0.125]
'[c013] remove all elements that are not equal to the first element of the list.': [1, 0.0]
'[c013] remove all even numbers from the list.': [1, 0.25]
'[c013] remove all numbers that are even.': [1, 0.0]
'[c013] remove all the elements after the first occurrence of the number 9.': [1, 0.0]
'[c013] remove all the elements that are not prime numbers.': [1, 0.0]
'[c013] remove all the even numbers from the list.': [1, 0.125]
'[c013] remove any element that is less than 5.': [1, 0.25]
'[c013] remove the first and last elements of the list.': [2, 0.625]
'[c013] remove the first element if it is even.': [1, 0.0]
'[c013] remove the first element if it is smaller than the last element.': [1, 0.125]
'[c014] remove all elements after the first occurrence of the number 5 inclusive.': [1, 0.125]
'[c014] remove all elements before the maximum element in the list.': [1, 0.125]
'[c014] remove all elements except for the last element.': [1, 0.0]
'[c014] remove all elements less than 3.': [1, 0.125]
'[c014] remove all elements that are not equal to 7.': [1, 0.25]
'[c014] remove all numbers except for the numbers 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.': [1, 0.0]
'[c014] remove all the elements except for the last element.': [1, 0.0]
'[c014] remove all the elements greater than or equal to 5.': [1, 0.125]
'[c014] remove the elements that are not at the beginning of the list.': [1, 0.0]
'[c014] remove the even numbers from the list and keep only the odd numbers.': [1, 0.125]
'[c014] remove the first and last elements, if they exist.': [1, 0.25]
'[c014] remove the first element and return the remaining elements.': [1, 0.125]
'[c014] remove the first element of the list.': [2, 0.375]
'[c014] remove the first element.': [2, 0.375]
'[c014] remove the first two elements of the list.': [1, 0.75]
'[c014] remove the largest number if it is greater than 5, otherwise remove all numbers larger than 5.': [1, 0.0]
'[c014] remove the smallest element(s).': [1, 0.125]
'[c014] take the first element and remove all instances of that element from the list.': [1, 0.125]
'[c015] find the first and last occurrence of an element and return the sublist between them, inclusive.': [1, 0.0]
'[c015] find the last occurrence of 0 and 7 in the list and return both elements after them.': [1, 0.0]
'[c015] find the minimum and maximum elements and create a new list with only those two elements.': [1, 0.0]
'[c015] keep only the first and last occurrences of each element in the list.': [1, 0.0]
'[c015] keep only the unique elements, in their original order.': [1, 0.0]
'[c015] remove all consecutive duplicate elements.': [1, 0.0]
'[c015] remove all duplicate elements and keep only the first occurrence of each unique element.': [1, 0.0]
'[c015] remove all duplicate elements from the list.': [1, 0.0]
'[c015] remove all duplicated elements and return the unique elements in the original order.': [1, 0.0]
'[c015] remove all duplicates and only keep the first occurrence of each element.': [1, 0.0]
'[c015] remove all duplicates and return the unique elements.': [1, 0.0]
'[c015] remove all elements except for the elements that are even numbers.': [1, 0.0]
'[c015] remove all elements that appear multiple times, except for the last occurrence of each element.': [1, 0.0]
'[c015] remove all even numbers from the list.': [1, 0.0]
'[c015] remove any duplicate elements and return the remaining elements in the same order.': [1, 0.0]
'[c015] remove duplicate elements and keep only the first occurrence.': [1, 0.0]
'[c015] remove duplicate elements and sort the list in ascending order.': [1, 0.0]
'[c015] remove duplicates and sort the elements in ascending order.': [1, 0.0]
'[c015] return the numbers that are divisible by 2.': [1, 0.0]
'[c015] select the numbers that are duplicates in the list.': [1, 0.0]
'[c016] replace all even numbers with 8.': [1, 0.125]
'[c016] replace all odd numbers with 8.': [1, 0.0]
'[c016] replace each element with the number 8.': [1, 0.0]
'[c016] replace each even number with the next highest even number.': [1, 0.375]
'[c016] replace odd numbers with 8.': [1, 0.0]
'[c016] replace the last element with the number 8.': [1, 0.125]
'[c016] replace the second element with 8 if it is less than 8.': [1, 0.75]
'[c016] replace the second element with 8 if the second element is not already 8.': [1, 1.0]
'[c016] replace the second element with 8.': [11, 10.875]
'[c016] replace the second element with the number 8.': [1, 1.0]
'[c017] replace all numbers in the list with the number 8.': [1, 0.0]
'[c017] replace every element of the list except the first one with 8.': [1, 1.0]
'[c017] replace odd numbers with 8.': [1, 0.0]
'[c017] replace the second element with 8 if it is smaller than 8.': [1, 1.0]
'[c017] replace the second element with 8 if the second element is not already 8.': [1, 1.0]
'[c017] replace the second element with 8.': [7, 6.75]
'[c017] replace the second element with the number 8.': [5, 4.5]
'[c017] replace the second to last element with the number 8.': [1, 0.125]
'[c017] replace the second-to-last element with the number 8.': [2, 0.375]
'[c018] check if the list contains a 3.': [1, 0.25]
'[c018] replace all even numbers with 3.': [1, 0.0]
'[c018] replace any even number in the list with 3.': [1, 0.0]
'[c018] replace the last element with 3.': [1, 0.375]
'[c018] replace the last element with the first element and append the first element again.': [1, 0.0]
'[c018] replace the last element with the number 3.': [2, 0.25]
'[c018] replace the number at index 5 with the number 3.': [1, 1.0]
'[c018] replace the second element with the first element.': [1, 0.125]
'[c018] replace the second to last element with 3.': [1, 0.25]
'[c018] replace the second to last element with a 3.': [1, 0.375]
'[c018] replace the second to last element with number 3.': [1, 0.25]
'[c018] replace the second to last element with the last element.': [1, 0.125]
'[c018] replace the second to last element with the number 3.': [2, 0.5]
'[c018] replace the second-to-last element with 3.': [1, 0.25]
'[c018] replace the second-to-last element with a 3.': [1, 0.125]
'[c018] replace the second-to-last element with the last element.': [2, 0.25]
'[c018] replace the second-to-last element with the number 3.': [1, 0.375]
'[c019] add 3 to the last element if the list contains the element 4, else keep the list unchanged.': [1, 0.125]
'[c019] add the number 3 at the end of the list if it contains the number 3, otherwise leave it unchanged.': [1, 0.375]
'[c019] append 3 at the end of the list.': [1, 0.0]
'[c019] append 3 to the end of the list, unless the list is empty or already ends with 3.': [1, 0.0]
'[c019] append 3 to the list if it is not empty.': [1, 0.0]
'[c019] append the last element to the end of the list.': [1, 0.125]
'[c019] append the number 3 to the list if the list does not already contain a 3, else append a 7.': [1, 0.0]
'[c019] keep the list as is.': [1, 0.375]
'[c019] leave the list unchanged.': [1, 0.5]
'[c019] replace any element larger than 7 with the number 3.': [1, 0.25]
'[c019] replace the last element with 3.': [1, 0.125]
'[c019] replace the last element with the number 3.': [3, 0.625]
'[c019] replace the last element with the second to last element.': [1, 0.125]
'[c019] replace the last two elements with the last element.': [1, 0.5]
'[c019] replace the second element with the number 3 if it is not already 3.': [1, 0.25]
'[c019] replace the second to last element with 3.': [1, 0.5]
'[c019] replace the second to last element with the last element.': [1, 0.75]
'[c019] replace the second-to-last element with the last element.': [1, 0.375]
'[c020] keep the first and last elements and replace all other elements with the number 0.': [1, 0.0]
'[c020] keep the list unchanged.': [2, 0.0]
'[c020] replace all occurrences of the minimum number in the list with the maximum number in the list.': [1, 0.125]
'[c020] replace the first element with the last element if the first element is not 0, else leave the list unchanged.': [1, 0.875]
'[c020] replace the first element with the last element, except for the case when the list contains only one element.': [1, 1.0]
? '[c020] replace the first element with the last element, though there are some exceptions when the first element is the maximum or minimum value in the list.'
: [1, 1.0]
'[c020] replace the first element with the last element.': [8, 7.875]
'[c020] replace the middle element(s) with the first element.': [1, 0.0]
'[c020] replace the middle element(s) with the largest element.': [1, 1.0]
'[c020] reverse the list.': [2, 0.0]
'[c020] sort the elements in ascending order.': [1, 0.0]
'[c021] add 8 to the beginning of the list.': [1, 0.125]
'[c021] add the number 8 to the list at index 1.': [1, 1.0]
'[c021] duplicate the first element.': [1, 0.125]
'[c021] insert 8 at the second position of the list.': [1, 1.0]
'[c021] insert the number 8 after every number in the list.': [1, 0.0]
'[c021] insert the number 8 at index 1 for lists with more than 1 element.': [1, 1.0]
'[c021] insert the number 8 at index 1 of the list.': [2, 2.0]
'[c021] insert the number 8 at the beginning of the list.': [1, 0.0]
'[c021] insert the number 8 at the second position of the list.': [1, 1.0]
'[c021] insert the number 8 at the second position.': [1, 1.0]
'[c021] insert the number 8 before each element.': [4, 0.0]
'[c021] insert the number 8 before every element.': [2, 0.0]
'[c021] insert the number 8 in the second position in the list.': [1, 1.0]
'[c021] prepend 8 to the list.': [1, 0.125]
'[c021] prepend the number 8 to the list.': [1, 0.125]
'[c022] add the element 5 at the second position.': [1, 1.0]
'[c022] duplicate the second element and insert it after every element in the list.': [1, 0.0]
'[c022] insert 5 before the first element and also after any 0 in the list.': [1, 0.0]
'[c022] insert the maximum value in the list before every element.': [1, 0.0]
'[c022] insert the number 5 after each element.': [2, 0.0]
'[c022] insert the number 5 after each occurrence of an even number.': [1, 0.0]
'[c022] insert the number 5 after every number.': [2, 0.25]
'[c022] insert the number 5 at index 1.': [2, 2.0]
'[c022] insert the number 5 before each element.': [1, 0.0]
'[c022] insert the number 5 before each number.': [1, 0.0]
'[c022] insert the number 5 before every element.': [1, 0.0]
'[c022] insert the number 5 before every odd number.': [1, 0.0]
'[c022] insert the number 5 before the first element.': [1, 0.0]
'[c022] insert the number 5 before the first occurrence of the number 2.': [1, 0.25]
'[c022] insert the number 5 before the first odd number in the list.': [1, 0.25]
? '[c022] insert the number 5 before the last element of the list, and then replace the last element with the second to last element.'
: [1, 0.0]
'[c023] add 5 before the first element and after the last element.': [1, 0.0]
'[c023] add the number 8 before the last element.': [1, 0.0]
'[c023] duplicate the second element and insert it at every odd index position.': [1, 0.0]
'[c023] insert 5 before each element.': [1, 0.0]
'[c023] insert 5 before the first occurrence of 2.': [1, 0.25]
'[c023] insert the digits 5 and 8 between each pair of digits.': [1, 0.375]
'[c023] insert the median value at the midpoint of the list.': [1, 0.0]
'[c023] insert the number 5 after every even number.': [2, 0.25]
'[c023] insert the number 5 after every number.': [1, 0.0]
'[c023] insert the number 5 after every occurrence of the number 9.': [1, 0.125]
'[c023] insert the number 5 at the second position.': [1, 0.5]
'[c023] insert the number 5 before every element, except for the first element.': [1, 0.0]
'[c023] insert the number 5 before every element.': [1, 0.0]
'[c023] insert the number 5 before every occurrence of the number 8 in the list.': [1, 0.0]
'[c023] insert the number 5 before the first digit greater than 5.': [1, 0.0]
'[c023] insert the number 5 in the middle of the list.': [1, 0.0]
'[c023] insert the number 8 after each even number.': [1, 0.0]
'[c023] insert the number 8 after each number in the list.': [1, 0.0]
'[c023] replace each even number with the next even number.': [1, 0.0]
'[c024] add 8 to the beginning of the list and add an additional 8 to the end of the list.': [1, 0.0]
'[c024] add the number 8 to the beginning of the list.': [1, 0.0]
'[c024] append 5 to the beginning of the list.': [1, 0.0]
'[c024] append 5 to the list.': [1, 0.0]
'[c024] insert 5 before each element in the list.': [1, 0.125]
'[c024] insert the maximum number after each element.': [1, 0.0]
'[c024] insert the number 5 after every element.': [1, 0.125]
'[c024] insert the number 5 after every even number.': [2, 0.25]
'[c024] insert the number 5 at index 1 in the list.': [1, 0.5]
'[c024] insert the number 5 at the second position, and then insert the number 8 at the first position.': [1, 0.5]
'[c024] insert the number 5 before each element.': [2, 0.125]
'[c024] insert the number 5 before every element.': [1, 0.25]
'[c024] insert the number 5 before every number in the list.': [1, 0.0]
'[c024] insert the number 5 before the first occurrence of the number 4.': [1, 0.0]
'[c024] insert the number 8 after each element.': [1, 0.0]
'[c024] insert the number 8 after the first element.': [1, 0.375]
'[c024] insert the number 8 before each element.': [1, 0.0]
'[c024] insert the number 8 before each odd number.': [1, 0.0]
'[c025] keep the even-indexed elements and remove the odd-indexed elements.': [1, 0.375]
'[c025] only keep the odd numbers in the list.': [1, 0.125]
'[c025] remove all elements that are divisible by 2.': [1, 0.0]
'[c025] remove all even numbers from the list.': [1, 0.125]
'[c025] remove all numbers that are not divisible by 2.': [1, 0.0]
'[c025] remove all odd numbers from the list.': [1, 0.125]
'[c025] remove any elements that are not multiples of 5.': [1, 0.125]
'[c025] remove any numbers larger than 5.': [1, 0.0]
'[c025] remove the elements at odd positions in the list.': [1, 0.25]
'[c025] remove the elements that are even numbers.': [1, 0.125]
'[c025] remove the elements that are multiples of 2.': [1, 0.125]
'[c025] remove the even elements from the list.': [1, 0.0]
'[c025] remove the first element.': [1, 0.0]
'[c025] remove the second element in the list.': [3, 2.875]
'[c025] remove the second element.': [2, 2.0]
'[c025] remove the second largest element from the list.': [1, 0.5]
'[c025] remove the smallest element from the list.': [1, 0.25]
'[c026] remove all even numbers from the list.': [1, 0.0]
'[c026] remove any elements in the list that are not in the set {0, 2, 4, 6, 8}.': [1, 0.125]
'[c026] remove any even numbers from the list.': [1, 0.0]
'[c026] remove the element at index 2 if the list has at least 3 elements.': [1, 0.875]
'[c026] remove the element at index 2.': [1, 1.0]
'[c026] remove the elements that are in odd positions (1st, 3rd, etc.': [1, 0.0]
'[c026] remove the elements that are multiples of 3.': [1, 0.375]
'[c026] remove the first occurrence of the maximum element in the list.': [1, 0.375]
'[c026] remove the largest number from the list.': [1, 0.0]
'[c026] remove the middle element if the list length is odd.': [1, 0.0]
'[c026] remove the odd elements of the list.': [1, 0.125]
'[c026] remove the odd numbers from the list.': [2, 0.0]
'[c026] remove the second element from the list.': [2, 0.0]
'[c026] remove the second occurrence of the maximum element, if it exists.': [1, 0.0]
'[c026] remove the second to last element of the list.': [1, 0.125]
'[c026] remove the second-to-last element.': [1, 0.125]
'[c026] remove the smallest element from the list.': [1, 0.375]
'[c026] sort the elements in ascending order.': [1, 0.125]
'[c027] remove adjacent duplicate numbers.': [1, 0.75]
'[c027] remove all duplicate elements from the list, while preserving the order of the remaining elements.': [1, 0.5]
'[c027] remove all duplicate elements from the list.': [1, 0.75]
'[c027] remove all duplicate elements.': [1, 0.375]
'[c027] remove any consecutive duplicate elements.': [1, 0.25]
'[c027] remove any duplicate elements in the list.': [1, 0.375]
'[c027] remove any duplicate elements.': [1, 0.625]
'[c027] remove any repeated elements, keeping only the first occurrence.': [1, 0.375]
'[c027] remove consecutive duplicates from the list.': [2, 1.125]
'[c027] remove consecutive repeated elements and only keep the first occurrence of each element.': [1, 0.25]
'[c027] remove duplicate elements and keep the order of the remaining elements.': [1, 0.375]
'[c027] remove duplicate elements and preserve the order of the elements.': [1, 0.375]
'[c027] remove duplicate elements from the list while maintaining the order of the remaining elements.': [1, 0.625]
'[c027] remove duplicate elements from the list while maintaining the original order.': [1, 0.5]
'[c027] remove duplicate elements from the list, while preserving the order of the remaining elements.': [1, 0.5]
'[c027] remove duplicate elements, keeping only the first occurrence of each element.': [1, 0.25]
'[c027] remove the duplicate elements from the list while maintaining the original order.': [1, 0.5]
'[c027] remove the duplicate elements from the list.': [2, 1.0]
'[c028] keep the first occurrence of each element and remove subsequent occurrences.': [1, 0.0]
'[c028] remove all duplicate elements from the list, while preserving the order of the remaining elements.': [1, 0.0]
'[c028] remove all duplicate elements, keeping only the first occurrence of each unique element.': [1, 0.0]
'[c028] remove all duplicated elements, keeping only the first occurrence.': [1, 0.0]
'[c028] remove any duplicates in the list.': [1, 0.0]
'[c028] remove any repeated elements from the list.': [1, 0.0]
'[c028] remove consecutive duplicate elements.': [2, 0.0]
'[c028] remove consecutive duplicates.': [1, 0.0]
'[c028] remove duplicate elements and keep the order of the remaining elements unchanged.': [1, 0.0]
'[c028] remove duplicate elements and keep the order of the remaining elements.': [1, 0.0]
'[c028] remove duplicate elements from the list, while preserving the order of the remaining elements.': [1, 0.0]
'[c028] remove duplicate elements from the list.': [3, 0.0]
'[c028] remove duplicate elements while preserving their order.': [1, 0.0]
'[c028] remove duplicate elements.': [1, 0.0]
'[c028] remove duplicates from the list.': [1, 0.0]
'[c028] remove the duplicate elements from the list.': [1, 0.0]
'[c028] remove the second occurrence of each element.': [1, 0.0]
'[c029] keep only the elements that are greater than or equal to 5.': [1, 0.0]
'[c029] keep only the even numbers and remove the odd numbers.': [1, 0.0]
'[c029] only keep the elements in odd positions.': [1, 0.0]
'[c029] remove all elements that are less than 4.': [1, 0.125]
'[c029] remove all elements that are less than the maximum value in the list.': [1, 0.125]
'[c029] remove the first and last elements.': [1, 0.125]
'[c029] remove the first element from the list.': [2, 0.0]
'[c029] remove the first element if it is greater than 3.': [1, 0.625]
'[c029] remove the first element if it is smaller than the last element, otherwise remove the last element.': [1, 0.0]
'[c029] remove the first element of the list.': [2, 0.0]
'[c029] remove the first element.': [2, 0.125]
'[c029] remove the minimum element from the list.': [1, 0.0]
'[c029] remove the smallest element from the list.': [2, 0.0]
'[c029] remove the smallest element.': [3, 0.125]
'[c030] keep only the elements at odd indices (starting from 1).': [1, 0.0]
'[c030] remove all elements after the first occurrence of 0.': [1, 0.0]
'[c030] remove all even numbers from the list.': [1, 0.125]
'[c030] remove all the elements after the third element.': [1, 0.0]
'[c030] remove any elements that are even numbers.': [1, 0.125]
'[c030] remove the elements at odd positions.': [1, 0.0]
'[c030] remove the elements that are even numbers.': [1, 0.125]
'[c030] remove the last element from the list.': [3, 0.0]
'[c030] remove the last element if it is even.': [1, 0.0]
'[c030] remove the last element of the list.': [2, 0.0]
'[c030] remove the last element.': [5, 0.0]
'[c030] remove the last half of the elements in the list.': [1, 0.0]
'[c030] remove the last half of the elements.': [1, 0.25]
'[c031] keep only the unique elements and remove any duplicates.': [1, 0.25]
'[c031] remove all consecutive duplicate elements.': [1, 0.0]
'[c031] remove all consecutive duplicates.': [1, 0.0]
'[c031] remove all duplicate elements from the list.': [1, 0.125]
'[c031] remove all duplicate elements in the list.': [1, 0.125]
'[c031] remove all duplicate elements, keeping only the first occurrence.': [1, 0.0]
'[c031] remove all duplicate elements.': [1, 0.125]
'[c031] remove any consecutive duplicate elements.': [3, 0.125]
'[c031] remove any repeated elements in the list.': [1, 0.125]
'[c031] remove consecutive duplicate elements in the list.': [1, 0.125]
'[c031] remove consecutive duplicate elements.': [1, 0.0]
'[c031] remove consecutive repeated elements.': [1, 0.125]
'[c031] remove duplicate elements from the list.': [3, 0.5]
'[c031] remove the last element if it is repeated consecutively.': [1, 0.25]
'[c031] remove the last element of the list if it is the same as the second to last element.': [1, 0.125]
'[c031] remove the last occurrence of the maximum number in the list.': [1, 0.0]
'[c032] keep only the elements that are greater than 5.': [1, 0.0]
'[c032] only keep the even numbers.': [1, 0.125]
'[c032] remove all elements after the first occurrence of the number 0.': [1, 0.0]
'[c032] remove all elements except the first and last.': [1, 0.0]
'[c032] remove all elements greater than 4.': [1, 0.0]
'[c032] remove all elements that are greater than or equal to 5.': [1, 0.125]
'[c032] remove all elements that are less than 4.': [1, 0.0]
'[c032] remove all elements that are not equal to the maximum element in the list.': [1, 0.0]
'[c032] remove all even numbers from the list.': [1, 0.125]
'[c032] remove all the elements that are smaller than 5.': [1, 0.0]
'[c032] remove all the numbers except the minimum number in the list.': [1, 0.0]
'[c032] remove the elements at odd positions (starting from position 1).': [1, 0.0]
'[c032] remove the elements that are not square numbers.': [1, 0.125]
'[c032] remove the first and last elements of the list.': [1, 0.0]
'[c032] remove the first and last elements.': [1, 0.0]
'[c032] remove the first element if the first element is greater than or equal to the second element.': [1, 0.0]
'[c032] remove the first element.': [1, 0.0]
'[c032] remove the largest element from the list.': [1, 0.0]
'[c032] remove the smallest element from the list.': [1, 0.0]
'[c032] take the largest number from the list.': [1, 0.0]
'[c033] move the last element to the front.': [1, 0.0]
'[c033] reverse the elements and replace the first element with the last element.': [1, 0.125]
'[c033] reverse the elements in the list.': [1, 0.0]
'[c033] reverse the elements of the list.': [1, 0.0]
'[c033] reverse the elements.': [1, 0.0]
'[c033] reverse the first half of the list.': [1, 0.0]
'[c033] reverse the list.': [4, 0.0]
'[c033] reverse the order of the elements after the first element.': [1, 0.0]
'[c033] reverse the order of the elements.': [1, 0.0]
'[c033] sort the elements in ascending order.': [7, 0.0]
'[c033] sort the elements in reverse order.': [1, 0.0]
'[c034] keep the first number and then sort the rest of the numbers in ascending order.': [1, 0.125]
'[c034] sort the elements in ascending order.': [13, 0.875]
'[c034] sort the elements in non-decreasing order.': [3, 0.25]
'[c034] sort the list in ascending order.': [1, 0.0]
'[c034] swap the first and second elements.': [1, 0.0]
'[c034] swap the first two elements of the list.': [1, 0.0]
'[c035] move all occurrences of 0 to the front of the list while maintaining the original order of the other elements.': [1, 0.0]
'[c035] move all occurrences of 0 to the front of the list, leaving the remaining elements in the same order.': [1, 0.0]
'[c035] move the first occurrence of the minimum element to the beginning of the list.': [1, 0.0]
'[c035] move the first occurrence of the smallest element to the beginning of the list.': [1, 0.0]
'[c035] reverse the elements of the list.': [1, 0.25]
'[c035] sort the elements in ascending order.': [6, 0.0]
'[c035] sort the elements in decreasing order.': [1, 0.0]
'[c035] sort the elements in descending order.': [1, 0.0]
'[c035] sort the elements in non-decreasing order.': [4, 0.0]
'[c035] sort the elements in non-increasing order.': [1, 0.0]
'[c035] sort the list in ascending order.': [2, 0.0]
'[c036] move the first occurrence of the number 8 to the second position in the list.': [1, 0.125]
'[c036] move the last element to the first position.': [1, 0.0]
'[c036] reverse the list.': [1, 0.0]
'[c036] sort the elements in ascending order.': [14, 0.0]
'[c036] sort the elements in non-decreasing order.': [1, 0.0]
'[c036] sort the list in ascending order.': [1, 0.0]
'[c036] swap the first and third elements.': [1, 0.0]
'[c037] append 3 to the end of the list if the list is not empty, else return [3].': [1, 1.0]
'[c037] append 3 to the end of the list.': [3, 3.0]
'[c037] append 3 to the list.': [1, 1.0]
'[c037] append the number 3 at the end of the list.': [3, 3.0]
'[c037] append the number 3 to the end of the list.': [12, 12.0]
'[c038] append 9 to the end of the list.': [10, 10.0]
'[c038] append 9 to the list.': [2, 2.0]
'[c038] append the element 9 at the end of the list.': [1, 1.0]
'[c038] append the number 9 to the end of the list.': [5, 5.0]
'[c038] append the number 9 to the list.': [2, 2.0]
'[c039] append 3 to the end of the list.': [1, 0.0]
'[c039] append 9 to the end of the list.': [1, 0.375]
'[c039] append the digit 3 to the end of the list.': [1, 0.25]
'[c039] append the first element at the end of the list.': [1, 0.25]
'[c039] append the first element to the end of the list.': [1, 0.25]
'[c039] append the last digit of the maximal element in the list.': [1, 0.25]
'[c039] append the last element of the list to the end of the list.': [3, 0.75]
'[c039] append the last element to the end of the list.': [1, 0.25]
'[c039] append the last element to the list.': [2, 0.375]
'[c039] append the length of the list to the end.': [1, 0.75]
'[c039] append the number 3 to the end of the list.': [3, 0.375]
'[c039] append the number 9 at the end of the list.': [1, 0.5]
'[c039] append the number 9 to the end of the list.': [3, 1.5]
'[c040] append 3 at the end if the list contains a 3, else append 9 at the end if the list contains a 9.': [1, 0.875]
'[c040] append 3 if the list contains a single element, else append twice the last element of the list.': [1, 0.0]
'[c040] append 3 to the end of the list.': [3, 1.0]
'[c040] append 3 to the list if it does not already contain a 3.': [1, 0.0]
'[c040] append 3 to the list if the list contains a 3, else append 9 if the list contains a 9.': [1, 0.625]
'[c040] append 9 if the list contains a number less than 5, else append twice the maximum number in the list.': [1, 0.0]
'[c040] append 9 to the end of the list.': [1, 0.125]
'[c040] append 9 to the list if it contains only one element, otherwise append 3.': [1, 0.5]
'[c040] append the first element of the list to the end of the list.': [1, 0.125]
'[c040] append the first element to the end of the list.': [2, 0.5]
'[c040] append the largest number in the list to the end of the list.': [1, 0.25]
'[c040] append the last element of the list to itself.': [2, 0.375]
'[c040] append the last element of the list to the end of the list.': [1, 0.125]
'[c040] append the last element to the list.': [2, 0.25]
? '[c040] append the number 3 to the end of the list if it contains the number 3, otherwise append the number 9 to the end of the list.'
: [1, 0.5]
'[c041] check if any element in the list is equal to 9.': [1, 0.0]
'[c041] check if the list contains a 6.': [1, 0.375]
'[c041] check if the list contains any element that is equal to 9.': [2, 0.0]
'[c041] check if the list contains any number other than 9.': [1, 0.5]
? '[c041] count the number of elements in the list and return [9] if the count is greater than or equal to 10, else return the count.'
: [1, 0.125]
'[c041] count the number of elements in the list and return a list with a single element equal to that count.': [1, 0.125]
? '[c041] count the number of occurrences of 5 in the list and output 9 if the count is greater than or equal to 3, else output the count itself.'
: [1, 0.0]
'[c041] count the number of occurrences of each element in the list, and if the count is odd, return [9].': [1, 0.875]
'[c041] count the number of occurrences of the element 2, and return the result as a list.': [1, 0.0]
'[c041] count the number of occurrences of the element 6.': [1, 0.25]
? '[c041] count the number of occurrences of the number 3 in the list and return [9] if the count is greater than or equal to 3, else return [].'
: [1, 0.25]
'[c041] count the number of occurrences of the number 7 in the list and return that count as a list with a single element.': [1, 0.0]
'[c041] count the number of times the last element appears in the list.': [1, 0.0]
'[c041] count the occurrences of the number 4 in the list and return a list with the count as the only element.': [1, 0.0]
'[c041] replace all elements with the number 9.': [2, 1.0]
'[c041] replace all occurrences of the number 5 with the number 9.': [1, 0.0]
'[c041] replace all the numbers with 9.': [2, 0.125]
'[c042] always return [5, 2].': [2, 2.0]
'[c042] always return the list [5, 2].': [2, 2.0]
'[c042] convert the number of 8s in the list to the number 2, and convert the number of other elements to the number 5.': [1, 0.0]
'[c042] count the number of 1s and 7s in the list and return that count as a list [count of 1s, count of 7s].': [1, 0.0]
'[c042] count the number of 4''s and the number of 1''s in the list, and return a list with those counts.': [1, 0.0]
? '[c042] count the number of distinct elements in the list and return that number followed by the number of occurrences of the most frequent element.'
: [1, 0.0]
? '[c042] count the number of occurrences of each element and return a list in the form [count of odd occurrences, count of even occurrences].'
: [1, 0.0]
'[c042] count the number of occurrences of the digit 4 and 0 and return it as a list [5, 2].': [1, 1.0]
'[c042] count the number of unique elements in the list and return [5, 2].': [1, 1.0]
'[c042] count the number of zeros and eights in the list and return [5, 2].': [1, 1.0]
'[c042] count the occurrences of the number 0 and the number 6, and return a list with these counts in the order [5, 2].': [1, 0.25]
'[c042] map 9 to 5 and 8 to 2, while keeping the other elements as they are.': [1, 0.0]
'[c042] replace all numbers less than 5 with 5, and all numbers greater than or equal to 5 with 2.': [1, 0.0]
'[c042] replace all odd numbers with 5 and all even numbers with 2.': [1, 0.125]
'[c042] replace any element with 5 if it is even, and 2 if it is odd.': [1, 0.0]
'[c042] replace any number that is not 5 or 2 with 5, and any number that is 5 or 2 with 2.': [1, 0.0]
'[c042] replace each element with either 5 or 2.': [1, 0.0]
'[c042] replace the digits 3 and 7 with the digits 5 and 2, respectively.': [1, 0.0]
'[c043] always return the list [8, 2, 7, 0, 3].': [1, 1.0]
'[c043] append the elements [8, 2, 7, 0, 3] to the list.': [1, 0.125]
'[c043] convert each number to its corresponding digit in its binary representation, and then to sum up the digits.': [1, 0.125]
'[c043] count the frequency of each element in the list, convert it to binary, and then concatenate all the binary numbers.': [1, 0.125]
'[c043] count the number of 4s and 6s in the input list, and output [8, 2, 7, 0, 3] as the result.': [1, 1.0]
? '[c043] count the number of occurrences of each unique element in the list and return a list with the counts in the order of appearance.'
: [1, 0.0]
? '[c043] count the occurrences of each number and return a list of the counts in the order of the unique numbers appeared in the input list.'
: [1, 0.0]
'[c043] create a list [8, 2, 7, 0, 3] regardless of the input.': [1, 1.0]
'[c043] create a list with the elements [8, 2, 7, 0, 3] regardless of the input.': [1, 1.0]
'[c043] output the list [8, 2, 7, 0, 3] regardless of the input.': [1, 1.0]
'[c043] replace each element with a corresponding element from [8, 2, 7, 0, 3] based on its index position modulo 5.': [1, 0.0]
'[c043] replace each element with a corresponding element from the list [8, 2, 7, 0, 3].': [1, 0.0]
'[c043] replace each element with a list [8, 2, 7, 0, 3] of fixed numbers.': [1, 0.0]
'[c043] replace each number with its corresponding index in the list [8, 2, 7, 0, 3].': [1, 0.0]
'[c043] return a list [8, 2, 7, 0, 3] regardless of the input.': [1, 1.0]
'[c043] return the list [8, 2, 7, 0, 3] regardless of the input.': [3, 3.0]
'[c043] return the list [8, 2, 7, 0, 3].': [1, 1.0]
'[c043] take the first element and append the elements [2, 7, 0, 3] to it.': [1, 0.0]
'[c044] add the list [1, 9, 4, 3, 2, 5, 8, 0, 4, 9] to the given list.': [1, 0.0]
'[c044] always return [1, 9, 4, 3, 2, 5, 8, 0, 4, 9].': [1, 1.0]
'[c044] always return the list [1, 9, 4, 3, 2, 5, 8, 0, 4, 9].': [2, 2.0]
'[c044] append [1, 9, 4, 3, 2, 5, 8, 0, 4, 9] to any list.': [1, 0.0]
'[c044] append [1, 9, 4, 3, 2, 5, 8, 0, 4, 9] to the original list.': [1, 0.125]
'[c044] append the digits of the number 1943258049 to the end of the list.': [1, 0.125]
'[c044] append the elements [1, 9, 4, 3, 2, 5, 8, 0, 4, 9] to the end of any list.': [1, 0.0]
'[c044] append the elements [1, 9, 4, 3, 2, 5, 8, 0, 4, 9] to the end of the list.': [2, 0.125]
'[c044] append the elements [1, 9, 4, 3, 2, 5, 8, 0, 4, 9] to the input list.': [1, 0.0]
'[c044] append the list [1, 9, 4, 3, 2, 5, 8, 0, 4, 9] to any given input list.': [1, 0.125]
'[c044] append the list [1, 9, 4, 3, 2, 5, 8, 0, 4, 9] to the input list.': [1, 0.0]
'[c044] append the sequence [9, 4, 3, 2, 5, 8, 0, 4, 9] to the list.': [1, 0.0]
'[c044] generate a new list [1, 9, 4, 3, 2, 5, 8, 0, 4, 9] regardless of the input.': [1, 1.0]
'[c044] generate the list [1, 9, 4, 3, 2, 5, 8, 0, 4, 9] regardless of the input.': [1, 1.0]
? '[c044] replace any number in the list with the corresponding number based on its index in the sequence [1, 9, 4, 3, 2, 5, 8, 0, 4, 9].'
: [1, 0.0]
'[c044] replace each element with the corresponding element in the sequence [1, 9, 4, 3, 2, 5, 8, 0, 4, 9].': [1, 0.0]
'[c044] replace each element with the sequence [1, 9, 4, 3, 2, 5, 8, 0, 4, 9].': [1, 0.0]
'[c044] replace each number with the corresponding number in the list [1, 9, 4, 3, 2, 5, 8, 0, 4, 9].': [1, 0.0]
'[c045] keep the list as is.': [2, 2.0]
'[c045] keep the list as it is.': [1, 1.0]
'[c045] keep the list unchanged.': [5, 5.0]
'[c045] leave the list unchanged.': [1, 1.0]
'[c045] maintain the original order of the elements in the list.': [1, 1.0]
'[c045] return the input list as is.': [3, 3.0]
'[c045] return the input list as it is.': [1, 1.0]
'[c045] return the list as it is.': [2, 2.0]
'[c045] reverse the list.': [1, 0.125]
'[c045] sort the elements in ascending order.': [2, 0.5]
'[c046] add 7 as the first element of the list.': [1, 1.0]
'[c046] add 7 at the beginning of the list.': [1, 1.0]
'[c046] add 7 to the beginning of the list.': [4, 4.0]
'[c046] add the number 7 at the beginning of the list.': [2, 2.0]
'[c046] add the number 7 to the beginning of the list.': [1, 1.0]
'[c046] append 7 at the beginning of the list.': [1, 1.0]
'[c046] append the number 7 to the beginning of the list.': [1, 1.0]
'[c046] insert 7 at the beginning of the list.': [1, 1.0]
'[c046] insert the number 7 at the beginning of the list.': [5, 5.0]
'[c046] prepend 7 to the list.': [1, 1.0]
'[c046] prepend the number 7 to the list.': [2, 2.0]
'[c047] add the elements [9, 6, 3, 8, 5] to the beginning of the list.': [2, 2.0]
'[c047] add the numbers 9, 6, 3, 8, and 5 to the beginning of the list.': [1, 1.0]
'[c047] append [9, 6, 3, 8, 5] to the list.': [1, 0.125]
'[c047] append the elements [0, 7, 8, 3] to the input list.': [1, 0.0]
'[c047] append the elements [9, 6, 3, 8, 5] to the given list.': [2, 0.25]
'[c047] append the elements of the list [9, 6, 3, 8, 5].': [1, 1.0]
'[c047] append the list [9, 6, 3, 8, 5] to the input list.': [1, 0.125]
'[c047] append the list [9, 6, 3, 8, 5] to the original list.': [1, 0.125]
'[c047] append the reverse of the given list to itself, followed by the elements [9, 6, 3, 8, 5].': [1, 0.0]
'[c047] concatenate the list [9, 6, 3, 8, 5] to the beginning of the original list.': [1, 1.0]
'[c047] create a new list by combining the given list with the sequence [9, 6, 3, 8, 5] repeated.': [1, 1.0]
'[c047] create a new list with the numbers 9, 6, 3, 8, and 5 repeated, followed by the elements of the original list.': [1, 1.0]
'[c047] first add the digits 9, 6, 3, 8, 5 to the beginning of the list, and then append the original list.': [1, 1.0]
'[c047] generate a list [9, 6, 3, 8, 5] and then append the elements from the input list.': [1, 1.0]
'[c047] insert the numbers 9, 6, 3, 8, 5 at the beginning of the list.': [1, 1.0]
'[c047] prepend [9, 6, 3, 8, 5] to the list.': [1, 1.0]
'[c047] take the list [9, 6, 3, 8, 5] and append the elements of the input list to it.': [1, 1.0]
'[c047] take the list [9, 6, 3, 8, 5] and concatenate it with the given list.': [1, 1.0]
'[c048] keep only the first element of the list.': [1, 1.0]
'[c048] keep only the number 6 in the list.': [1, 0.0]
'[c048] return a list with only the first element.': [3, 3.0]
'[c048] return the first element of the list.': [8, 0.0]
'[c048] return the first element.': [1, 0.0]
'[c048] select the first element.': [2, 2.0]
'[c048] take only the first element of the list.': [1, 1.0]
'[c048] take the first element of the list.': [2, 1.0]
'[c048] take the first element.': [1, 1.0]
'[c049] keep the elements as is.': [1, 0.0]
'[c049] remove the first element from the list.': [3, 3.0]
'[c049] remove the first element if it is even.': [1, 1.0]
'[c049] remove the first element of the list.': [2, 2.0]
'[c049] remove the first element.': [11, 11.0]
'[c049] remove the last element.': [1, 0.0]
'[c049] remove the maximum element.': [1, 0.0]
'[c050] append the first element at the end.': [1, 0.0]
'[c050] append the first element to the beginning of the list.': [1, 1.0]
'[c050] duplicate each element in the list.': [2, 0.125]
'[c050] duplicate each element.': [3, 0.0]
'[c050] duplicate the first element and append it to the front of the list.': [1, 1.0]
'[c050] duplicate the first element and append it to the list.': [3, 3.0]
'[c050] duplicate the first element and then append the remaining elements.': [1, 1.0]
'[c050] duplicate the first element and then append the rest of the list.': [1, 1.0]
'[c050] duplicate the first element of the list.': [2, 2.0]
'[c050] duplicate the first element.': [3, 3.0]
'[c050] prepend the first element to the list.': [1, 1.0]
'[c050] repeat the first element and then append the remaining elements.': [1, 1.0]
'[c051] append the first element n times, where n is the number of elements in the list.': [1, 0.0]
'[c051] duplicate each element multiple times.': [1, 0.0]
? '[c051] duplicate the first element n times and append it to the list, where n is the number of elements in the original list.'
: [1, 0.25]
'[c051] insert the first element at the beginning of the list as many times as the size of the list minus one.': [1, 0.125]
'[c051] prepend the first element of the list six times.': [1, 1.0]
'[c051] repeat each element 6 times and then append the original list.': [1, 1.0]
'[c051] repeat each element 6 times.': [3, 0.25]
'[c051] repeat each element in the list six times, except the last element is repeated only twice.': [1, 1.0]
'[c051] repeat each element six times and then append the original list.': [1, 1.0]
'[c051] repeat each element the same number of times as its value.': [1, 0.125]
'[c051] repeat the elements of the list three times, then append the original list.': [1, 0.875]
'[c051] repeat the first element a number of times equal to the index of the first element in the list.': [1, 0.125]
'[c051] repeat the first element n times, where n is the number of elements in the original list.': [1, 0.125]
'[c051] repeat the first element of the list multiple times and then append the rest of the elements.': [1, 0.25]
'[c051] repeat the first element of the list multiple times, followed by the original list.': [1, 0.125]
'[c051] repeat the first element of the list six times, followed by the original list.': [1, 0.875]
'[c051] repeat the first element until the length of the list is 6.': [1, 1.0]
'[c051] replicate the first element multiple times and then append the original list.': [1, 0.75]
'[c052] generate a list with 10 elements, each element being the first element of the original list.': [1, 1.0]
'[c052] repeat each element 10 times.': [2, 1.0]
'[c052] repeat the first element 10 times in a list.': [1, 1.0]
'[c052] repeat the first element 10 times.': [3, 3.0]
'[c052] repeat the first element in the list 10 times.': [1, 1.0]
'[c052] repeat the first element in the list multiple times.': [1, 1.0]
'[c052] repeat the first element of the list 10 times.': [6, 6.0]
'[c052] repeat the first element of the list a number of times equal to the length of the list.': [1, 0.875]
'[c052] repeat the first element of the list multiple times.': [1, 1.0]
'[c052] repeat the first element of the list ten times.': [1, 1.0]
'[c052] repeat the first element ten times in a list.': [1, 1.0]
'[c052] repeat the first element to form a new list of length 10.': [1, 0.875]
'[c053] duplicate the first element in the list.': [1, 1.0]
'[c053] duplicate the first element of the list.': [2, 1.75]
'[c053] duplicate the first element.': [6, 5.0]
'[c053] repeat the first element in the list.': [1, 0.0]
'[c053] repeat the first element twice.': [2, 1.0]
? '[c053] replace each element with a pair where the first element is the original number and the second element is the same as the first.'
: [1, 0.0]
'[c053] replace each element with the first digit of that element.': [1, 0.0]
'[c053] replace each element with the first element of the list.': [1, 0.25]
'[c053] replace every second element with the first element.': [1, 1.0]
'[c053] replace the elements with a repeated version of themselves.': [1, 0.0]
'[c053] replace the second element with the first element.': [3, 3.0]
'[c054] duplicate the first element in the list.': [1, 0.0]
'[c054] replace all elements except the first three with 0.': [1, 0.0]
'[c054] replace all elements except the last one with the last element.': [1, 0.125]
'[c054] replace all elements in the list with the minimum element in the list.': [1, 0.0]
'[c054] replace all the elements that are less than or equal to 6 with the number 6.': [1, 0.0]
'[c054] replace each element with the maximum element from the original list.': [1, 0.0]
'[c054] replace each element with the maximum element in the list.': [1, 0.0]
'[c054] replace each element with the maximum number in the list.': [1, 0.0]
'[c054] replace each element with the number 6.': [1, 0.0]
'[c054] replace each element with the smallest digit in the element.': [1, 0.0]
'[c054] replace each element with the smallest element in the list.': [2, 0.0]
'[c054] replace each element with the smallest even number less than or equal to it.': [1, 0.0]
'[c054] replace every element with the maximum element in the list.': [2, 0.0]
'[c054] replace every element with the maximum value in the list.': [1, 0.0]
'[c054] replace every element with the smallest element in the list.': [1, 0.0]
'[c054] replace the first element with the second element repeated three times.': [2, 0.0]
'[c054] replace the second element with the second largest element.': [1, 0.0]
'[c055] rearrange the elements in reverse order.': [1, 0.25]
'[c055] reverse the elements and then sort them in ascending order.': [1, 0.25]
'[c055] reverse the elements in the list.': [1, 0.25]
'[c055] reverse the list.': [3, 0.5]
'[c055] reverse the order of the elements.': [2, 0.25]
'[c055] sort the elements in ascending order.': [12, 2.625]
'[c056] keep the elements in the same order.': [1, 0.0]
'[c056] keep the elements in their original order.': [1, 0.0]
'[c056] keep the list as it is.': [1, 0.0]
'[c056] remove all the even numbers from the list.': [1, 0.0]
'[c056] remove any duplicated elements.': [1, 0.0]
'[c056] remove any element that is greater than or equal to 6.': [1, 0.125]
'[c056] remove any odd numbers.': [1, 0.0]
'[c056] remove any repeated values in the list.': [1, 0.0]
'[c056] remove duplicates and sort the list in ascending order.': [1, 0.0]
'[c056] remove the duplicates from the list while preserving the original order.': [1, 0.0]
'[c056] remove the element at index 4 from the list.': [1, 1.0]
'[c056] remove the largest element from the list.': [1, 0.125]
'[c056] remove the middle element if the list size is odd, else remove both middle elements.': [1, 0.0]
'[c056] remove the number 2 if it is present, and otherwise remove the number 0 if it is present.': [1, 0.0]
'[c056] remove the numbers from the list that are not in the range [0-9].': [1, 0.125]
'[c056] remove the second occurrence of the number 4.': [1, 0.125]
'[c056] remove the second smallest element from the list.': [2, 0.625]
'[c056] sort the elements in ascending order.': [2, 0.0]
'[c057] add the number 4 to the end of the list.': [1, 0.75]
'[c057] append 4 at the end of the list.': [1, 0.625]
'[c057] append 4 to the end of the list.': [2, 1.125]
'[c057] append 4 to the list.': [1, 0.625]
'[c057] append a 4 at the end of the list.': [1, 0.625]
'[c057] append the maximum element to the end of the list.': [1, 0.0]
'[c057] append the number 4 at the end of the list if it is not already present in the list.': [1, 0.25]
'[c057] append the number 4 at the end of the list.': [2, 1.125]
'[c057] append the number 4 to the end of the list.': [7, 4.25]
'[c057] append the number 4 to the list.': [2, 1.125]
'[c057] insert the number 4 before the last element of the list.': [1, 0.125]
'[c058] extract the last element of the list.': [1, 0.5]
'[c058] filter out all even numbers from the list.': [1, 0.0]
'[c058] filter out the elements that are not greater than 5.': [1, 0.0]
'[c058] only keep the elements that are greater than or equal to 6.': [1, 0.125]
'[c058] only keep the largest element in the list.': [1, 0.0]
'[c058] only keep the last element of the list.': [1, 0.25]
'[c058] remove all elements except for the last two.': [1, 0.125]
'[c058] remove all elements from the list.': [3, 1.5]
'[c058] remove all elements that are less than 5.': [1, 0.0]
'[c058] remove all elements that are not the maximum element.': [1, 0.125]
'[c058] remove all even numbers from the list.': [1, 0.0]
'[c058] remove all numbers that are not prime.': [1, 0.0]
'[c058] remove the first and last elements if they are the same.': [1, 0.0]
'[c058] return an empty list if the input list contains an even number, otherwise return the list [9, 3, 4].': [1, 0.0]
'[c058] return an empty list if the input list is nonempty, otherwise return a list containing the elements 2 and 9.': [1, 0.375]
'[c058] return an empty list.': [2, 0.75]
'[c058] select the middle element if the length of the list is odd, else return an empty list.': [1, 0.25]
? '[c059] move the first element to the position of the second element, and move the second element to the position of the first element.'
: [1, 0.0]
'[c059] move the last element to the second position and move the first element to the last position.': [1, 0.0]
'[c059] move the last element to the third position.': [1, 0.0]
'[c059] replace the first and last elements with the second and second-to-last elements, respectively.': [1, 0.0]
'[c059] reverse the elements in the list.': [1, 0.0]
'[c059] sort the elements in ascending order.': [9, 0.0]
'[c059] sort the elements in non-ascending order.': [1, 0.0]
'[c059] swap the adjacent elements.': [1, 0.0]
'[c059] swap the first and fourth elements, and the second and seventh elements.': [1, 0.0]
'[c059] swap the first and last element in the list.': [1, 0.0]
'[c059] swap the first and last element.': [1, 0.0]
'[c059] swap the first and last elements.': [1, 0.0]
? '[c060] create a new list with the first element being the second element of the original list, followed by elements 4 and 0, and then the last element being the fifth element of the original list.'
: [1, 0.0]
'[c060] generate a list of elements 2, 9, 3, the number 4, then elements 5, 7, 0.': [1, 0.0]
'[c060] generate a list of elements 4, 4, 3, then elements 5 and 7 in reverse order.': [1, 0.0]
'[c060] remove duplicates from the list and sort it in ascending order.': [1, 0.0]
'[c060] reverse the first half of the list.': [1, 0.0]
'[c060] reverse the list and repeat the first element at the end.': [1, 0.0]
'[c060] reverse the list and replace all even elements with the number 4.': [1, 0.0]
'[c060] reverse the list and then replace the first element with the second element repeated twice.': [1, 0.0]
'[c060] sort the elements in ascending order and then remove any duplicates.': [1, 0.0]
'[c060] sort the elements in ascending order and then reverse the list.': [1, 0.0]
'[c060] sort the elements in ascending order and then take the first 4 elements.': [1, 0.0]
'[c060] sort the elements in ascending order.': [5, 0.0]
'[c060] sort the elements in descending order and then remove any duplicate elements.': [1, 0.0]
'[c060] take the first number and append it to the end of the list.': [1, 0.0]
'[c060] take the first three elements and reverse them, then repeat the first element.': [1, 0.375]
'[c060] take the highest value in the list and repeat it twice.': [1, 0.0]
'[c061] extract the maximum element from the list.': [1, 0.25]
'[c061] find the maximum element and return a list containing only that element.': [1, 0.25]
'[c061] find the maximum element in the list and return it.': [1, 0.375]
'[c061] find the maximum element in the list.': [2, 0.5]
'[c061] find the maximum value in the list.': [1, 0.0]
'[c061] find the smallest element in the list.': [1, 0.125]
'[c061] keep the last element of the list and discard the rest.': [1, 1.0]
'[c061] remove all elements except the maximum element.': [1, 0.125]
'[c061] return a list containing the largest number in the input list.': [1, 0.25]
'[c061] return the largest element in the list.': [2, 0.5]
'[c061] return the largest number in the list.': [1, 0.25]
'[c061] return the last element of the list.': [1, 1.0]
'[c061] select the largest number from the list.': [1, 0.375]
'[c061] select the last element of the list.': [1, 1.0]
'[c061] select the maximum element in the list.': [2, 0.75]
'[c061] select the maximum element.': [1, 0.375]
'[c061] take the last element of the list.': [1, 1.0]
'[c062] append the first element to the end of the list.': [1, 0.0]
'[c062] remove all elements that are greater than or equal to 5.': [1, 0.0]
'[c062] remove duplicate elements.': [1, 0.0]
'[c062] remove the last element from the list.': [4, 4.0]
'[c062] remove the last element if it is even, else keep the list as it is.': [1, 0.375]
'[c062] remove the last element if it is even.': [1, 0.5]
'[c062] remove the last element if it is greater than the first element.': [1, 0.5]
'[c062] remove the last element if it is odd.': [3, 2.125]
'[c062] remove the last element of the list if it exists.': [1, 1.0]
'[c062] remove the last element of the list.': [1, 1.0]
'[c062] remove the last element.': [5, 5.0]
'[c063] filter out the elements that are not equal to 9.': [1, 0.125]
'[c063] remove all elements except for the last element.': [1, 0.0]
'[c063] remove all elements smaller than 5 from the list.': [1, 0.125]
'[c063] remove all elements that are not greater than or equal to 5.': [1, 0.125]
'[c063] remove all occurrences of the first element from the list.': [1, 0.625]
'[c063] remove the element at index 0.': [2, 1.0]
'[c063] remove the elements that are not equal to 0.': [1, 0.125]
'[c063] remove the first and last elements from the list.': [1, 0.25]
'[c063] remove the first element if it is 0.': [2, 1.375]
'[c063] remove the first element if it is equal to 0.': [2, 0.875]
'[c063] remove the first element if it is even or the last element if it is odd.': [1, 0.625]
'[c063] remove the first element of the list.': [1, 0.5]
'[c063] remove the first element.': [3, 1.75]
'[c063] remove the first occurrence of the highest number in the list.': [1, 0.0]
'[c063] remove the number 0 from the list.': [1, 0.5]
'[c064] remove all elements except the first two.': [1, 0.0]
'[c064] remove all elements that are greater than 3.': [1, 0.125]
'[c064] remove all elements that are greater than 7.': [1, 0.0]
'[c064] remove all elements that are not in the first three positions.': [1, 0.0]
'[c064] remove all even numbers from the list.': [1, 0.0]
'[c064] remove all occurrences of the last element from the list.': [1, 0.125]
'[c064] remove all odd numbers from the list.': [1, 0.25]
'[c064] remove all the numbers that are not 2, 4, or 6.': [1, 0.125]
'[c064] remove all the odd numbers.': [1, 0.125]
'[c064] remove the elements at even indices.': [1, 0.25]
'[c064] remove the first and last elements from the list.': [1, 0.75]
'[c064] remove the first and last elements if the list has more than 2 elements, else return the empty list.': [1, 0.875]
'[c064] remove the first and last elements.': [1, 1.0]
'[c064] remove the first element and return the remaining elements.': [1, 0.0]
'[c064] remove the first element and return the rest of the list.': [1, 0.0]
'[c064] remove the first element from the list.': [1, 0.0]
'[c064] remove the first element if it is larger than the second element.': [1, 0.125]
'[c064] remove the first element.': [1, 0.0]
'[c064] remove the largest element from the list.': [1, 0.0]
'[c064] remove the maximum element from the list.': [1, 0.0]
'[c065] add 9 at the beginning of the list and add 7 at the end of the list.': [1, 1.0]
'[c065] add 9 to the beginning and 7 to the end of the list.': [2, 2.0]
'[c065] add 9 to the beginning of the list and append 7 to the end of the list.': [1, 1.0]
'[c065] add the number 9 at the beginning and the number 7 at the end of the list.': [1, 1.0]
'[c065] add the number 9 to the beginning of the list, then add the number 7 to the end of the list.': [1, 1.0]
'[c065] append 7 if the list contains an odd number of elements, else append 9.': [1, 0.0]
'[c065] append 9 and 7 at the end of the list.': [1, 0.125]
'[c065] append 9 and 7 to the list.': [2, 1.875]
'[c065] append the elements 9 and 7 to the end of the list.': [1, 0.0]
'[c065] duplicate each element and add 7 at the end.': [1, 1.0]
'[c065] insert 9 at the beginning and 7 at the end of the list.': [1, 1.0]
'[c065] insert the number 9 at the beginning and number 7 at the end of the list.': [1, 1.0]
'[c065] insert the number 9 at the beginning of the list and append the number 7 at the end of the list.': [1, 1.0]
'[c065] prepend 9 and append 7 to the list.': [1, 1.0]
'[c065] prepend 9 to the list and append 7 to the end of the list.': [1, 1.0]
'[c065] prepend the element 9 and append the element 7.': [1, 1.0]
'[c065] prepend the number 9 and append the number 7 to the list.': [1, 1.0]
'[c065] prepend the number 9 to the list and append the number 7 to the list.': [1, 1.0]
'[c066] move the first element to the end of the list.': [3, 3.0]
'[c066] move the last element to the front.': [1, 0.125]
'[c066] rearrange the elements in reverse order.': [1, 0.25]
'[c066] reverse the elements in the list.': [1, 0.25]
'[c066] reverse the elements.': [1, 0.125]
'[c066] rotate the elements one position to the right.': [2, 0.625]
'[c066] rotate the elements one step to the right.': [1, 0.125]
'[c066] rotate the elements to the left.': [1, 1.0]
'[c066] rotate the list to the right by one element.': [1, 0.25]
'[c066] rotate the list to the right by one position.': [2, 0.125]
'[c066] shift all elements to the left by one position and move the first element to the end.': [1, 1.0]
'[c066] sort the elements in ascending order.': [5, 1.0]
'[c067] reverse the elements and swap the first and last elements.': [1, 1.0]
'[c067] reverse the elements in the list.': [1, 0.25]
'[c067] reverse the elements of the list.': [1, 0.375]
'[c067] reverse the elements.': [3, 1.0]
'[c067] reverse the list.': [7, 2.25]
'[c067] reverse the order of the elements.': [1, 0.125]
'[c067] sort the elements in ascending order.': [5, 0.0]
'[c067] sort the elements in descending order.': [1, 0.0]
'[c068] add the elements [7, 3, 8, 4, 3] to the end of the list.': [1, 1.0]
'[c068] append 7, 3, 8, 4, 3 to the list.': [1, 1.0]
'[c068] append [7, 3, 8, 4, 3] to the original list.': [1, 1.0]
'[c068] append the elements 7, 3, 8, 4, 3 at the end of the list.': [1, 1.0]
'[c068] append the elements 7, 3, 8, 4, 3 to the list.': [1, 1.0]
'[c068] append the elements 7, 3, 8, 4, and 3 to the end of the list.': [1, 1.0]
'[c068] append the elements [7, 3, 8, 4, 3] to the given list.': [1, 1.0]
'[c068] append the elements [7, 3, 8, 4, 3] to the input list.': [1, 1.0]
'[c068] append the elements [7, 3, 8, 4, 3] to the original list.': [1, 1.0]
'[c068] append the list [7, 3, 8, 4, 3] at the end.': [1, 1.0]
'[c068] append the list [7, 3, 8, 4, 3] to any given list.': [1, 1.0]
'[c068] append the list [7, 3, 8, 4, 3] to the given list.': [2, 2.0]
'[c068] append the list [7, 3, 8, 4, 3] to the input list.': [2, 2.0]
'[c068] append the list [7, 3, 8, 4, 3] to the original list.': [2, 2.0]
'[c068] append the list [7, 3, 8, 4, 3].': [1, 1.0]
'[c068] append the sequence [7, 3, 8, 4, 3] to the original list.': [1, 1.0]
'[c068] concatenate the original list with the sequence [7, 3, 8, 4, 3].': [1, 1.0]
'[c069] add the elements [9, 3, 4, 0, 7, 2, 9, 1] at the beginning of the list.': [1, 0.0]
'[c069] add the elements [9, 3, 4, 0] at the beginning of the list.': [1, 0.0]
'[c069] add the elements [9, 3, 4, 0] to the beginning and [7, 2, 9, 1] to the end of the list.': [2, 2.0]
'[c069] add the number 9, then the list in reverse order, and finally add the number 7.': [1, 0.0]
'[c069] add the numbers [9, 3, 4, 0] to the beginning of the list.': [1, 0.0]
'[c069] add the sequence [9, 3, 4, 0] at the beginning and the sequence [7, 2, 9, 1] at the end of the list.': [1, 1.0]
? '[c069] add the sequence [9, 3, 4, 0] at the beginning of the list, and then append the reverse of the list with the additional sequence [7, 2, 9, 1].'
: [1, 0.0]
'[c069] append the elements [9, 3, 4, 0] to the end of the list, then append the list in reverse order.': [1, 1.0]
? '[c069] append the elements [9, 3, 4, 0] to the list in reverse order, followed by the original list in reverse order, and then appending [7, 2, 9, 1] at the end.'
: [1, 1.0]
'[c069] append the list [9, 3, 4, 0] in reverse order after the original list.': [1, 0.0]
'[c069] append the list [9, 3, 4, 0] to the given list.': [1, 0.0]
'[c069] append the list [9, 3, 4, 0] to the input list.': [2, 0.0]
'[c069] append the number 9, followed by the numbers 3, 4, 0, and then repeat the original list.': [1, 0.0]
'[c069] append the original list to the sequence [9, 3, 4, 0].': [1, 0.0]
'[c069] append the reversed list to the original list, and then append the list [7, 2, 9, 1].': [1, 1.0]
? '[c069] create a new list by appending the numbers 9, 3, 4, 0 to the original list, and then repeating the original list after that.'
: [1, 0.0]
'[c069] prepend the list with the elements [9, 3, 4, 0].': [1, 0.0]
'[c069] take the elements from the previous list and append the elements [9, 3, 4, 0, 7, 2, 9, 1] to it.': [1, 0.0]
'[c070] duplicate each element in the list.': [1, 1.0]
'[c070] repeat the elements in the list twice.': [1, 1.0]
'[c070] repeat the elements in the list.': [4, 4.0]
'[c070] repeat the elements of the list twice.': [2, 2.0]
'[c070] repeat the elements of the list.': [6, 5.875]
'[c070] repeat the elements twice.': [1, 1.0]
'[c070] repeat the list elements twice.': [1, 1.0]
'[c070] repeat the list twice.': [3, 3.0]
'[c070] repeat the list two times.': [1, 1.0]
? '[c071] add 2 to each element and replace any resulting numbers greater than 9 with the remainder of dividing the number by 10.'
: [1, 1.0]
'[c071] add 2 to each element and sort the resulting list in descending order.': [1, 0.125]
'[c071] add 2 to each element and then increase each element by 2.': [1, 1.0]
'[c071] add 2 to each element and then sort the list in descending order.': [1, 0.375]
'[c071] add 2 to each element, and if the resulting element is greater than or equal to 10, subtract 10 from it.': [1, 1.0]
'[c071] add 2 to each element.': [2, 2.0]
'[c071] decrement each element by 2 modulo 10.': [1, 0.0]
'[c071] increment each element by 2, then reverse the list.': [1, 0.375]
'[c071] increment each element by 2, then sort the list in descending order.': [1, 0.125]
'[c071] increment each element by 2.': [2, 2.0]
'[c071] increment each element of the original list by 2.': [1, 1.0]
'[c071] replace each element with the next element in the sequence [2, 7, 3, 8, 9, 6].': [1, 0.0]
'[c071] subtract 2 from each element and then add 1.': [1, 0.0]
'[c071] subtract each element from 10 and replace it with the result.': [1, 0.0]
'[c071] subtract each element from 10.': [1, 0.0]
'[c071] subtract each element from 9 and reverse the list.': [1, 0.0]
'[c071] subtract each element from 9 and sort the resulting list in descending order.': [1, 0.0]
'[c071] subtract each element from 9 and swap the last two elements.': [1, 0.125]
'[c072] double each element and append it to the list.': [1, 1.0]
'[c072] duplicate each element in the list.': [15, 14.875]
'[c072] duplicate each element.': [1, 1.0]
'[c072] repeat each element twice.': [3, 3.0]
'[c073] add 1 to each element and reverse the list.': [1, 0.25]
'[c073] add 1 to each element and then add 1 more to the last element.': [1, 0.125]
'[c073] add 1 to each element and then multiply by 2.': [1, 0.125]
'[c073] add 1 to each element and then replace 9 with 0 because the examples don''t have any 9''s.': [1, 0.25]
'[c073] add 1 to each element and then replace 9 with 8.': [1, 0.0]
'[c073] add 1 to each element in the list and then append the sum of the elements as the last element in the list.': [1, 0.0]
'[c073] add 1 to each element, except for the element 4 which gets multiplied by 2.': [1, 0.125]
'[c073] add 1 to each element, then multiply it by 2.': [1, 0.125]
'[c073] add 1 to each element, then replace the number 10 with 2.': [1, 0.125]
'[c073] increase each element by a certain amount.': [1, 0.625]
'[c073] increase each element by one, and if the element is 9, change it to 0.': [1, 0.25]
'[c073] increment each element by 1 and alternate between adding 1 and adding 4 to the last element.': [1, 0.125]
'[c073] increment each element by 1 and then reverse the list.': [2, 0.25]
'[c073] increment each element by 1, and if the element is greater than 9, replace it with 0.': [1, 0.25]
'[c073] increment each element by 1.': [1, 0.125]
'[c073] increment each element by one and replace any number greater than 9 with the number 9.': [1, 0.125]
'[c073] increment every element by 1, and then reverse the list.': [1, 0.125]
'[c073] replace each number with its next number in the sequence (1 becomes 2, 7 becomes 8, etc.': [1, 0.125]
'[c073] replace each number with the number that is one greater than its remainder when divided by 9.': [1, 0.125]
'[c074] filter out all numbers except for the largest one.': [1, 0.25]
'[c074] find the largest element in the list.': [1, 0.375]
'[c074] find the maximum element and remove all other elements.': [1, 0.375]
'[c074] find the maximum number(s) in the list and return them in ascending order.': [1, 0.375]
'[c074] find the maximum value(s) in the list.': [1, 0.125]
'[c074] keep only the numbers that are greater than or equal to 8.': [1, 1.0]
'[c074] keep the first and last element of the list, and remove all other elements.': [1, 0.0]
'[c074] remove all elements except for the largest element.': [1, 0.375]
'[c074] remove all elements that are less than or equal to 7.': [1, 0.875]
'[c074] return a list containing only the elements that appear in both the input list and the list [8, 9].': [1, 1.0]
'[c074] return a list containing only the maximum and second maximum elements.': [1, 0.125]
'[c074] return a list containing only the maximum element.': [1, 0.125]
'[c074] return a list of elements that are greater than or equal to 8.': [1, 1.0]
'[c074] return the largest element in the list if it is even, else return an empty list.': [1, 0.0]
'[c074] return the max and second-max elements of the list.': [1, 0.125]
'[c074] return the sublist containing only the maximum elements.': [1, 0.25]
'[c074] return the two largest elements in the list.': [1, 0.25]
'[c074] select the maximum element from the list.': [1, 0.375]
'[c074] select the maximum value in the list and append it to the result list until the list is empty.': [1, 0.375]
'[c074] select the two largest elements.': [1, 0.0]
'[c075] keep only the elements at odd indices (1, 3, 5, .': [1, 1.0]
'[c075] keep only the elements that are divisible by 2.': [1, 0.25]
'[c075] keep only the elements that are even numbers.': [1, 0.25]
'[c075] keep only the even numbers in the list.': [4, 1.0]
'[c075] keep only the even numbers.': [1, 0.25]
'[c075] keep only the numbers that are divisible by 3.': [1, 0.125]
'[c075] keep only the numbers that are greater than or equal to 5.': [1, 0.125]
'[c075] only include elements that are even numbers.': [1, 0.25]
'[c075] only keep the numbers that are even.': [1, 0.125]
'[c075] remove all elements that are not divisible by 3.': [1, 0.125]
'[c075] remove all odd numbers from the list.': [1, 0.25]
'[c075] remove any element that is not a prime number.': [1, 0.125]
'[c075] remove any element that is not divisible by 2.': [1, 0.25]
'[c075] return a new list containing elements at odd indices starting from index 1.': [1, 0.0]
'[c075] select only the odd-indexed elements in the list.': [1, 0.0]
'[c075] select the elements at even indices.': [1, 1.0]
'[c075] select the elements at the indices 0, 2, 4, 6, .': [1, 1.0]
? '[c076] append the first element, the last element, the number of elements, the first element repeated, and the last element repeated.'
: [1, 0.0]
? '[c076] append the largest element, the largest element repeated twice, the number of elements in the list, the smallest element, and the second largest element.'
: [1, 0.0]
'[c076] append the last element of the list to the list.': [1, 0.0]
? '[c076] append the last element, append the first two digits of the last element, append the first element, append the first two digits of the last element again.'
: [1, 0.0]
? '[c076] append the length of the list, then the maximum element, then repeat the first element for a number of times equal to the length of the list, and finally append the length of the list again.'
: [1, 0.125]
? '[c076] append the maximum number in the list, then append the count of elements in the list, then append the minimum number in the list, and finally repeat the maximum number.'
: [1, 0.0]
? '[c076] find the maximum number in the list, add it twice to the list, then append the length of the list and the minimum number in the list.'
: [1, 0.0]
? '[c076] generate a list of elements 2 and the last element, then append the length of the list and the first element to the new list.'
: [1, 0.0]
? '[c076] multiply the first element with the last element, then append the length of the list, then append the first element again, and finally append the last element again.'
: [1, 0.125]
? '[c076] repeat the first element 2 times, then append the length of the list, the first element again, and the length of the list again.'
: [1, 0.0]
? '[c076] repeat the first element, append the last element, take the last digit of the first element and append it, repeat the first element, and append the last element.'
: [1, 0.0]
? '[c076] repeat the largest number in the list, then append the number of elements in the list in front, and finally append the smallest number in the list.'
: [1, 0.0]
'[c076] repeat the list twice, then append the length of the list and the maximum number in the list.': [1, 0.0]
? '[c076] repeat the maximum element three times, followed by the number of elements in the list, and then the original list in reverse order.'
: [1, 0.0]
'[c076] reverse the digits of each number in the list and then sort the numbers in descending order.': [1, 0.0]
? '[c076] reverse the elements and append the length of the list, repeat the first element, and append the minimum value of the list.'
: [1, 0.25]
? '[c076] select the maximum value and append it to the list two times, then append the minimum value and the first element of the list.'
: [1, 0.0]
'[c076] take the last element of the list, repeat it as many times as its number value, and then reverse the list.': [1, 0.0]
? '[c076] take the last element, duplicate it twice, append the length of the list, then append the first element and the second element.'
: [1, 0.25]
'[c076] take the maximum value, repeat it three times, and then append the length of the list and the maximum value again.': [1, 0.0]
'[c077] calculate the sum of the elements and return the remainder of the sum divided by 9.': [1, 0.25]
'[c077] calculate the sum of the numbers in the list modulo 9.': [1, 0.25]
'[c077] count the number of elements in the list and return a list with that count.': [1, 1.0]
'[c077] count the number of elements in the list and return that count.': [1, 1.0]
'[c077] count the number of elements in the list.': [1, 1.0]
'[c077] count the number of even numbers in the list and return it as a single element list.': [1, 0.125]
'[c077] count the number of even numbers in the list.': [1, 0.25]
'[c077] count the number of odd elements in the list and return that count.': [1, 0.0]
'[c077] count the number of odd elements in the list.': [2, 0.25]
'[c077] find the maximum number in the list and return it.': [1, 0.25]
'[c077] find the maximum number in the list.': [1, 0.375]
'[c077] find the maximum value in the list.': [1, 0.125]
'[c077] find the number that is not present in the list and return it.': [1, 0.375]
'[c077] get the maximum value from the list.': [1, 0.0]
'[c077] return the length of the list minus 1.': [1, 0.0]
'[c077] return the maximum value in the list.': [1, 0.125]
'[c077] return the number of even numbers in the list.': [1, 0.0]
'[c077] return the second element of the list.': [1, 0.0]
'[c077] take the last element and return it.': [1, 0.0]
'[c078] find the largest element in the list.': [1, 1.0]
'[c078] find the maximum element in the list and return that element.': [1, 1.0]
'[c078] find the maximum element in the list.': [1, 1.0]
'[c078] find the maximum element of the list.': [1, 1.0]
'[c078] find the maximum number in the list and return it.': [1, 1.0]
'[c078] remove all elements except the largest element.': [1, 1.0]
'[c078] return the largest element in the list.': [1, 0.0]
'[c078] return the largest number in the list.': [1, 1.0]
'[c078] return the maximum element in the list.': [1, 1.0]
'[c078] return the maximum element of the list.': [1, 1.0]
'[c078] return the maximum number in the list.': [2, 1.0]
'[c078] return the maximum value in the list.': [1, 1.0]
'[c078] return the maximum value of the list.': [1, 0.0]
'[c078] select the largest element from the list.': [1, 1.0]
'[c078] select the largest element in the list.': [1, 1.0]
'[c078] select the maximum element from the given list.': [1, 1.0]
'[c078] select the maximum element in the list.': [1, 1.0]
'[c078] select the maximum number from the list.': [1, 1.0]
'[c078] select the maximum value from the list.': [1, 1.0]
'[c079] add the element values together and subtract the sum by 1.': [1, 0.0]
'[c079] add the elements and take the sum modulo 10.': [1, 1.0]
'[c079] add the elements in the list and take the modulus of the sum with 10.': [1, 1.0]
'[c079] add the elements together and take the remainder when divided by 10.': [1, 1.0]
'[c079] add the first and second elements and take the sum modulo 10.': [1, 0.625]
'[c079] add the two numbers in the list and take the sum modulo 10.': [1, 1.0]
'[c079] add the two numbers in the list.': [1, 0.125]
'[c079] add the two numbers together and replace any sums above 9 with the last digit.': [1, 0.75]
'[c079] add the two numbers together and take the modulo 9.': [1, 0.25]
'[c079] add up the elements in the list and take the difference with 9.': [1, 0.0]
'[c079] calculate the sum of all the elements in the list and return the sum % 10.': [1, 1.0]
'[c079] calculate the sum of all the elements in the list, and then take the remainder of the sum when divided by 10.': [1, 0.0]
'[c079] calculate the sum of the elements and return the result modulo 10.': [1, 1.0]
'[c079] calculate the sum of the elements and return the single digit result.': [1, 1.0]
'[c079] find the maximum element in the list.': [1, 0.25]
'[c079] find the sum of the elements and then subtract 1.': [1, 0.0]
'[c079] subtract the last element from 9.': [1, 0.0]
'[c079] sum all the elements in the list and return the sum modulo 9.': [1, 0.0]
'[c079] sum the elements of the list and return the remainder when divided by 10.': [1, 0.125]
'[c079] sum up all the numbers in the list.': [1, 1.0]
'[c080] reverse the elements and then reverse the order of the elements.': [1, 1.0]
'[c080] reverse the elements of the list.': [2, 2.0]
'[c080] reverse the elements.': [10, 10.0]
'[c080] reverse the list.': [4, 4.0]
'[c080] reverse the order of the elements.': [1, 1.0]
'[c080] sort the elements in ascending order.': [2, 0.25]
'[c081] find the maximum value in the list.': [1, 0.0]
'[c081] find the minimum element in the list.': [2, 0.875]
'[c081] find the minimum number in the list.': [2, 0.625]
'[c081] find the minimum value in the list.': [4, 0.875]
'[c081] find the smallest element in each list.': [1, 0.5]
'[c081] find the smallest element in the list.': [5, 1.75]
'[c081] find the smallest number in the list.': [4, 1.375]
'[c081] return the second smallest element in the list.': [1, 0.125]
'[c082] check if the number in the list is greater than or equal to 60.': [1, 0.375]
'[c082] extract the maximum number from the list, or return an empty list if the list is empty.': [1, 0.25]
'[c082] filter out all elements that are not divisible by 3.': [1, 0.375]
'[c082] filter out all elements that are not multiples of 10.': [1, 0.375]
'[c082] filter out all numbers that are greater than or equal to 60.': [1, 0.375]
'[c082] remove all elements except for the smallest element in the list.': [1, 0.125]
'[c082] remove all elements that are not divisible by 10.': [1, 0.375]
'[c082] remove all elements that are not divisible by 13.': [1, 0.75]
'[c082] remove all odd numbers from the list.': [1, 0.0]
'[c082] remove any element that is not divisible by 10.': [1, 0.25]
'[c082] remove the smallest value from the list.': [1, 0.5]
'[c082] return a list with the first element if it is greater than or equal to 10, else an empty list.': [1, 0.25]
'[c082] return the element in the input list that is divisible by 2 and has the largest value.': [1, 0.25]
'[c082] return the second smallest number in the list.': [1, 0.375]
'[c082] return the smallest even number in the list, or an empty list if there are no even numbers.': [1, 0.375]
'[c082] return the smallest number in the list.': [1, 0.125]
'[c082] select the element at the index 2.': [1, 0.0]
'[c082] select the even numbers from the list.': [1, 0.375]
? '[c082] select the middle element if the list length is odd, or select the second middle element if the list length is even.'
: [1, 0.375]
? '[c082] take the element in the middle of the list (if the list has an odd length) or the two elements in the middle (if the list has an even length).'
: [1, 0.375]
'[c083] find the element with the highest value.': [1, 0.125]
'[c083] find the largest number in the list.': [2, 0.125]
'[c083] find the maximum element in the list.': [5, 0.375]
'[c083] find the maximum number in the list.': [4, 0.125]
'[c083] find the maximum value in the list.': [4, 0.25]
'[c083] find the minimum element in the list.': [1, 0.125]
'[c083] find the minimum value in the list.': [1, 0.0]
'[c083] find the smallest number in the list.': [2, 0.0]
'[c084] check if any element in the list is divisible by 4.': [1, 0.125]
'[c084] check if the list contains a number divisible by 10.': [1, 0.375]
'[c084] filter out all numbers that are less than 10.': [1, 0.0]
'[c084] filter out all numbers that are not greater than or equal to 50.': [1, 0.0]
'[c084] filter out all the elements except for the ones that are greater than or equal to 50.': [1, 0.125]
'[c084] find the element with the highest value.': [1, 0.125]
'[c084] find the smallest even number in the list and remove all other elements.': [1, 0.0]
'[c084] find the smallest number in the list.': [4, 0.125]
'[c084] keep only the maximum value in the list.': [2, 0.0]
'[c084] only keep the first element of the list and remove all other elements.': [1, 0.0]
'[c084] remove all elements except for the element at index 6 (counting starts at 0).': [1, 0.875]
'[c084] return a list containing only the numbers that are greater than or equal to 10.': [1, 0.0]
'[c084] return a list of the minimum element.': [1, 0.0]
'[c084] return the largest number in the list.': [1, 0.0]
'[c084] return the last element of the list if it is even.': [1, 0.0]
'[c084] return the smallest number in the list.': [1, 0.125]
'[c085] filter out all elements except for the largest element.': [1, 0.25]
'[c085] find the largest number in the list.': [5, 2.0]
'[c085] find the maximum number in the list.': [6, 2.0]
'[c085] find the maximum value in the list.': [3, 0.75]
'[c085] keep only the elements that are greater than or equal to 20.': [1, 0.25]
'[c085] keep only the numbers that are divisible by 10.': [1, 0.125]
'[c085] return the maximum number in the list.': [1, 0.5]
'[c085] select the maximum number in each list.': [1, 0.5]
'[c085] select the smallest element in the list.': [1, 0.0]
'[c086] reverse the list.': [1, 0.0]
'[c086] sort the elements in ascending order.': [11, 0.0]
'[c086] sort the elements in descending order.': [6, 0.375]
'[c086] sort the list in ascending order.': [2, 0.0]
'[c087] rearrange the elements in descending order.': [1, 0.0]
'[c087] sort the elements in ascending order.': [13, 0.0]
'[c087] sort the list in ascending order.': [4, 0.0]
'[c087] sort the list in non-decreasing order.': [1, 0.0]
'[c087] swap the first two elements.': [1, 0.0]
'[c088] keep the original order of the elements.': [1, 0.0]
'[c088] move the first occurrence of the maximum number to the beginning of the list.': [1, 0.0]
'[c088] move the first occurrence of the maximum value in the list to the front.': [1, 0.0]
'[c088] move the largest number to the beginning of the list.': [1, 0.0]
'[c088] move the last occurrence of the maximum number in the list to the front.': [1, 0.0]
'[c088] rearrange the elements in ascending order.': [1, 0.0]
'[c088] rearrange the list elements in ascending order.': [1, 0.0]
'[c088] sort the elements in ascending order.': [8, 0.0]
'[c088] sort the elements in descending order.': [2, 0.25]
'[c088] sort the list in ascending order.': [2, 0.0]
'[c088] sort the list in non-ascending order.': [1, 0.125]
'[c089] sort the elements in ascending order.': [16, 0.0]
'[c089] sort the elements in increasing order.': [1, 0.0]
'[c089] sort the list in ascending order.': [2, 0.0]
'[c090] add 17, 21, 56, 2, and 18 to the list.': [1, 0.125]
'[c090] add 17, then 21, then 35, then 6, and finally 16.': [1, 0.0]
'[c090] add 18, 42, 77, 20, 36 to the beginning of the list.': [1, 0.0]
'[c090] add 18, then multiply by 2, add 17, divide by 5, then subtract 16.': [1, 0.0]
'[c090] always return the list [18, 42, 77, 20, 36].': [1, 1.0]
'[c090] calculate the sum of the digits of each number and then multiply the sum by 2.': [1, 0.0]
'[c090] calculate the sum of the digits of each number and then return the list [18, 42, 77, 20, 36].': [1, 0.0]
'[c090] calculate the sum of the first two elements, double it, then subtract the third element, add 5, and divide by 3.': [1, 0.0]
'[c090] convert each number to its corresponding letter in the alphabet, with 1 being ''A'', 2 being ''B'', and so on.': [1, 0.0]
'[c090] create a list of elements [18, 42, 77, 20, 36].': [1, 1.0]
'[c090] create a new list by repeating the elements [18, 42, 77, 20, 36] for each unique element in the input list.': [1, 0.125]
'[c090] divide each number by 5 and then add the corresponding number from the list [18, 42, 77, 20, 36].': [1, 0.0]
'[c090] find the sum of the digits of each number and return the sum modulo 100.': [1, 0.0]
'[c090] generate a list of elements [18, 42, 77, 20, 36].': [1, 1.0]
'[c090] multiply each element by 2, subtract 7, and divide by 5.': [1, 0.0]
'[c090] multiply each element by 6 and subtract 2.': [1, 0.0]
'[c090] replace each number in the input list with the corresponding number in a fixed pattern [18, 42, 77, 20, 36].': [1, 0.0]
'[c090] return the list [18, 42, 77, 20, 36].': [1, 1.0]
? '[c090] take the first two elements of the list, multiply the first element by 2, add the second element multiplied by 3, and then append 77, 20, and 36.'
: [1, 0.0]
'[c091] add 29 to each element and then sort the list in descending order.': [1, 0.0]
'[c091] add 75 to each element of the input list and then sort the list in descending order.': [1, 0.0]
'[c091] convert each element into its ASCII code and concatenate them.': [1, 0.0]
'[c091] convert each number to its ASCII decimal representation and then add 15 to each ASCII value.': [1, 0.0]
? '[c091] create a list of 10 numbers, where each number is the sum of the corresponding elements in the input list and a predetermined list [81, 99, 41, 23, 22, 75, 68, 30, 24, 69].'
: [1, 0.0]
'[c091] generate a list of constant elements [81, 99, 41, 23, 22, 75, 68, 30, 24, 69], regardless of the input list.': [1, 1.0]
'[c091] generate a list of random numbers.': [1, 1.0]
? '[c091] map each number from the original list to the corresponding number in the following sequence: [81, 99, 41, 23, 22, 75, 68, 30, 24, 69].'
: [1, 0.0]
? '[c091] repeat the list [81, 99, 41, 23, 22, 75, 68, 30, 24, 69] a certain number of times, based on the length of the input list.'
: [1, 0.0]
'[c091] repeat the sequence [81, 99, 41, 23, 22, 75, 68, 30, 24, 69].': [1, 0.875]
'[c091] replace each element in the list with its corresponding ASCII value plus 23 modulo 100.': [1, 0.0]
'[c091] replace each element with the corresponding element in the list [81, 99, 41, 23, 22, 75, 68, 30, 24, 69].': [1, 0.0]
'[c091] replace each number with a corresponding number in the sequence [81, 99, 41, 23, 22, 75, 68, 30, 24, 69].': [1, 0.0]
'[c091] replace each number with its corresponding ASCII code.': [1, 0.0]
'[c091] replace each number with its corresponding value in a mapping.': [1, 0.0]
'[c091] replace each number with its corresponding value in the sequence [81, 99, 41, 23, 22, 75, 68, 30, 24, 69].': [1, 0.0]
'[c091] reverse the elements and add each element to its square.': [1, 0.0]
? '[c091] rotate the elements in the list by one position to the left and then append the last element of the list nine times.'
: [1, 0.0]
'[c092] add the elements [92, 63, 34, 18, 55] at the beginning of the list.': [1, 1.0]
? '[c092] add the number 92 at the beginning of the list, and then insert the numbers 63, 34, 18, 55 before the original elements of the list.'
: [1, 0.875]
'[c092] add the number 92, followed by 63, 34, 18, and 55 to the beginning of the list.': [1, 1.0]
'[c092] add the numbers 92, 63, 34, 18, and 55 to the beginning of the list.': [1, 1.0]
'[c092] add the sequence [92, 63, 34, 18, 55] to the beginning of the list.': [1, 1.0]
'[c092] append the elements 92, 63, 34, 18, 55 to the given list.': [1, 0.125]
'[c092] append the elements [92, 63, 34, 18, 55] to the given list.': [2, 0.125]
'[c092] append the elements [92, 63, 34, 18, 55] to the input list.': [1, 0.0]
'[c092] append the numbers [92, 63, 34, 18, 55] to the list.': [1, 0.0]
'[c092] prepend [92, 63, 34, 18, 55] to the original list.': [1, 1.0]
'[c092] prepend the elements [92, 63, 34, 18, 55] to the existing list.': [1, 1.0]
'[c092] prepend the elements [92, 63, 34, 18, 55] to the list.': [1, 1.0]
'[c092] prepend the list with the numbers 92, 63, 34, 18, 55.': [1, 1.0]
'[c092] prepend the list with the numbers [92, 63, 34, 18, 55].': [1, 1.0]
'[c092] prepend the numbers 92, 63, 34, 18, and 55 to the list.': [1, 1.0]
'[c092] prepend the numbers 92, 63, 34, 18, and 55 to the original list.': [1, 1.0]
'[c092] prepend the numbers [92, 63, 34] to the input list.': [1, 0.0]
'[c092] prepend the sequence [92, 63, 34, 18, 55] to the list.': [2, 2.0]
'[c093] repeat the first element 10 times in the output list.': [1, 1.0]
'[c093] repeat the first element 10 times.': [2, 2.0]
'[c093] repeat the first element of the given list 10 times.': [1, 1.0]
'[c093] repeat the first element of the list': [1, 0.625]
'[c093] repeat the first element of the list 10 times.': [6, 6.0]
'[c093] repeat the first element of the list multiple times.': [1, 1.0]
'[c093] repeat the first element of the list ten times.': [3, 3.0]
'[c093] repeat the first element ten times.': [1, 1.0]
'[c093] repeat the first number 10 times.': [1, 1.0]
'[c093] replace all elements with the first element of the list repeated 10 times.': [1, 1.0]
'[c093] replace all the elements in the list with the first element.': [1, 1.0]
'[c093] replace each element with the first element of the list.': [1, 1.0]
'[c094] reverse the list.': [1, 0.0]
'[c094] sort the elements in ascending order.': [14, 2.125]
'[c094] sort the elements in descending order.': [2, 0.125]
'[c094] sort the list in ascending order.': [3, 0.375]
'[c095] keep only the elements that are divisible by 4.': [1, 0.125]
'[c095] remove all elements that are not divisible by 2.': [1, 0.0]
'[c095] remove the element at the beginning of the list.': [1, 0.0]
'[c095] remove the first and last element of the list.': [1, 0.875]
'[c095] remove the first and last elements from the list.': [2, 1.75]
'[c095] remove the first and last elements if they are not equal.': [1, 0.5]
'[c095] remove the first and last elements of the list.': [4, 4.0]
'[c095] remove the first and last elements.': [2, 2.0]
'[c095] remove the first element and all elements after it.': [1, 0.0]
'[c095] remove the first element if it is greater than the last element.': [1, 0.0]
'[c095] remove the first element of the list.': [1, 0.0]
'[c095] remove the first element.': [1, 0.0]
'[c095] remove the minimum element from the list.': [1, 0.0]
'[c095] select every third element starting from the second element.': [1, 0.0]
'[c095] select the elements that are divisible by 2.': [1, 0.0]
'[c096] add 98 at the beginning and 37 at the end of the list.': [1, 1.0]
'[c096] add 98 at the beginning of the list and add 37 at the end of the list.': [1, 1.0]
'[c096] add 98 to the beginning and 37 to the end of the list.': [2, 2.0]
'[c096] add 98 to the beginning of the list and add 37 to the end of the list.': [1, 1.0]
'[c096] add the number 98 at the beginning and the number 37 at the end of the list.': [2, 2.0]
'[c096] add the numbers 98 and 37 to the beginning and end of the list, respectively.': [1, 1.0]
'[c096] add the numbers 98 and 37 to the list.': [1, 1.0]
'[c096] append 98 at the beginning and 37 at the end of the array.': [1, 1.0]
'[c096] append the number 98 at the beginning and the number 37 at the end of the list.': [1, 1.0]
'[c096] create a list with the elements 98 and 37 as the first and last elements and then append the input list in between.': [1, 1.0]
'[c096] create a new list by adding 98 at the beginning and 37 at the end of the original list.': [1, 1.0]
? '[c096] create a new list with the number 98 at the beginning, followed by the original elements, and ending with the number 37.'
: [1, 1.0]
'[c096] insert 98 at the beginning and 37 at the end of the list.': [1, 1.0]
'[c096] insert the numbers 98 and 37 at the beginning and end of the list respectively.': [1, 1.0]
'[c096] insert the numbers 98 and 37 at the beginning and end of the list, respectively.': [1, 1.0]
'[c096] insert the numbers 98 and 37 at the beginning and the end of the list, respectively.': [1, 1.0]
'[c096] prepend 98 and append 37 to the existing list.': [1, 1.0]
'[c096] prepend 98 to the list and append 37 to the list.': [1, 1.0]
'[c097] add the elements [11, 21, 43, 19] at the beginning and [7, 89, 0, 57] at the end of the list.': [1, 1.0]
? '[c097] add the elements [11, 21, 43, 19] to the beginning of the list, and append the elements [7, 89, 0, 57] to the end of the list.'
: [1, 1.0]
'[c097] add the following elements to the beginning of the list: [11, 21, 43, 19].': [1, 1.0]
'[c097] add the numbers 11, 21, 43, 19 at the beginning of the list, and the numbers 7, 89, 0, 57 at the end of the list.': [1, 1.0]
'[c097] add the numbers 11, 21, 43, 19, 7, 89, 0, and 57 to the list.': [1, 1.0]
'[c097] add the numbers [11, 21, 43, 19] at the beginning and the numbers [7, 89, 0, 57] at the end.': [1, 1.0]
? '[c097] append the elements 11, 21, 43, 19 to the beginning of the list, and append the elements 7, 89, 0, 57 to the end of the list.'
: [1, 1.0]
'[c097] append the elements [11, 21, 43, 19] at the beginning and [7, 89, 0, 57] at the end of the list.': [1, 1.0]
'[c097] append the elements [11, 21, 43, 19] to the given list, then append [7, 89, 0, 57].': [1, 0.0]
'[c097] append the following list to the original list: [11, 21, 43, 19, 7, 89, 0, 57].': [1, 0.125]
'[c097] append the numbers 11, 21, 43, 19 to the beginning and append the numbers 7, 89, 0, 57 to the end of the list.': [1, 1.0]
'[c097] append the numbers 11, 21, 43, 19, the original list, the numbers 7, 89, 0, and 57.': [1, 1.0]
'[c097] append the numbers 11, 21, 43, and 19 to the given list, and then append the numbers 7, 89, 0, and 57.': [1, 0.0]
? '[c097] insert the elements 11, 21, 43, 19 at the beginning of the list, insert the elements 7, 89, 0, 57 at the end of the list.'
: [1, 1.0]
? '[c097] insert the numbers 11, 21, 43, 19 at the beginning of the list, and append the numbers 7, 89, 0, 57 at the end of the list.'
: [1, 1.0]
'[c097] prepend the elements 11, 21, 43, 19, and append the elements 7, 89, 0, 57.': [1, 1.0]
'[c097] prepend the elements [11, 21, 43, 19] and append the elements [7, 89, 0, 57].': [1, 1.0]
'[c097] prepend the list with the elements [11, 21, 43, 19] and append the list with the elements [7, 89, 0, 57].': [1, 1.0]
? '[c097] take a list and add the elements [11, 21, 43, 19] at the beginning, followed by the original list, and then add [7, 89, 0, 57] at the end.'
: [1, 1.0]
'[c098] add 1 to each digit of the number and swap the first and second digits.': [1, 0.125]
'[c098] add 1 to each element and then multiply by 2.': [1, 0.0]
'[c098] add 1 to each element and then multiply it by 2.': [1, 0.0]
'[c098] add 1 to each element in the list.': [2, 0.5]
'[c098] add 1 to each element of the list.': [1, 0.125]
'[c098] add 1 to each element.': [8, 1.25]
'[c098] add the corresponding digits of each number.': [1, 0.0]
'[c098] add the number 1 to each element and then multiply them by 2.': [1, 0.125]
'[c098] increase each element by 1 and reverse the order of the digits.': [1, 0.0]
'[c098] increment each element by 1, then multiply it by 2.': [1, 0.0]
'[c098] increment each number by 1, and if the number is divisible by 10, replace it with the sum of its digits.': [1, 0.25]
'[c099] filter out any elements that are not greater than 50.': [1, 0.625]
'[c099] filter out any numbers that are less than 50.': [1, 0.875]
'[c099] filter out elements that are greater than or equal to 60.': [1, 0.875]
'[c099] filter out elements that are less than 50.': [1, 0.75]
'[c099] keep only the numbers that are divisible by 2.': [1, 0.0]
'[c099] keep only the numbers that are greater than 50 and less than 90.': [1, 0.5]
'[c099] keep only the numbers that are greater than or equal to 50.': [3, 2.875]
'[c099] remove all elements that are not divisible by 4.': [1, 0.0]
'[c099] remove all numbers that are less than or equal to 50.': [1, 0.875]
'[c099] remove any element that is less than 50.': [1, 0.75]
'[c099] remove the first element from the list.': [1, 0.125]
? '[c099] remove the first element if it is not divisible by 2, otherwise, remove the first element and continue removing elements until an even number is encountered.'
: [1, 0.125]
'[c099] remove the smallest number from the list.': [2, 0.5]
'[c099] return a list containing only the numbers that are greater than or equal to 50.': [1, 1.0]
'[c099] return a new list containing only the elements that are greater than 50.': [1, 1.0]
'[c099] select all numbers that are greater than or equal to 50.': [1, 1.0]
'[c099] select the elements that are greater than or equal to 50.': [1, 0.875]
'[c100] reverse the elements in the list.': [2, 2.0]
'[c100] reverse the elements.': [2, 2.0]
'[c100] reverse the list.': [1, 1.0]
'[c100] reverse the order of the elements.': [3, 3.0]
'[c100] sort the elements in ascending order.': [4, 0.0]
'[c100] sort the elements in descending order.': [6, 0.0]
'[c100] sort the elements in non-decreasing order.': [1, 0.0]
'[c100] sort the elements in reverse order.': [1, 0.0]
'[c101] append the list [11, 19, 24, 33, 42, 5, 82, 0, 64, 9] to any input list.': [1, 0.0]
? '[c101] convert each number in the list to a corresponding number from the list [11, 19, 24, 33, 42, 5, 82, 0, 64, 9], where the input number modulo 10 is the index of the corresponding number in the list [11, 19, 24, 33, 42, 5, 82, 0, 64, 9].'
: [1, 0.0]
? '[c101] convert each number in the list to its corresponding ASCII value and generate a new list consisting of the ASCII values.'
: [1, 0.875]
'[c101] convert each number to its corresponding ASCII character and concatenate them together.': [1, 0.0]
'[c101] convert each number to its corresponding ASCII value and concatenate them together.': [1, 1.0]
'[c101] convert each number to its corresponding ASCII value and then sum all the ASCII values.': [1, 0.0]
? '[c101] convert each number to its corresponding value in a predefined list [11, 19, 24, 33, 42, 5, 82, 0, 64, 9], which represents the letters in the alphabet.'
: [1, 0.0]
'[c101] convert the numbers to their ASCII values, and then concatenate them as integers.': [1, 0.0]
'[c101] map each element to its corresponding ASCII value and concatenate them together.': [1, 0.0]
'[c101] map each number in the list to a corresponding number between 11 and 82, incrementing by 9 starting from 11.': [1, 0.0]
'[c101] map each number to its corresponding ASCII character using the formula `(number % 26) + 65`.': [1, 0.0]
'[c101] map each number to its corresponding ASCII value, convert it to a string, and concatenate all the strings together.': [1, 0.0]
'[c101] map each number to its corresponding position in the list [11, 19, 24, 33, 42, 5, 82, 0, 64, 9].': [1, 0.0]
'[c101] map each number to the sum of its digits.': [1, 0.0]
'[c101] repeat the list [11, 19, 24, 33, 42, 5, 82, 0, 64, 9].': [1, 0.875]
'[c101] repeat the numbers 11, 19, 24, 33, 42, 5, 82, 0, 64, 9.': [1, 1.0]
'[c101] repeat the sequence [11, 19, 24, 33, 42, 5, 82, 0, 64, 9].': [1, 0.0]
'[c101] replace each number with its corresponding value in the range [11, 19, 24, 33, 42, 5, 82, 0, 64, 9].': [1, 0.0]
'[c102] keep the elements unchanged.': [1, 1.0]
'[c102] keep the list as is.': [4, 4.0]
'[c102] keep the list as it is.': [2, 2.0]
'[c102] keep the list unchanged.': [3, 3.0]
'[c102] keep the original list as is.': [1, 1.0]
'[c102] leave the list unchanged.': [3, 3.0]
'[c102] return the input list as it is.': [1, 1.0]
'[c102] return the list as is.': [1, 1.0]
'[c102] return the original list unchanged.': [1, 1.0]
'[c102] return the original list, as none of the examples have been modified.': [1, 1.0]
'[c103] calculate the remainder of each number divided by 10.': [1, 0.0]
'[c103] calculate the sum of the digits in each number, and then take the remainder when divided by 8.': [1, 0.0]
'[c103] compute the remainder when dividing each element by 11.': [1, 0.125]
'[c103] count the number of digits in each element and return the count.': [1, 0.0]
'[c103] count the number of digits in each element and return the result as a single element list.': [1, 0.125]
'[c103] count the number of digits in each number and return that count as a single-element list.': [1, 0.0]
'[c103] count the number of digits in each number and return the result as a single element list.': [1, 0.125]
'[c103] count the number of digits in the element and return the count.': [1, 0.0]
'[c103] count the number of digits in the first element of the list.': [1, 0.375]
'[c103] count the number of digits in the number and return it as a single-digit number.': [1, 0.0]
'[c103] count the number of digits in the smallest number and output that count.': [1, 0.125]
'[c103] determine the number of digits in the first element and return it as a list.': [1, 0.0]
'[c103] find the number of digits in the first element and return it as a single-element list.': [1, 0.25]
'[c103] find the number with the smallest number of digits.': [1, 0.125]
'[c103] return the last digit of the first element.': [1, 0.0]
'[c103] return the length of the list.': [2, 2.0]
'[c103] return the number of digits in the first element of the list.': [1, 0.0]
'[c103] take the last digit of each number.': [1, 0.0]
'[c103] take the last two digits of each number, add them, and take the remainder when divided by 10.': [1, 0.0]
'[c104] find the largest number in the list.': [1, 1.0]
'[c104] find the maximum element in the list.': [2, 1.875]
'[c104] find the maximum number in the list and return a list with the maximum number as the only element.': [1, 1.0]
'[c104] find the maximum number in the list.': [5, 5.0]
'[c104] find the maximum value in the list.': [2, 2.0]
'[c104] return the largest number in the list.': [1, 1.0]
'[c104] return the maximum element in the list.': [1, 1.0]
'[c104] select the largest number from the list and remove all other numbers.': [1, 1.0]
'[c104] select the maximum element from the list.': [1, 1.0]
'[c104] select the maximum number from the list.': [3, 3.0]
'[c104] select the maximum number in the list.': [2, 2.0]
'[c105] append the list itself to the end.': [1, 0.0]
'[c105] duplicate the last element and append it to the list.': [1, 0.0]
'[c105] duplicate the second element and append it to the list.': [2, 0.25]
'[c105] duplicate the second-to-last element and append it to the list.': [1, 0.0]
'[c105] insert the second element after every element in the list.': [1, 0.5]
'[c105] insert the second element after every occurrence of the first element.': [1, 0.375]
'[c105] insert the second element after every occurrence of the third element.': [1, 0.375]
'[c105] repeat each number except for the last one.': [1, 0.375]
'[c105] repeat the last element of the list.': [1, 0.0]
'[c105] repeat the last element twice.': [2, 0.0]
'[c105] repeat the second element after every element in the list.': [1, 0.5]
'[c105] repeat the second element in the list.': [1, 0.375]
'[c105] repeat the second element of the list after every occurrence of the second last element.': [1, 0.625]
'[c105] repeat the second element of the list three times.': [1, 0.0]
'[c105] repeat the second element of the list twice after each element.': [1, 0.5]
'[c105] repeat the second element of the list twice.': [1, 0.375]
'[c105] repeat the second element twice after each element.': [1, 0.375]
'[c105] repeat the second to last element in the list.': [1, 0.5]
'[c106] sort the elements in ascending order.': [19, 19.0]
'[c106] sort the list in ascending order.': [1, 1.0]
'[c107] remove all duplicate elements and keep only one occurrence of each element in the list.': [1, 1.0]
'[c107] remove all duplicates in the list and keep the order of the elements.': [1, 1.0]
'[c107] remove any duplicate elements and return the unique elements in the original order.': [1, 1.0]
'[c107] remove any duplicate elements.': [1, 1.0]
'[c107] remove consecutive duplicate elements.': [1, 0.25]
'[c107] remove duplicate elements and keep the order of the remaining elements.': [2, 2.0]
'[c107] remove duplicate elements and maintain the order of the remaining elements.': [1, 1.0]
'[c107] remove duplicate elements and preserve their original order.': [1, 1.0]
'[c107] remove duplicate elements and provide the elements in the original order.': [1, 1.0]
'[c107] remove duplicate elements from the list and maintain the original order.': [1, 1.0]
'[c107] remove duplicate numbers while maintaining the original order.': [1, 1.0]
'[c107] remove duplicates and keep the order of the elements.': [1, 1.0]
'[c107] remove duplicates and keep the order of the unique elements.': [1, 1.0]
'[c107] remove duplicates and keep the original order of elements.': [1, 1.0]
'[c107] remove duplicates and maintain the original order of the elements.': [1, 1.0]
'[c107] remove duplicates and sort the elements in ascending order.': [1, 0.5]
'[c107] remove duplicates from the list while maintaining the original order of the elements.': [1, 1.0]
'[c107] remove duplicates from the list.': [2, 2.0]
'[c108] add the first and last element of the list and concatenate them together.': [1, 0.75]
'[c108] add the first and last element of the list and return the sum.': [1, 0.0]
'[c108] add the first and last elements and return the result.': [1, 0.0]
'[c108] add the two digits of the numbers and take the remainder when divided by 100.': [1, 0.625]
'[c108] add up all the digits in the number and return the sum.': [1, 0.0]
'[c108] add up all the digits of the numbers in the list and return the sum.': [1, 0.0]
'[c108] add up all the numbers in the list.': [2, 2.0]
'[c108] add up the digits in each element and concatenate them together.': [1, 0.0]
'[c108] add up the digits of each number and return the sum.': [1, 0.0]
'[c108] add up the two numbers and concatenate the result.': [1, 0.0]
'[c108] calculate the sum of all the numbers in the list and then subtract the largest number.': [1, 0.5]
'[c108] calculate the sum of the numbers in the list.': [1, 1.0]
'[c108] calculate the sum of the numbers.': [1, 1.0]
'[c108] find the sum of all the numbers in the list.': [1, 1.0]
'[c108] find the sum of the elements in the list.': [1, 1.0]
'[c108] find the sum of the elements.': [1, 1.0]
'[c108] reverse the digits of each number and add them together.': [1, 0.125]
'[c108] sum all the elements together.': [1, 1.0]
'[c108] sum all the numbers in the list and then replace it with the sum modulo 100.': [1, 1.0]
'[c109] calculate the product of the numbers in the list.': [1, 0.875]
'[c109] compute the product of the numbers in the list.': [1, 1.0]
'[c109] concatenate the numbers together.': [1, 0.25]
'[c109] multiply all the elements in the list and return the result.': [1, 1.0]
'[c109] multiply all the elements in the list together.': [2, 0.875]
'[c109] multiply all the elements in the list.': [2, 1.0]
'[c109] multiply all the elements together.': [5, 4.875]
'[c109] multiply all the numbers in the list and return the result.': [1, 0.875]
'[c109] multiply all the numbers in the list together.': [4, 3.875]
'[c109] multiply all the numbers together.': [1, 0.0]
'[c109] multiply the elements of the list together.': [1, 0.875]
'[c110] extract the minimum, maximum, and maximum elements from the list.': [1, 0.375]
'[c110] filter out any number less than 10.': [1, 0.25]
'[c110] filter out elements that are less than 20 and greater than 90.': [1, 0.0]
'[c110] keep only the numbers that are greater than or equal to 20 and less than or equal to 80.': [1, 0.25]
'[c110] remove all elements that are not multiples of 3.': [1, 0.125]
'[c110] remove the smallest and largest elements from the list.': [1, 0.375]
'[c110] return a list of the three largest numbers in the given list in ascending order.': [1, 0.5]
'[c110] return the list if it contains only one element, else return a new list sorted in ascending order.': [1, 0.375]
'[c110] select the 2nd, 3rd, and 6th largest numbers from the list.': [1, 0.75]
'[c110] select the largest two elements from the list, disregarding any other elements.': [1, 0.375]
'[c110] select the second, third, and sixth elements of the list.': [1, 0.0]
'[c110] sort the elements in ascending order.': [9, 3.875]
'[c111] find the maximum number in the list and repeat it that many times.': [1, 0.5]
'[c111] keep only the first element if it is less than 10, else repeat the first element 13 times.': [1, 0.0]
'[c111] remove any numbers less than 10 and repeat the largest number.': [1, 0.125]
'[c111] repeat the first element of the list a number of times equal to the last element of the list.': [1, 0.125]
'[c111] repeat the first element of the list a number of times equal to the second element in the list.': [1, 0.25]
'[c111] repeat the largest element of the list multiple times.': [1, 0.0]
'[c111] repeat the maximum element in the list a certain number of times.': [1, 0.125]
'[c111] repeat the maximum element in the list several times.': [1, 0.0]
'[c111] repeat the maximum number in the list to replace all the other numbers.': [1, 0.0]
'[c111] repeat the maximum number in the list.': [1, 0.0]
'[c111] replace all elements except the first one with the first element.': [1, 0.0]
'[c111] replace all elements in the list with the largest element in the list.': [1, 0.125]
'[c111] replace all elements in the list with the maximum element in the list.': [1, 0.0]
'[c111] replace each element with the maximum element in the list.': [1, 0.0]
'[c111] replace every element in the list with the maximum element in the list.': [1, 0.0]
'[c111] replace the list with a list that only contains the maximum number in the original list.': [1, 0.0]
'[c111] return a list containing the maximum element repeated multiple times.': [1, 0.125]
'[c111] return a list with the maximum element repeated multiple times.': [1, 0.0]
? '[c111] return an empty list if the length of the input list is less than or equal to 2, else return a list with the maximum element repeated 10 times.'
: [1, 0.0]
? '[c111] return an empty list if the length of the original list is greater than or equal to 6, otherwise repeat the first element of the original list 13 times.'
: [1, 0.0]
'[c112] check if a number is a prime number.': [1, 0.0]
'[c112] convert each element into its corresponding position in the list, starting from 1.': [1, 0.0]
'[c112] create a list of numbers from 1 to the maximum number in the given list.': [1, 0.0]
'[c112] find all the prime numbers in the list.': [1, 0.125]
'[c112] generate a list of all the numbers from 1 up to the maximum number in the input list, in ascending order.': [1, 0.125]
'[c112] generate a list of consecutive numbers from 1 to the largest number present in the input list.': [1, 0.0]
'[c112] generate a list of integers from 1 to n, where n is the maximum number in the input list.': [1, 0.125]
'[c112] generate a list of numbers from 1 to N, where N is the maximum number in the input list.': [1, 0.125]
'[c112] generate a list of numbers from 1 to n, where n is the maximum number in the original list.': [1, 0.0]
'[c112] generate a list of numbers from 1 to the length of the given list.': [1, 0.0]
'[c112] generate a list of numbers from 1 to the length of the original list.': [1, 0.0]
'[c112] generate a list of numbers from 1 to the maximum number in the input list.': [1, 0.25]
'[c112] generate a list of numbers from 1 to the maximum number in the input, in ascending order.': [1, 0.0]
'[c112] generate a list of numbers starting from 1 and incrementing by 1 until the length of the input list.': [1, 0.0]
? '[c112] generate a list of numbers starting from 1 up to the maximum number in the input list, excluding any numbers that are already in the input list.'
: [1, 0.0]
'[c112] generate a list of numbers starting from 1 up to the maximum number in the input list.': [1, 0.125]
? '[c112] generate a sequence of numbers from 1 up to the maximum number in the input list, excluding any numbers that are already present in the input list.'
: [1, 0.0]
'[c112] select the elements that are between 1 and the maximum value in the list, inclusive.': [1, 0.125]
'[c112] sort the elements in ascending order.': [1, 0.0]
'[c112] sort the numbers in ascending order.': [1, 0.0]
'[c113] filter out all numbers that are less than 10.': [1, 0.0]
'[c113] filter out numbers that are not divisible by 2 and 3.': [1, 0.125]
'[c113] filter out numbers that are not divisible by 2.': [1, 0.125]
'[c113] keep all the numbers in the list that are less than or equal to 50.': [1, 0.0]
'[c113] keep only the numbers that are divisible by 2.': [2, 0.125]
'[c113] remove any element that appears more than once.': [1, 0.25]
'[c113] remove any elements that are less than 10 or greater than 50.': [1, 0.0]
'[c113] remove any elements that are not divisible by 2.': [1, 0.0]
'[c113] remove any number that is divisible by 2.': [1, 0.0]
'[c113] remove any number that is not divisible by 2.': [1, 0.125]
'[c113] remove any numbers that are greater than 10.': [1, 0.0]
'[c113] remove any numbers that are not divisible by 2.': [1, 0.125]
'[c113] remove the elements that are greater than 30.': [1, 0.0]
'[c113] remove the largest and smallest elements from the list.': [1, 0.0]
'[c113] select all elements that are less than or equal to 10.': [1, 0.0]
'[c113] select elements that are less than or equal to 10.': [1, 0.0]
'[c113] select the elements that are divisible by 2.': [1, 0.125]
'[c113] select the elements with even indices.': [1, 0.0]
'[c113] select the numbers that are less than or equal to 30.': [1, 0.0]
'[c114] add the last element of the list to the beginning and end of the list.': [1, 0.375]
'[c114] append the first element to the end of the list.': [6, 6.0]
'[c114] concatenate the list with its reverse.': [1, 0.25]
'[c114] duplicate the first element and append it at the end of the list.': [1, 1.0]
'[c114] duplicate the first element and append it to the list.': [1, 1.0]
'[c114] duplicate the first element at the end of the list.': [1, 1.0]
'[c114] duplicate the last element and append it at the beginning and end of the list.': [1, 1.0]
'[c114] duplicate the last element and append it to the list.': [1, 1.0]
'[c114] insert the first element at the beginning and end of the list.': [1, 1.0]
'[c114] insert the first element at the end of the list.': [1, 0.125]
'[c114] prepend the last element to the list.': [2, 2.0]
'[c114] repeat the first element at the end of each list.': [1, 1.0]
'[c114] repeat the first element at the end of the list.': [2, 2.0]
'[c115] add the largest and smallest elements of the list as the first and last elements respectively.': [1, 0.0]
'[c115] add the maximum value in the list to the beginning and end of the list.': [1, 0.0]
'[c115] add the sum of the list elements to the beginning of the list.': [1, 0.0]
'[c115] append the sum of the elements at the beginning and the end of the list.': [1, 0.0]
'[c115] calculate the sum of the first and last element, then append the sum to the beginning and end of the list.': [1, 0.0]
'[c115] compute the sum of the elements and append it to the end of the list.': [1, 0.0]
'[c115] find the maximum number in the list and append it to the beginning of the list.': [1, 0.0]
? '[c115] find the maximum value in the list and append it to the beginning, and then append the sum of all the numbers in the list to the end.'
: [1, 0.0]
'[c115] find the sum of the distinct elements in the list, and then append that sum to the beginning of the list.': [1, 0.0]
'[c115] find the sum of the elements modulo 100, and then append it to the list.': [1, 0.0]
? '[c115] find the sum of the elements, find the smallest element, and then replace all occurrences of the smallest element with the sum.'
: [1, 0.0]
'[c115] find the sum of the unique elements in the list and append it to the list.': [1, 0.0]
'[c115] insert the maximum element before and after the list.': [1, 0.0]
'[c115] keep the elements that appear the most and sum them up, then add the maximum element to the list.': [1, 0.0]
'[c115] obtain the sum of the list and add 11 to it.': [1, 0.0]
'[c115] prepend the sum of the first and last elements of the list to the list.': [1, 0.0]
'[c115] remove duplicate elements and sort the remaining elements in ascending order.': [1, 0.0]
'[c115] remove duplicates and append the sum of the list.': [1, 0.0]
? '[c115] remove duplicates and sort the elements in ascending order, then append the sum of the numbers as the first element of the list.'
: [1, 0.0]
'[c116] add the list in reverse to itself.': [1, 1.0]
'[c116] append the elements in reverse order.': [1, 1.0]
'[c116] append the first number of the list at the beginning and end of the list.': [1, 0.25]
'[c116] append the list in reverse order and then append the list again.': [1, 0.125]
'[c116] append the list to itself.': [1, 1.0]
'[c116] append the list with its reverse.': [1, 1.0]
'[c116] create a new list by reversing the original list and appending it to itself.': [1, 1.0]
'[c116] first reverse the list, then append the reversed list after the original list.': [1, 0.125]
'[c116] repeat the list in reverse order and append it to the original list.': [1, 1.0]
'[c116] reverse the array, duplicate it, and append it to itself.': [1, 1.0]
'[c116] reverse the list and append the list itself.': [1, 0.375]
'[c116] reverse the list and append the original list to itself.': [1, 0.125]
'[c116] reverse the list and append the original list to the reversed list.': [1, 0.0]
'[c116] reverse the list and append the reverse again.': [1, 1.0]
'[c116] reverse the list and append the reversed list after the original list.': [1, 1.0]
'[c116] reverse the list and append the reversed list to the original list.': [1, 1.0]
'[c116] reverse the list and concatenate it with itself.': [1, 0.125]
'[c116] reverse the list and duplicate the elements.': [1, 1.0]
'[c116] reverse the list and then append the original list to itself.': [1, 0.25]
'[c116] take the last element of the list, then reverse the list and append the last element again.': [1, 0.375]
'[c117] rearrange the elements in ascending order.': [1, 0.125]
'[c117] reverse the list.': [1, 0.0]
'[c117] sort the elements in ascending order.': [15, 1.125]
'[c117] sort the elements in increasing order.': [1, 0.0]
'[c117] sort the list in ascending order.': [2, 0.125]
'[c118] move the first occurrence of the number 42 to the end.': [1, 0.25]
'[c118] move the maximum element to the front.': [1, 0.0]
'[c118] rearrange the elements in ascending order.': [1, 0.125]
'[c118] sort the elements in ascending order.': [15, 1.25]
'[c118] sort the list in ascending order.': [2, 0.125]
'[c119] add 8 at the beginning and end of the list.': [1, 0.25]
'[c119] add an 8 to the beginning and end of the list.': [1, 0.125]
'[c119] add an element 8 at the beginning and end of the list.': [1, 0.125]
'[c119] add the number 8 at the beginning and the end of the list.': [1, 0.125]
'[c119] add the number 8 to the beginning and end of the list.': [1, 0.125]
'[c119] append the first element at the end of the list.': [1, 0.375]
'[c119] append the number 8 to the beginning and end of the list.': [1, 0.25]
'[c119] append the number 8 to the end of the list.': [2, 0.375]
'[c119] insert 8 at the beginning and end of the list.': [1, 0.25]
'[c119] insert an 8 at the beginning and end of the list.': [1, 0.375]
'[c119] insert the number 8 at the beginning and at the end of the list.': [1, 0.125]
'[c119] insert the number 8 at the beginning and end of the list.': [5, 0.75]
'[c119] insert the number 8 at the beginning and the end of the list.': [1, 0.125]
'[c119] prepend 8 to the list, and then append 8 to the list.': [1, 0.125]
'[c119] prepend the number 8 to the list if it does not already start with 8, and then append 8 to the list.': [1, 0.625]
'[c120] keep only the first element of the list.': [4, 4.0]
'[c120] keep only the first element.': [1, 1.0]
'[c120] return a list containing only the first element.': [1, 1.0]
'[c120] return the first element of the list.': [9, 3.0]
'[c120] return the first element.': [1, 1.0]
'[c120] select the first element and discard the rest.': [1, 1.0]
'[c120] select the first element of the list and return it.': [1, 1.0]
'[c120] select the first element.': [1, 1.0]
'[c120] select the smaller number in the list.': [1, 0.25]
'[c121] find the maximum element in the list.': [5, 1.5]
'[c121] find the maximum number in the list.': [5, 1.625]
'[c121] find the maximum value in the list.': [4, 1.25]
'[c121] keep only the largest element.': [1, 0.375]
'[c121] return the largest element in the list.': [1, 0.5]
'[c121] return the largest number in the list.': [1, 0.125]
'[c121] select the largest element in the list and return it.': [1, 0.375]
'[c121] select the largest number in the list.': [1, 0.5]
'[c121] select the maximum number from the list.': [1, 0.25]
'[c122] filter out numbers that are not divisible by 2.': [1, 0.125]
'[c122] find the largest element in the list.': [1, 0.125]
'[c122] find the largest number in the list.': [1, 0.375]
'[c122] find the maximum element in the list.': [4, 0.75]
'[c122] find the maximum number in the list.': [2, 0.375]
'[c122] find the maximum value in the list.': [1, 0.25]
'[c122] find the minimum element in the list.': [1, 0.125]
'[c122] find the smallest even number in the list.': [1, 0.125]
'[c122] find the smallest number in the list.': [2, 0.375]
'[c122] identify the maximum value in the list and return it as a list with only one element.': [1, 0.125]
'[c122] keep the maximum element in the list.': [1, 0.125]
'[c122] return a list containing only the largest number in the original list.': [1, 0.0]
'[c122] select the largest number from the list.': [1, 0.125]
'[c122] select the maximum number from the list.': [1, 0.0]
'[c122] take the smallest element of the list.': [1, 0.125]
'[c123] find the maximum element in the list.': [3, 1.625]
'[c123] find the maximum number in the list.': [4, 2.0]
'[c123] find the maximum value in the list.': [5, 2.25]
'[c123] identify the largest number in the list and return it.': [1, 0.625]
'[c123] return a list with only the maximum element.': [1, 0.375]
'[c123] return a new list containing only the maximum element.': [1, 0.25]
'[c123] return the largest number in the list.': [1, 0.625]
'[c123] return the maximum number in the list.': [1, 0.5]
'[c123] select the maximum element from the list and return a list with only that element.': [1, 0.375]
'[c123] select the maximum value in the list.': [1, 0.375]
'[c123] take the maximum value in the list as the output.': [1, 0.5]
'[c124] filter out all elements that are not equal to 1.': [1, 0.25]
'[c124] filter out all the numbers that are not equal to 1.': [1, 0.125]
'[c124] find the largest unique element in the list.': [1, 0.375]
'[c124] find the maximum element in the list.': [4, 1.25]
'[c124] find the maximum number in the list.': [2, 0.625]
'[c124] find the maximum value in the list.': [1, 0.375]
'[c124] find the mode (most common element) in the list.': [1, 0.375]
'[c124] find the smallest number in the list.': [4, 0.875]
'[c124] find the unique element in the list.': [2, 0.75]
'[c124] keep only the element that appears the most number of times in the list.': [1, 0.625]
'[c124] return a list with only the first element.': [1, 0.5]
'[c124] return the smallest number in the list.': [1, 0.5]
'[c125] find the two largest numbers in the list.': [1, 0.25]
'[c125] keep only the duplicates in the list.': [1, 0.0]
'[c125] keep the elements that appear more than once in the list.': [1, 0.125]
'[c125] keep the first and last elements of the list.': [1, 0.375]
'[c125] only keep the elements that appear more than once in the list.': [1, 0.0]
'[c125] remove all duplicate elements from the list, keeping only one instance of each element.': [1, 0.0]
'[c125] remove all duplicate numbers.': [1, 0.0]
'[c125] remove all duplicates from the list.': [1, 0.0]
'[c125] remove all duplicates in the list and keep the order of the remaining elements.': [1, 0.0]
'[c125] remove all duplicates in the list.': [1, 0.0]
'[c125] remove all elements that appear more than once in the list.': [1, 0.0]
'[c125] remove all numbers that are greater than or equal to 50.': [1, 0.0]
'[c125] remove any duplicate elements from the list.': [1, 0.0]
'[c125] remove any element that occurs more than once in the list.': [1, 0.0]
'[c125] remove duplicate elements in the list.': [1, 0.0]
'[c125] remove duplicate elements.': [1, 0.0]
'[c125] remove duplicates from the list.': [1, 0.0]
'[c125] remove the elements that appear more than once in the list.': [1, 0.0]
'[c125] select the elements that appear more than once in the list.': [1, 0.0]
'[c125] select the first and last elements.': [1, 0.5]
'[c126] remove any number that is less than 50.': [1, 0.0]
'[c126] remove the element at the beginning of the list.': [1, 1.0]
'[c126] remove the first element from the list.': [4, 4.0]
'[c126] remove the first element if it is even.': [1, 0.875]
'[c126] remove the first element if it is smaller than the second element.': [1, 0.875]
'[c126] remove the first element of the list.': [6, 6.0]
'[c126] remove the first element.': [6, 6.0]
'[c127] remove the last element from the list.': [8, 8.0]
'[c127] remove the last element if it is an odd number.': [1, 0.875]
'[c127] remove the last element of the list.': [5, 5.0]
'[c127] remove the last element.': [6, 6.0]
'[c128] keep only the numbers that are divisible by 3.': [1, 0.0]
'[c128] select the numbers that are divisible by 2 and order them in increasing order.': [1, 0.0]
'[c128] select the numbers that are less than or equal to 10 and in ascending order.': [1, 0.0]
'[c128] sort the elements in ascending order.': [16, 0.0]
'[c128] sort the elements in increasing order.': [1, 0.0]
'[c129] extract all unique elements from the list.': [1, 0.25]
'[c129] find the distinct elements in the list.': [1, 0.375]
'[c129] find the elements that appear more than once in the list and remove the duplicates.': [1, 0.25]
'[c129] find the unique elements in the list.': [1, 0.25]
'[c129] keep only the elements that have two or more occurances in the list.': [1, 0.125]
'[c129] keep the elements in the list that are not duplicates.': [1, 0.25]
'[c129] remove all duplicate elements and keep the original order of the elements.': [1, 0.125]
'[c129] remove all duplicate elements and only keep unique elements in the list.': [1, 0.125]
'[c129] remove all duplicates and return the remaining elements in the original order.': [1, 0.25]
'[c129] remove all duplicates from the list.': [3, 0.875]
'[c129] remove all duplicates in the list and keep the order of the unique elements.': [1, 0.0]
'[c129] remove duplicates and keep the elements in the order they are encountered.': [1, 0.25]
'[c129] remove duplicates and keep the elements in the original order.': [1, 0.25]
'[c129] remove duplicates and sort the elements in ascending order.': [1, 0.25]
'[c129] return a list of elements that appear more than once.': [1, 0.375]
'[c129] return a list of elements that occur more than once.': [1, 0.5]
'[c129] return the two smallest elements of the list.': [1, 0.0]
'[c129] select the numbers that appear more than once and remove duplicates, and then sort them in ascending order.': [1, 0.625]
'[c130] check if an element occurs more than once in the list.': [1, 0.0]
'[c130] extract only the numbers that are larger than 10.': [1, 0.0]
'[c130] filter out all numbers that are less than or equal to 10.': [1, 0.0]
'[c130] filter out numbers that are not prime.': [1, 0.0]
'[c130] keep only the elements that are greater than or equal to 10.': [1, 0.0]
'[c130] keep the numbers that have two digits.': [1, 0.0]
'[c130] pick out the elements that are greater than or equal to 10.': [1, 0.0]
'[c130] remove all elements except the first two.': [1, 0.0]
'[c130] remove all elements that are divisible by 2.': [1, 0.0]
'[c130] remove all even numbers from the list.': [1, 0.0]
'[c130] remove all numbers that repeat more than once.': [1, 0.0]
'[c130] remove duplicate elements from the list and sort it in ascending order.': [1, 0.0]
'[c130] remove the first and last elements of the list.': [2, 0.5]
'[c130] remove the first element and the last element.': [1, 0.25]
'[c130] remove the first element if it is even.': [1, 0.0]
'[c130] remove the last element if it is even.': [1, 0.0]
'[c130] remove the maximum element from the list.': [1, 0.0]
'[c130] return a list of elements that are greater than or equal to 10.': [1, 0.0]
'[c130] select the numbers that are greater than or equal to 50.': [1, 0.0]
'[c131] keep only the elements that are smaller than 50.': [1, 0.25]
'[c131] keep the elements at even indices in the list.': [1, 0.125]
'[c131] remove all elements that are not divisible by 2.': [1, 0.375]
'[c131] remove all even numbers from the list.': [1, 0.125]
'[c131] remove any element that is not divisible by 5.': [1, 0.25]
'[c131] remove any numbers that are divisible by 10 or end in a 9.': [1, 0.375]
'[c131] remove the element at index 2 and all elements after it.': [1, 0.25]
'[c131] remove the element at index i if i is even.': [1, 0.125]
'[c131] remove the elements that are not divisible by 2.': [1, 0.25]
'[c131] remove the elements that are not divisible by 5.': [1, 0.25]
'[c131] remove the elements that are not multiples of 2 or 5.': [1, 0.25]
'[c131] remove the elements that are not multiples of 2.': [1, 0.125]
'[c131] remove the even numbers from the list.': [1, 0.25]
'[c131] remove the first and last elements from the list.': [1, 0.25]
'[c131] remove the last element if it is even.': [1, 0.0]
? '[c131] remove the last element if it is greater than or equal to the second-to-last element, otherwise remove the second-to-last element.'
: [1, 0.25]
'[c131] remove the last element if it is less than or equal to 10.': [1, 0.25]
'[c131] remove the last element of the list.': [1, 0.375]
'[c131] remove the second element from the list.': [1, 0.0]
'[c131] return a new list with the first element and every third element after that.': [1, 0.125]
'[c132] keep only the numbers that are divisible by 3.': [2, 0.0]
'[c132] remove all elements that are divisible by 3.': [1, 0.0]
'[c132] remove all elements that are not divisible by 2 or 5.': [1, 0.0]
'[c132] remove any element that contains the digit 1.': [1, 0.0]
'[c132] remove any element that is divisible by 11.': [1, 0.125]
'[c132] remove any elements greater than 10.': [1, 0.0]
'[c132] remove any elements that are divisible by 10.': [1, 0.375]
'[c132] remove any numbers greater than 10 from the list.': [1, 0.0]
'[c132] remove any numbers that are divisible by 5.': [1, 0.125]
'[c132] remove any numbers that are greater than 10.': [1, 0.0]
'[c132] remove any numbers that have more than two digits.': [1, 0.0]
'[c132] remove any numbers that have two digits.': [1, 0.25]
'[c132] remove the element at index 2.': [1, 1.0]
'[c132] remove the element at the third index.': [1, 0.625]
'[c132] remove the elements that are divisible by 10.': [1, 0.25]
'[c132] remove the largest number from the list.': [1, 0.0]
'[c132] remove the numbers that are multiples of 10.': [1, 0.25]
'[c132] remove the second and third elements from the list.': [1, 0.0]
'[c132] remove the second element of each list.': [1, 0.0]
'[c133] filter out all numbers that are less than 10.': [1, 0.0]
'[c133] keep only the elements that are divisible by 2.': [1, 0.0]
'[c133] keep only the elements that are divisible by 4.': [1, 0.0]
'[c133] keep only the elements that are greater than 10.': [1, 0.0]
'[c133] keep only the elements that are less than 40.': [1, 0.0]
'[c133] keep only the numbers greater than or equal to 30.': [1, 0.0]
'[c133] keep only the numbers that are divisible by 2.': [2, 0.0]
'[c133] keep only the numbers that are divisible by 3.': [1, 0.0]
'[c133] keep only the numbers that are divisible by 4.': [1, 0.0]
'[c133] keep the elements at the first, second, fifth, and sixth positions, and remove the rest.': [1, 0.0]
'[c133] keep the elements at the indices that are divisible by 3.': [1, 0.0]
'[c133] keep the first and every third elements in the list.': [1, 0.0]
'[c133] keep the first and last elements.': [1, 0.0]
'[c133] keep the first element and remove all other elements.': [1, 0.0]
'[c133] keep the first element, then only keep elements that are greater than the previous element.': [1, 0.0]
'[c133] only keep the numbers that are less than or equal to 50.': [1, 0.0]
'[c133] select the elements at indices 0, 5, 6, 7, and the last element of the list.': [1, 1.0]
'[c133] select the first element and then select every third element after that.': [1, 0.0]
'[c133] select the numbers that are divisible by 7.': [1, 0.0]
'[c134] keep only the first occurrence of each element in the list.': [1, 0.0]
'[c134] keep only the unique elements in the list.': [1, 0.0]
'[c134] remove all duplicates and keep the elements in their original order.': [1, 0.0]
'[c134] remove all elements that are not the maximum value in the list.': [1, 0.0]
'[c134] remove all the elements that appear more than once.': [1, 0.0]
'[c134] remove any consecutive duplicate elements.': [1, 0.0]
'[c134] remove any duplicates from the list and keep the original order of the elements.': [1, 0.0]
'[c134] remove consecutive duplicate elements in the list.': [1, 0.0]
'[c134] remove consecutive duplicate elements.': [4, 0.0]
'[c134] remove consecutive duplicates from the list.': [1, 0.0]
'[c134] remove duplicate elements and keep the order of the remaining elements.': [1, 0.0]
'[c134] remove duplicate elements from the list, while preserving the order.': [1, 0.0]
'[c134] remove duplicate elements from the list.': [1, 0.0]
'[c134] remove duplicate elements while maintaining the order of the elements.': [1, 0.0]
'[c134] remove duplicate numbers in the list.': [1, 0.0]
'[c134] remove duplicates from the list while maintaining the order of the elements.': [1, 0.0]
'[c134] remove duplicates from the list, keeping only the first occurrence of each element.': [1, 0.0]
'[c135] remove all duplicates from the list.': [1, 0.125]
'[c135] remove all instances of the number 7 from the list.': [2, 0.75]
'[c135] remove all occurrences of the element 7 except for the first occurrence.': [1, 0.0]
'[c135] remove all occurrences of the number 7 from the list.': [1, 0.125]
'[c135] remove all repeated elements from the list.': [1, 0.0]
'[c135] remove any duplicate elements and keep the original order of the elements.': [1, 0.125]
'[c135] remove any duplicate elements, keeping only the first occurrence.': [1, 0.125]
'[c135] remove consecutive duplicate elements.': [1, 0.0]
'[c135] remove the first element if it is equal to 7.': [1, 0.75]
'[c135] remove the first occurrence of the number 7 in the list.': [1, 0.875]
'[c135] remove the first occurrence of the number 7.': [4, 3.625]
'[c135] remove the last element if it is equal to 7.': [1, 0.0]
'[c135] remove the last occurrence of the number 7 from the list.': [1, 0.0]
'[c135] remove the middle element if there are an odd number of elements, otherwise do nothing.': [1, 0.125]
'[c135] remove the second occurrence of the number 7.': [2, 0.0]
'[c136] remove all duplicate elements from the list.': [2, 0.5]
'[c136] remove all duplicate elements, keeping only one occurrence of each element.': [1, 0.125]
'[c136] remove all duplicates from the list.': [2, 0.375]
'[c136] remove all instances of the last element in the list.': [1, 0.125]
'[c136] remove any duplicate elements in the list.': [1, 0.125]
'[c136] remove any duplicate numbers from the list.': [1, 0.125]
'[c136] remove duplicate elements from the list.': [4, 0.5]
'[c136] remove duplicates from the list, while maintaining the order of the elements.': [1, 0.125]
'[c136] remove duplicates from the list.': [2, 0.375]
'[c136] remove duplicates in the list.': [1, 0.125]
'[c136] remove the duplicate elements from the list.': [1, 0.125]
'[c136] remove the first occurrence of the maximum value in the list.': [1, 0.25]
'[c136] remove the last element if it is equal to the second to last element.': [1, 0.25]
'[c136] remove the second largest number from the list.': [1, 0.5]
'[c137] remove all duplicate elements from the list.': [3, 0.5]
'[c137] remove all duplicate elements.': [1, 0.0]
'[c137] remove all instances of the number 3 from the list.': [2, 2.0]
'[c137] remove all instances of the number 3 in the list.': [1, 1.0]
'[c137] remove all instances of the number 3.': [2, 2.0]
'[c137] remove all occurrences of the number 3 from the list.': [5, 5.0]
'[c137] remove all occurrences of the number 3.': [3, 3.0]
'[c137] remove all the elements that have duplicates in the list.': [1, 0.5]
'[c137] remove all the repeating elements except for the first occurrence.': [1, 0.125]
'[c137] remove the elements that are repeated consecutively.': [1, 0.25]
'[c138] remove adjacent duplicates.': [1, 0.125]
'[c138] remove all but the first occurrence of each number.': [1, 0.0]
'[c138] remove all duplicate elements from the list.': [5, 0.25]
'[c138] remove all duplicate elements while preserving their original order.': [1, 0.25]
'[c138] remove all duplicates from the list.': [2, 0.0]
'[c138] remove all elements except for the first and last occurrence of the maximum element in the list.': [1, 0.125]
'[c138] remove all elements other than the first element in each list.': [1, 0.0]
'[c138] remove all the elements that are equal to the first element in the list.': [1, 0.125]
'[c138] remove all the elements that are not equal to the first element.': [1, 0.0]
'[c138] remove any consecutive duplicate elements.': [1, 0.25]
'[c138] remove duplicate elements.': [1, 0.0]
'[c138] remove duplicates from the list while keeping the order of the elements.': [1, 0.0]
'[c138] remove the duplicates in the list.': [1, 0.0]
'[c138] remove the first element if it is equal to the second element.': [1, 0.375]
'[c138] remove the first occurrence of the maximum element.': [1, 0.125]
'[c139] remove all duplicate elements and sort the list in ascending order.': [1, 0.125]
'[c139] remove all duplicate elements from the list.': [1, 0.0]
'[c139] remove all duplicate elements.': [3, 0.125]
'[c139] remove all duplicates from the list.': [3, 0.125]
'[c139] remove any duplicates from the list.': [3, 0.0]
'[c139] remove any duplicates in the list.': [1, 0.125]
'[c139] remove consecutive duplicate elements.': [1, 0.25]
'[c139] remove consecutive duplicate numbers.': [1, 0.125]
'[c139] remove duplicate elements from the list.': [2, 0.0]
'[c139] remove duplicates from the list while maintaining the order of elements.': [1, 0.125]
'[c139] remove duplicates from the list.': [2, 0.125]
'[c139] return a sublist of the input list containing elements that occur exactly once.': [1, 0.5]
'[c140] replace the second digit of each number with 9.': [1, 0.375]
'[c140] replace the second digit of each number with a 9.': [1, 0.0]
'[c140] replace the second digit of the number with 9.': [1, 0.125]
'[c140] replace the second element with 9.': [10, 9.875]
'[c140] replace the second element with the digit 9.': [1, 1.0]
'[c140] replace the second element with the number 9.': [5, 5.0]
'[c140] replace the second last element with 9.': [1, 0.0]
'[c141] rearrange the list in ascending order, removing duplicates.': [1, 0.0]
'[c141] remove all consecutive duplicate elements.': [1, 0.0]
'[c141] remove all duplicate elements from the list.': [1, 0.0]
'[c141] remove all duplicates from the list while preserving the order of the remaining elements.': [1, 0.0]
'[c141] remove all duplicates from the list.': [1, 0.0]
? '[c141] remove all elements except for the first occurrence of the number 57, then remove all the remaining 57''s, and finally sort the list in ascending order.'
: [1, 0.0]
'[c141] remove all elements that are not equal to the most frequent element in the list.': [1, 0.0]
'[c141] remove all occurrences of the number 5 from the list.': [1, 0.0]
'[c141] remove any duplicated elements and keep the order of the remaining elements.': [1, 0.0]
'[c141] remove any elements that are not repeated in the list.': [1, 0.0]
'[c141] remove duplicate elements and sort the list in ascending order.': [1, 0.0]
'[c141] remove duplicate elements and sort the remaining elements in ascending order.': [1, 0.0]
'[c141] remove the duplicates from the list while maintaining the original order of the elements.': [1, 0.0]
'[c141] remove the first occurrence of the largest element in the list.': [1, 0.0]
'[c141] remove the first occurrence of the smallest number.': [1, 0.0]
'[c141] sort the elements in ascending order.': [2, 0.0]
'[c141] sort the elements in descending order.': [1, 0.0]
'[c141] sort the list in ascending order.': [2, 0.0]
'[c142] break each number into its individual digits and concatenate them together.': [1, 0.75]
'[c142] break each number into its individual digits and concatenate them.': [1, 0.375]
'[c142] convert each number into its individual digits and append them to the list.': [1, 0.5]
'[c142] convert each number into its individual digits and concatenate them.': [1, 0.75]
'[c142] convert each number to a list of its digit integers, and concatenate all the lists together.': [1, 0.25]
'[c142] represent each digit of the number as a separate element in the list.': [1, 0.375]
'[c142] separate each digit of a number and append them to the list in reverse order.': [1, 0.375]
'[c142] separate each digit of a number and append them to the list.': [1, 0.75]
'[c142] split each digit in a number and append it to a new list.': [1, 0.125]
'[c142] split each digit into individual elements.': [1, 0.5]
'[c142] split each digit into separate elements and add them to the list.': [1, 0.375]
'[c142] split each digit of a number and convert it into a list of integers.': [1, 0.375]
'[c142] split each digit of a number and create a list with those digits.': [1, 0.375]
'[c142] split each digit of a number into separate elements.': [1, 0.375]
'[c142] split each digit of the number and list them individually.': [1, 0.5]
'[c142] split each digit of the numbers and rearrange them in reverse order.': [1, 0.375]
'[c142] split each number into its individual digits and combine them together.': [1, 0.625]
'[c142] split each number into its individual digits and concatenate them together.': [3, 1.0]
'[c143] replace all but the first occurrence of the maximum number with the minimum number.': [1, 0.0]
'[c143] replace all duplicate elements with the smallest occurrence of that element.': [1, 0.125]
'[c143] replace all elements except the first element with the smallest element in the list.': [1, 0.0]
'[c143] replace all elements in the list with the minimum element in the list.': [1, 0.0]
'[c143] replace all elements that are greater than or equal to 10 with the number 4.': [1, 0.0]
'[c143] replace all elements that are greater than or equal to 50 with the number 2.': [1, 0.125]
'[c143] replace all repeated numbers with only one instance of the number.': [1, 0.0]
'[c143] replace any duplicate elements with the smallest value of those elements.': [1, 0.125]
'[c143] replace any element greater than or equal to 40 with the minimum value in the list.': [1, 0.25]
'[c143] replace any number greater than 10 with the number 2.': [1, 0.0]
'[c143] replace any number greater than 9 with the number 2.': [1, 0.0]
'[c143] replace any number greater than or equal to 10 with the number 4, else keep the number as is.': [1, 0.125]
'[c143] replace any number greater than or equal to 10 with the repeated digits of the number.': [1, 0.0]
'[c143] replace any number that is greater than or equal to 10 with the number modulo 10.': [1, 0.0]
'[c143] replace any repeated elements with the element itself.': [1, 0.0]
'[c143] replace duplicate elements with the element itself.': [1, 0.125]
'[c143] replace every number in the list with the smallest number in the list.': [1, 0.0]
'[c143] replace every occurrence of the maximum number with the minimum number.': [1, 0.5]
'[c143] replace the last element with the smallest element in the list.': [1, 0.125]
'[c143] replace the maximum value in the list with the minimum value.': [1, 0.25]
'[c144] multiply every number by 2 and subtract 2 from every number divisible by 2.': [1, 0.125]
'[c144] replace any number greater than or equal to 50 with 90, and any number less than 50 with 0.': [1, 0.0]
'[c144] replace any number less than 20 with 78, and any number greater than or equal to 20 with 90.': [1, 0.0]
'[c144] replace any number that is divisible by 10 with 0, and any other number with the sum of its digits.': [1, 0.125]
'[c144] replace any numbers divisible by 4 with 64 and any numbers divisible by 17 with 85.': [1, 0.0]
? '[c144] replace the digits in the given numbers with the nearest digit pair on either side (if it exists), otherwise replace it with 0.'
: [1, 0.0]
'[c144] replace the first and last digits of each number with the sum of those digits.': [1, 0.125]
? '[c144] replace the first digit with the last digit if the first digit is larger than the last digit, otherwise replace the last digit with the first digit.'
: [1, 0.125]
'[c144] replace the first element with 67 if it is smaller than 67, else replace it with 95.': [1, 0.125]
? '[c144] replace the first element with the largest number in the list and replace the last element with the largest number in the list as well.'
: [1, 0.125]
'[c144] replace the last element with the maximum value in the list.': [1, 0.125]
'[c144] replace the last element with the sum of the first and second elements.': [1, 0.125]
'[c144] replace the second digit with the fourth digit.': [1, 0.0]
'[c144] replace the second half of the list with the maximum value in the list.': [1, 0.0]
'[c144] replace the second highest digit with the highest digit.': [1, 0.125]
'[c144] replace the second highest number with the highest number.': [1, 0.125]
'[c144] subtract 2 from each element if it is even and subtract 3 if it is odd.': [1, 0.0]
'[c144] subtract the second element from the first element and add 78 to the result.': [1, 0.0]
'[c144] subtract the second to last element from the last element, and if the list is empty, return an empty list.': [1, 0.0]
'[c144] take the last digit of each number and append it to the list.': [1, 0.125]
'[c145] duplicate the first element the same number of times as the length of the list.': [1, 0.875]
'[c145] replace all elements except the first one with the first element.': [1, 0.875]
'[c145] replace all elements in the list with the first element.': [2, 2.0]
'[c145] replace all elements with the first element of the list.': [2, 2.0]
'[c145] replace all numbers in the list with the first number in the list.': [1, 1.0]
'[c145] replace all the elements in the list with the first element of the list.': [1, 1.0]
'[c145] replace each element with the first element in the list.': [1, 1.0]
'[c145] replace each element with the first element of the list.': [1, 1.0]
'[c145] replace each element with the first element.': [2, 2.0]
'[c145] replace each element with the maximum element in the list.': [1, 0.25]
'[c145] replace each element with the maximum element of the original list.': [1, 0.25]
'[c145] replace each number with itself repeated five times.': [1, 0.0]
'[c145] replace every element in the list with the first element of the list.': [1, 1.0]
'[c145] replace every element with the first element of the list.': [3, 3.0]
'[c145] replicate the first element of the list a number of times equal to the length of the list.': [1, 1.0]
'[c146] calculate the absolute difference between each pair of consecutive elements.': [1, 1.0]
'[c146] calculate the remainder of each element divided by 60.': [1, 0.0]
? '[c146] convert each number in the list to its ASCII character representation, then to obtain the ASCII value of each character in the resulting string, and finally to convert each ASCII value to its corresponding letter in the alphabet (a is 1, b is 2, c is 3, and so on).'
: [1, 0.0]
'[c146] find the remainder of each number when divided by 10 and subtract it from 10 to get the new number.': [1, 0.0]
'[c146] generate a new list where each element is the reverse of the difference between the corresponding elements.': [1, 0.125]
'[c146] remove all odd numbers from the list and divide the remaining even numbers by 2.': [1, 0.125]
'[c146] reverse each number in the list and then sort the numbers in descending order.': [1, 0.0]
'[c146] square each element and subtract 1.': [1, 0.0]
'[c146] subtract each element from 100 and append the result to a new list.': [1, 0.0]
'[c146] subtract each element from 100 and then divide by 2.': [1, 0.0]
'[c146] subtract each element in the list from 100.': [1, 0.0]
'[c146] subtract each number from 100.': [1, 0.0]
? '[c146] subtract the ith element from the (i+1)th element and keep the resulting value, except for the last element which is kept as is.'
: [1, 0.0]
'[c146] subtract the second element from the first element and divide the result by 3, rounded down.': [1, 0.0]
'[c146] subtract the second element from the first element and then multiply it by 2.': [1, 0.125]
'[c146] take each element, multiply it by 2, and subtract the ones digit.': [1, 0.0]
'[c146] take the square of each element and subtract the sum of digits.': [1, 0.0]
'[c146] take the sum of the digits of each element and add them together.': [1, 0.0]
'[c146] transform each element by adding its reverse to it.': [1, 0.0]
'[c147] add a number after each element, starting from 1 and incrementing by 1 for each additional number added.': [1, 0.875]
'[c147] add a number to the end of the list, starting from 1 and incrementing by 1 with each new element.': [1, 0.125]
'[c147] add a number to the list corresponding to its position starting from 1.': [1, 1.0]
'[c147] alternate between the element and its position in the list.': [1, 1.0]
'[c147] append the number 1 to each element and then append the index of the element in the original list.': [1, 1.0]
'[c147] double each element and insert the index of the element after it.': [1, 1.0]
? '[c147] generate a list by inserting numbers from 1 to n between the elements of the original list, where n is the number of elements in the original list.'
: [1, 1.0]
? '[c147] generate a list of elements starting from 1 and increasing by 1 for each element, and appending the original elements in the same order.'
: [1, 1.0]
'[c147] insert a number before each element, starting from 1 and incrementing by 1 for each element.': [1, 1.0]
'[c147] insert a number in between each pair of adjacent numbers, starting from 1 and incrementing by 1 each time.': [1, 0.875]
'[c147] insert a number sequence starting from 1 after each number in the list.': [1, 0.625]
? '[c147] insert a sequence of numbers in between the elements of the original list, starting from 1 and incrementing by 1 each time.'
: [1, 0.875]
'[c147] insert numbers from 1 to n after each element, where n is the index of the element.': [1, 1.0]
'[c147] insert numbers in sequence starting from 1, after every number in the list.': [1, 0.75]
'[c147] insert numbers in sequential order after each element.': [1, 0.875]
'[c147] insert the number 1 after each number and insert the number 2 after the entire list.': [1, 0.0]
'[c147] insert the position number after each element.': [1, 1.0]
'[c147] insert the position of each element after every element.': [1, 1.0]
'[c147] separate each number with a comma and then add a number counting up from 1 to the end.': [1, 1.0]
'[c148] append the numbers 1 through n to the given list, where n is the length of the given list.': [1, 0.125]
'[c148] cycle through the numbers from 1 to the maximum number in the list, and append each number one by one.': [1, 0.5]
'[c148] generate a list that alternates between elements 1, 2, 3, and the distinct elements in the original list.': [1, 0.125]
? '[c148] generate a pattern where each element from 1 to the maximum value in the original list is repeated, and then the pattern is repeated as many times as the maximum value in the original list.'
: [1, 0.375]
'[c148] generate a repeating sequence where each number in the sequence is repeated the same number of times as its value.': [1, 0.375]
'[c148] generate a sequence of numbers starting from 1 up to n, where n is the largest number in the input list.': [1, 0.25]
? '[c148] generate a sequence of numbers starting from 1 up to the maximum number in the input list, and then repeat this sequence as necessary.'
: [1, 0.25]
'[c148] insert a pattern into the list.': [1, 0.125]
'[c148] insert the sequence [1, 2, 3, 4, 5] between each pair of repeated elements.': [1, 0.125]
'[c148] repeat each element n times, where n is the value of the element in the original list.': [1, 0.5]
'[c148] repeat each element n times, where n is the value of the element.': [1, 0.25]
'[c148] repeat the elements consecutively in ascending order, starting from 1, and repeat from the beginning if necessary.': [1, 0.375]
'[c148] repeat the elements in a pattern of [1, 2, 3, .': [1, 0.375]
'[c148] repeat the elements in a pattern: [1, 2, 3, 4, 5].': [1, 0.25]
'[c148] repeat the elements in ascending order, starting from 1, and then append the original list.': [1, 0.25]
'[c148] repeat the elements of the given list in a specific pattern: [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, .': [1, 0.0]
? '[c148] repeat the elements of the original list and add a sequence of numbers 1 to the maximum element in the list at the end.'
: [1, 0.375]
'[c148] repeat the input list elements in a specific pattern.': [1, 0.0]
'[c148] repeat the numbers 1, 2, and 3 in increasing order, starting from 1, and then append the original list.': [1, 0.0]
'[c148] repeat the sequence [1, 2, 3] based on the maximum number in the input list.': [1, 0.125]
'[c149] calculate the product of the first two elements and add it to the rest of the elements in the list.': [1, 0.0]
'[c149] filter out all numbers that are less than 10 and double the remaining numbers.': [1, 0.125]
? '[c149] find the greatest common divisor (GCD) of all the numbers in the list, except for the first number, and remove it from the list.'
: [1, 0.25]
'[c149] multiply each element by 5, except the first element which is removed.': [1, 0.125]
'[c149] multiply each element by 5.': [1, 0.0]
'[c149] multiply each element by 6, then check if the result is divisible by 10.': [1, 0.0]
'[c149] multiply each element by 6.': [1, 0.0]
'[c149] multiply each element by itself except for the last element.': [1, 0.0]
'[c149] multiply each element by the first element of the list.': [1, 0.125]
'[c149] multiply each element by the first element.': [1, 0.0]
'[c149] multiply each element by the last element and then remove the last element.': [1, 0.0]
'[c149] multiply each element in the list by the first element.': [1, 0.0]
'[c149] multiply each number by 10 if the number is greater than 10, else multiplies each number by 2.': [1, 0.0]
'[c149] multiply the elements in the list and sort the resulting list in ascending order.': [1, 0.0]
'[c149] multiply the first and second elements and add them to the result list.': [1, 0.5]
'[c149] remove any element that is not a multiple of 2 or 3.': [1, 0.0]
'[c149] remove any element that is not a multiple of 2 or 5, and replace all remaining elements with their product with 2.': [1, 0.0]
'[c149] remove any elements that are not divisible by 3.': [1, 0.0]
'[c149] remove the first element if it is divisible by 3, otherwise keep the list unchanged.': [1, 0.375]
? '[c149] remove the first element if it is smaller than the second element, otherwise replace the second element with the sum of the first and second elements.'
: [1, 0.25]
'[c150] add a range of numbers sequentially after the first occurrence of the maximum number in the list.': [1, 0.125]
'[c150] add a sequence of numbers starting from the first element and ending with the last element.': [1, 0.125]
'[c150] add a sequence of numbers starting from the last element of the list, incrementing by 1 for each element added.': [1, 0.0]
'[c150] add a sequence of numbers to the end of the original list.': [1, 0.0]
'[c150] add the elements from the second element to the last element to the end of the list.': [1, 0.0]
'[c150] add the number to the end of the list for each occurrence of the number in the list.': [1, 0.125]
'[c150] append a range of numbers between the first and last element of the list.': [1, 0.125]
'[c150] append a sequence of numbers starting from the last element of the list and incrementing by 1.': [1, 0.0]
? '[c150] append a sequence of numbers starting from the maximum element in the list, incrementing by 1, until reaching the last element in the list.'
: [1, 0.25]
'[c150] append a sequence of numbers starting from the maximum value in the initial list.': [1, 0.125]
? '[c150] append consecutive numbers starting from the last element of the list until the second-to-last element of the list is reached.'
: [1, 0.0]
'[c150] append numbers from 1 to n, where n is the difference between the maximum and minimum elements of the list.': [1, 0.125]
'[c150] append the first element of the list to the end of the list.': [1, 0.0]
'[c150] extend the list by adding consecutive numbers starting from the last number in the list.': [1, 0.0]
? '[c150] increment the last element and append a sequence of numbers starting from the second-to-last element and incrementing by 1.'
: [1, 0.0]
'[c150] insert the element at the first index after each occurrence of that element, starting from the second occurrence.': [1, 0.125]
'[c150] insert the first element before every occurrence of the second element.': [1, 0.0]
'[c150] remove duplicate elements and insert the elements that are missing between consecutive elements.': [1, 0.125]
? '[c150] replace every element greater than or equal to 10 with a consecutive sequence of numbers starting from that element.'
: [1, 0.25]
'[c150] replace the element with the sequence of numbers starting from that element and incrementing by 1.': [1, 0.0]
'[c151] duplicate each element a certain number of times, equal to the value of the element.': [1, 0.0]
'[c151] duplicate each element n number of times, where n is the value of the element.': [1, 0.0]
'[c151] repeat each element 5 times, except if the element is 0.': [1, 0.0]
'[c151] repeat each element a certain number of times, determined by its value.': [1, 0.375]
'[c151] repeat each element a certain number of times.': [2, 0.0]
'[c151] repeat each element multiple times.': [2, 0.0]
'[c151] repeat each element n times, where n is the number of occurrences of the element in the original list.': [1, 0.25]
'[c151] repeat each element n times, where n is the number of occurrences of the element.': [1, 0.25]
'[c151] repeat each element n times, where n is the value of the element.': [1, 0.125]
'[c151] repeat each element the number of times equal to its value.': [1, 0.5]
'[c151] repeat each element the same number of times as its value.': [1, 0.25]
'[c151] repeat each element three times, except for the last element which is repeated fifteen times.': [1, 0.0]
'[c151] repeat each element until there are a total of 15 elements in the list.': [1, 0.25]
'[c151] repeat each number n times, where n is the number itself.': [1, 0.25]
'[c151] repeat the elements in the list.': [1, 0.25]
'[c151] repeat the elements until the length of the list is a multiple of the element value.': [1, 0.0]
'[c151] repeat the elements, with the number 5 repeated 5 times and all other numbers repeated twice.': [1, 0.0]
? '[c151] repeat the first element a certain number of times, where the number of repetitions is equal to the value of the second element.'
: [1, 0.25]
'[c152] calculate the modulo of each element by 20 and then multiply it by the integer division of the element by 10.': [1, 0.0]
'[c152] calculate the product of the first and last element and subtract the sum of the middle elements.': [1, 0.125]
'[c152] calculate the square of each element, then divide by 3 and round down to the nearest integer.': [1, 0.0]
'[c152] calculate the square root of each element and round down to the nearest whole number.': [1, 0.125]
'[c152] calculate the sum of each pair of neighboring elements and replace the element with the sum.': [1, 0.0]
'[c152] calculate the sum of the digits of each number, and replace any digit greater than 9 with the sum of its digits.': [1, 0.125]
'[c152] divide each element by 2, then add the corresponding index of the element to the result.': [1, 0.0]
'[c152] divide each element by 3 and round down to the nearest whole number.': [1, 0.125]
'[c152] divide each element by 5 and get the integer value.': [1, 0.0]
'[c152] divide each number by 2 and round down to the nearest integer.': [1, 0.0]
'[c152] divide each number by 2 and take the floor.': [1, 0.0]
'[c152] divide each number by 5 and then take the flooring of the result.': [1, 0.0]
'[c152] find the remainder of dividing each number by 10.': [1, 0.125]
'[c152] find the square root of each element and round it down to the nearest whole number.': [1, 0.125]
? '[c152] find the sum of the digits of each number and replace it with the corresponding digit in the alphabetical order (0 becomes ''a'', 1 becomes ''b'', etc.'
: [1, 0.0]
'[c152] multiply each element by the sum of its digits.': [1, 0.375]
'[c152] reverse the digits of each number.': [1, 0.0]
'[c152] square each element and then find the remainder when dividing by 100.': [1, 0.125]
'[c152] square each element and then subtract 11.': [1, 0.125]
'[c152] take the sum of the digits of each number in the list.': [1, 0.0]
'[c153] count the frequency of each element and append it after the element.': [1, 0.75]
'[c153] count the frequency of each element in the list and create a new list with the element and its frequency.': [1, 0.875]
? '[c153] count the frequency of each number in the list, sort them in descending order, and then append the frequency after each number.'
: [1, 0.25]
'[c153] count the number of occurrences of each element and replace it with the count.': [1, 0.625]
'[c153] count the number of occurrences of each element, and then append the element and its count to the answer list.': [1, 0.75]
? '[c153] count the occurrences of each element and append the count to the element, then sort the elements in decreasing order of count.'
: [1, 0.875]
'[c153] count the occurrences of each element in the list and create a new list with the counts.': [1, 0.0]
'[c153] generate a list of elements such that each element appears the same number of times as its index (starting from 2).': [1, 0.0]
'[c153] remove duplicate elements and count the number of unique elements.': [1, 0.125]
'[c153] remove duplicate elements and replace them with their counts.': [1, 0.375]
'[c153] remove duplicates and replace each remaining element with the number of occurrences of that element.': [1, 0.5]
'[c153] replace consecutive duplicates with the count of the duplicates followed by the element.': [1, 0.125]
'[c153] replace duplicate numbers with the number of times it appears in the list.': [1, 0.0]
'[c153] replace each element with a corresponding number based on its frequency, starting from 1.': [1, 0.0]
'[c153] replace each element with the number of times it appears in the list.': [1, 0.125]
'[c153] replace each number with a unique positive integer corresponding to its position in the list.': [1, 0.0]
? '[c153] replace each occurrence of an element with a number that represents the number of times that element has appeared before.'
: [1, 0.0]
'[c153] replace each unique element with a number based on its position in the list.': [1, 0.25]
? '[c153] take the first element, count the number of occurrences of that element, and then repeat that element and the count in the new list.'
: [1, 0.125]
'[c154] add the last element of the list to every element in the list.': [1, 0.0]
'[c154] multiply each element by 3 if it is even, and multiply each element by 4 if it is odd.': [1, 0.0]
? '[c154] multiply each element by 3, except for elements that are already multiples of 3, in which case we multiply them by 4.'
: [1, 0.0]
'[c154] multiply each element by a factor of 3 if the element is divisible by 3, else multiply by a factor of 2.': [1, 0.0]
'[c154] multiply each element by either 2, 3, 4, 6, 12, 18, 24, 78, 84, or 96 (multiples of 6).': [1, 0.0]
'[c154] multiply each number by its index plus 1.': [1, 0.0]
'[c154] multiply every element in the list by 3 and replace any element greater than 10 with the sum of its digits.': [1, 0.0]
? '[c154] multiply every even number by 2 and every odd number by 3, except for the first and last elements which remain unchanged.'
: [1, 0.0]
'[c154] multiply the elements by 2 if they are even, or by 3 if they are odd.': [1, 0.0]
'[c154] multiply the first and last elements of the list and replace the second and second-to-last elements.': [1, 0.0]
'[c154] multiply the first element by 3, and then multiply each subsequent element by 2.': [1, 0.0]
'[c154] multiply the last element by 3.': [1, 0.0]
'[c154] replace a number n with n*3 if n is even, otherwise replace it with n*2.': [1, 0.125]
'[c154] replace any number greater than or equal to 10 with the sum of its digits.': [1, 0.0]
'[c154] replace each number with its corresponding multiple of 3.': [1, 0.0]
'[c154] replace each number with its corresponding value from the code below:': [1, 0.0]
'[c154] replace even numbers with 24, odd numbers with 18, and prime numbers with 12.': [1, 0.0]
'[c154] replace the numbers with their respective multiples of 3.': [1, 0.0]
'[c154] replace the second digit of each number with the sum of its digits.': [1, 0.0]
'[c154] replace the second element with the sum of the second and fifth elements.': [1, 0.0]
'[c155] calculate the product of each pair of consecutive elements in the list.': [1, 0.0]
'[c155] multiply each element by its index + 1.': [2, 2.0]
'[c155] multiply each element by its index plus 1.': [2, 1.5]
'[c155] multiply each element by its index plus one.': [1, 0.625]
'[c155] multiply each element by its index position.': [1, 0.25]
'[c155] multiply each element by its index, starting from 1.': [1, 0.75]
'[c155] multiply each element by its index.': [2, 0.5]
'[c155] multiply each element by its position in the list.': [2, 1.375]
'[c155] multiply each element by itself, then multiply the first element by 2 and the last element by 10.': [1, 0.0]
? '[c155] multiply the first element by the second element, the second element by the third element, the third element by the fourth element, and so on.'
: [1, 0.0]
? '[c155] multiply the second element by the first element and replace the third element with the result, and so on for the remaining elements.'
: [1, 0.0]
'[c155] perform element-wise multiplication of each element with its corresponding index.': [1, 0.0]
'[c155] perform element-wise multiplication of the elements with the index of the element + 1.': [1, 0.5]
'[c155] perform element-wise multiplication of the elements with their indices.': [1, 0.0]
'[c155] replace each element with the product of its value and its index.': [1, 0.25]
'[c155] square each element and multiply it by its index position.': [1, 0.0]
'[c156] add 1 to each element and then multiply it by 2.': [1, 0.0]
'[c156] add 1 to each element and then subtract 1 from the next element.': [1, 0.0]
'[c156] add 1 to each element and transpose the elements.': [1, 0.0]
'[c156] add 1 to each number and then subtract 1 from the last number in each list.': [1, 0.0]
? '[c156] add each pair of numbers together, with the first element being added to the second element, the third element being added to the fourth element, and so on.'
: [1, 0.0]
'[c156] add the first and last digit of each number in the list and concatenate them in reverse order.': [1, 0.0]
'[c156] add the first and second elements, then subtract the third element, and so on.': [1, 0.0]
? '[c156] apply different mathematical operations to each element, such as addition, subtraction, multiplication, or division.'
: [1, 0.0]
'[c156] calculate the sum of each pair of adjacent numbers in the list and create a new list with those sums.': [1, 0.0]
'[c156] perform a series of mathematical operations on the given numbers.': [1, 0.0]
'[c156] perform element-wise addition modulo 100.': [1, 0.0]
'[c156] perform mathematical operations on the elements.': [1, 0.0]
'[c156] perform the following operations on each element:': [1, 0.0]
'[c156] perform various mathematical operations on the numbers in the list.': [1, 0.0]
'[c156] reverse each number and subtract it from 100.': [1, 0.0]
'[c156] subtract the number from 100 and reverse the digits of the result.': [1, 0.0]
'[c157] add 0 to the even indices and add 1 to the odd indices.': [1, 0.125]
'[c157] add a 0 after each element, then add a 1 at the end.': [1, 0.0]
'[c157] add a 0 after every element, except for 1, which is followed by a 1, and insert a 1 at the end.': [1, 0.25]
'[c157] alternate between adding a 0 and a 1 after each element.': [1, 0.0]
? '[c157] append the element 1 after each element and append the element 0 after each element except the last in the original list.'
: [1, 0.25]
? '[c157] duplicate each element and append either a 1 or a 0 after each duplicated element, depending on whether the original element is odd or even.'
: [1, 0.75]
'[c157] insert 0 after each element and insert 1 before the last element.': [1, 0.0]
'[c157] insert 0 after each number and 1 after the last number in each list.': [1, 0.0]
'[c157] insert 0 after each number and insert 1 after each even number.': [1, 0.0]
'[c157] insert 0 after every even number and insert 1 after every odd number.': [1, 1.0]
'[c157] insert 1 after every element and insert 0 after every second element.': [1, 0.0]
'[c157] insert a 0 after each even number and insert a 1 after each odd number.': [1, 0.875]
'[c157] insert a 0 after every element and then append a 1 at the end.': [1, 0.0]
'[c157] insert a 0 after every number and insert a 1 after every even number.': [1, 0.25]
'[c157] insert a 0 before every even element and a 1 before every odd element.': [1, 0.5]
'[c157] insert a 1 before each even number and insert a 0 before each odd number.': [1, 0.375]
'[c157] replace each number n with [n, 0, n%2].': [1, 0.0]
'[c157] replace each number n with n, n mod 2, n/10, n<10 ?': [1, 0.0]
'[c157] replace each number with itself and either 0 or 1 in alternating order.': [1, 0.0]
'[c158] check if there is a duplicate element in the list.': [1, 0.0]
'[c158] convert all repeated elements to 0, and non-repeated elements to 1.': [1, 0.125]
'[c158] count the number of consecutive same elements and replace them with a sequence of zeros and ones.': [1, 0.0]
'[c158] count the number of even numbers in the list and replace the odd numbers with 0s and the even numbers with 1s.': [1, 0.0]
'[c158] count the number of occurrences of each element and replace it with a binary representation.': [1, 0.0]
'[c158] count the number of occurrences of each element and replace it with either 0 or 1 depending on the count.': [1, 0.125]
'[c158] count the number of occurrences of each element in the list and replace it with the count.': [1, 0.25]
'[c158] count the number of occurrences of the element 4 and return a list with that many 0''s and a 1 at the end.': [1, 0.125]
'[c158] count the number of occurrences of the element 4 in the list.': [1, 0.125]
'[c158] count the number of occurrences of the element 6 in the list and convert it to binary.': [1, 0.125]
? '[c158] count the number of occurrences of the first element in the list and create a new list with that count of 0''s followed by a 1.'
: [1, 0.125]
? '[c158] count the number of occurrences of the number 3 and replace it with 0, while count the number of occurrences of the number 8 and replace it with 1.'
: [1, 0.0]
? '[c158] count the number of times the element appears and replace it with 1 if it appears an odd number of times, or 0 if it appears an even number of times.'
: [1, 0.125]
? '[c158] count the number of times the number 7 appears in the list and replace it with 0, while count the number of times the number 8 appears and replace it with 1.'
: [1, 0.125]
'[c158] get the binary representation of each number and count the number of ones in each representation.': [1, 0.0]
'[c158] replace any number greater than 7 with 1, and keep any number less than or equal to 7 as it is.': [1, 0.0]
'[c158] replace each element in the list with either 0 or 1 based on whether the number is repeated or not.': [1, 0.0]
'[c158] replace each element with 1 if it is greater than or equal to 5, otherwise replace it with 0.': [1, 0.0]
'[c158] replace each element with either 0 or 1 based on its value.': [1, 0.0]
'[c158] replace the second occurrence of a number with a 0.': [1, 0.0]
? '[c159] count the number of consecutive occurrences of each element and append the count followed by the element to the new list.'
: [1, 0.0]
'[c159] count the number of consecutive occurrences of each element and convert it to its corresponding count in binary.': [1, 0.0]
'[c159] count the number of occurrences of each element and add the count to a new list.': [1, 0.0]
'[c159] count the number of occurrences of each element and append it to the result list.': [1, 0.125]
'[c159] count the number of occurrences of each element and append the count after each element in the order they appear.': [1, 0.0]
'[c159] count the number of occurrences of each element and create a new list containing the count of each element.': [1, 0.25]
'[c159] count the number of occurrences of each element and create a new list with the counts.': [1, 0.125]
'[c159] count the number of occurrences of each element and replace it with the count.': [1, 0.0]
'[c159] count the number of occurrences of each element and return a list with the counts in order.': [1, 0.0]
'[c159] count the number of occurrences of each element in the list and create a new list with the counts in reverse order.': [1, 0.0]
'[c159] count the number of occurrences of each element in the list, then append the count to a new list.': [1, 0.125]
'[c159] count the number of occurrences of each element in the list, then sort the elements in ascending order.': [1, 0.0]
'[c159] count the number of occurrences of each element, subtract 1, and convert it to a list of digits.': [1, 0.0]
'[c159] count the number of occurrences of each unique element and create a list with the count for each element.': [1, 0.0]
'[c159] count the number of occurrences of the element in the list and create a new list containing the counts.': [1, 0.0]
'[c159] count the number of times a certain element appears in the list and create a new list with the counts.': [1, 0.125]
'[c159] count the occurrences of each element in the list and create a new list with the counts.': [1, 0.0]
'[c159] count the occurrences of each number in the list and generate a new list with those counts.': [1, 0.125]
'[c159] count the occurrences of each number in the list and re-arranging them.': [1, 0.0]
? '[c159] replace each element with the number of times it appears in the list, followed by the number of times it does not appear in the list.'
: [1, 0.0]
'[c160] calculate the absolute difference between each pair of consecutive elements, and then reverse the resulting list.': [1, 0.0]
'[c160] convert each number to its complement (the difference between 99 and the number).': [1, 1.0]
'[c160] perform a series of mathematical operations on the elements.': [1, 0.0]
'[c160] replace each number with its complement (100 - number).': [1, 0.0]
'[c160] reverse each element and subtract it from 100.': [1, 0.0]
'[c160] reverse each number and subtract it from 100.': [1, 0.0]
'[c160] reverse the digits of each number and replace 2 with 9 and 9 with 2.': [1, 0.0]
'[c160] reverse the digits of each number and subtract 5 from each number.': [1, 0.0]
'[c160] reverse the digits of each number and then swap the first and last digits.': [1, 0.0]
'[c160] subtract each element from 100 and reverse the resulting list.': [1, 0.0]
'[c160] subtract each element from 100 and sort the list in ascending order.': [1, 0.0]
'[c160] subtract each element from 99 and append the result to a new list.': [1, 0.875]
'[c160] subtract each number from 100 and swap the digits of the resulting number.': [1, 0.0]
'[c160] subtract the element from 100 and then reverse the list.': [1, 0.0]
'[c160] subtract the first element from 100 and then multiply by the second element.': [1, 0.0]
'[c160] transform each number in the list by calculating (100 - number) modulo 100.': [1, 0.0]
'[c161] add 6 to each element in the list and then subtract the index of the element.': [1, 0.0]
'[c161] add 7 to each element and then subtract 6 from each element, except the last element remains the same.': [1, 0.0]
'[c161] add 7 to each element and then take the modulus 100.': [1, 0.0]
'[c161] add 7 to each element.': [3, 0.0]
'[c161] add 7 to every element.': [1, 0.0]
'[c161] add 8 to each element of the list.': [1, 0.0]
'[c161] add 9 to each element and then subtract 3 from the last element.': [1, 0.0]
'[c161] add a random number between 1 and 10 to each element in the list.': [1, 0.0]
'[c161] add each element with its index.': [1, 0.0]
'[c161] add the corresponding elements in reverse order.': [1, 0.0]
'[c161] add the corresponding elements in the list and then reverse the resulting list.': [1, 0.0]
'[c161] add the corresponding elements of the list and then reverse the resulting list.': [1, 0.0]
'[c161] add the corresponding elements of the list, starting from the first and repeating the last element if necessary.': [1, 0.0]
? '[c161] add the first and second elements, then subtract the third element, then add the fourth and fifth elements, and so on.'
: [1, 0.0]
'[c161] convert each number to its reverse and swap the first two digits.': [1, 0.0]
'[c161] increment each element by a specific number.': [1, 0.0]
'[c161] subtract each number from its maximum value, then add 1.': [1, 0.0]
'[c161] swap the digits of each number in the list.': [1, 0.0]
'[c162] add the corresponding elements and then sum the digits of the resulting number.': [1, 0.125]
'[c162] add the corresponding elements of the list with their mirror image.': [1, 0.0]
'[c162] add the corresponding elements together and divide by 2.': [1, 0.0]
'[c162] calculate the sum of each pair of adjacent elements and multiply it by the index of the pair.': [1, 0.0]
'[c162] calculate the sum of each pair of adjacent elements and replace the middle element with the sum.': [1, 0.0]
'[c162] calculate the sum of each pair of adjacent elements, convert it to binary, and then sum the binary numbers.': [1, 0.0]
'[c162] calculate the sum of each pair of adjacent numbers and append it to a new list.': [1, 0.0]
'[c162] calculate the sum of each pair of elements and replace the element with that sum.': [1, 0.0]
'[c162] calculate the sum of each pair of elements.': [1, 0.0]
'[c162] compute the sum of each pair of numbers in the list and append the result to a new list.': [1, 0.0]
'[c162] compute the sum of the elements and then square each element in the list.': [1, 0.0]
'[c162] create a new list where each element is the sum of the corresponding elements in the original list.': [1, 0.25]
'[c162] double each element and then subtract 1.': [1, 0.0]
'[c162] multiply each element by 3 and subtract 1.': [1, 0.0]
'[c162] multiply the element by 3 and add 1.': [1, 0.0]
'[c162] perform the following operations on each element of the list:': [1, 0.0]
'[c162] replace each element with a new value generated using the formula:': [1, 0.375]
'[c162] replace each number with its square plus 1.': [1, 0.0]
'[c162] sum each pair of elements and replace them in the list.': [1, 0.0]
'[c163] add 27 to each element if the element is odd, otherwise add 10.': [1, 0.0]
'[c163] add the first and last elements and divide the sum by 2, and then replace all other elements with the result.': [1, 0.0]
'[c163] add the first and last elements of the list and divide by 2, then repeat this result for each element in the list.': [1, 0.0]
'[c163] add the largest number in the list to each element in the list.': [1, 0.0]
'[c163] add the maximum value in the list to each element in the list.': [1, 0.0]
'[c163] add the sum of the digits of each element to itself.': [1, 0.0]
? '[c163] calculate the sum of the elements and then subtract the maximum element from the sum, then replace each element with this result.'
: [1, 0.125]
'[c163] multiply each element by 2 and add 2 to the first element.': [1, 0.0]
'[c163] multiply the first element by 6 and subtract 2, and then multiply all other elements by 5 and add 4.': [1, 0.0]
'[c163] replace each number with its square plus 4.': [1, 0.0]
'[c163] replace the element with the sum of its digits.': [1, 0.0]
'[c163] subtract 2 from each element and then multiply by 4.': [1, 0.125]
'[c163] subtract 44 from each element, then add 36 to the first element and add 46 to the last element.': [1, 0.0]
'[c163] subtract the first element from each element and then add the sum of the resulting list to each element.': [1, 0.0]
'[c163] subtract the first element from each subsequent element.': [1, 0.0]
'[c163] subtract the first element from the last element and add the result to each element in the list.': [1, 0.125]
'[c163] subtract the first element from the second element, and then multiply the result by 2.': [1, 0.0]
'[c163] subtract the second element from the first element, and then add that result to every element in the list.': [1, 0.125]
'[c164] calculate the difference between consecutive elements and add it to the previous element.': [1, 0.0]
? '[c164] calculate the difference between the elements and their indices, then summing the result with the minimum value of the list.'
: [1, 0.0]
'[c164] calculate the remainder when each element is divided by 13, and then add 2.': [1, 0.0]
'[c164] calculate the remainder when each number is divided by 7 and add 5 to the result.': [1, 0.0]
'[c164] calculate the square root of each element and round it down to the nearest whole number.': [1, 0.0]
'[c164] calculate the square root of each element and round it to the nearest integer.': [1, 0.0]
'[c164] calculate the sum of each number''s digits and return the sum.': [1, 0.0]
'[c164] calculate the sum of the digits and square each digit separately.': [1, 0.0]
'[c164] calculate the sum of the digits of each element in the list.': [1, 0.0]
'[c164] calculate the sum of the digits of each number and replace it with the result.': [1, 0.0]
'[c164] convert each number in the list to its digital root.': [1, 0.0]
'[c164] divide each element by 2 and round down to the nearest integer.': [1, 0.0]
'[c164] divide each element by 2 and round up to the nearest integer.': [1, 0.0]
'[c164] find the square root of each element and round it to the nearest integer.': [1, 0.0]
? '[c164] find the square root of each number, round it to the nearest whole number, and then sum the digits of the resulting number.'
: [1, 0.0]
'[c164] find the sum of squares of the digits of each number in the list.': [1, 0.0]
'[c164] multiply each element by 2 and subtract 4.': [1, 0.0]
'[c164] perform some kind of mathematical operation on each element of the input list.': [1, 0.0]
'[c164] take the sum of each pair of elements in the list and replace the original element with the sum.': [1, 0.0]
'[c165] find the maximum and minimum elements in the list and return them in a new list in the order of maximum, minimum.': [1, 0.0]
'[c165] select the even numbers and arrange them in descending order.': [1, 0.0]
'[c165] select the maximum three numbers from the list and sort them in descending order.': [1, 0.0]
? '[c165] select the maximum value and the minimum value from the list, and rearrange the elements in the order of maximum value followed by minimum value.'
: [1, 0.0]
'[c165] select the maximum value and the minimum value, and then arrange them in descending order.': [1, 0.0]
'[c165] select the second smallest number from the list.': [1, 0.0]
'[c165] select the smallest and largest numbers from the list and arrange them in ascending order.': [1, 0.0]
'[c165] sort the elements in ascending order.': [3, 0.0]
'[c165] sort the elements in descending order and only keep the first two elements.': [1, 0.0]
'[c165] sort the elements in descending order and return the first three elements.': [1, 0.0]
'[c165] sort the elements in descending order.': [7, 0.0]
'[c165] sort the list in descending order and return the first three elements.': [1, 0.0]
'[c166] sort the elements in ascending order.': [19, 1.625]
'[c166] sort the list in ascending order.': [1, 0.125]
'[c167] filter out the elements in the original list that are greater than or equal to 10 and less than or equal to 50.': [1, 0.0]
'[c167] filter out the odd elements.': [1, 0.0]
'[c167] find the even numbers in the list and return them in ascending order.': [1, 0.0]
'[c167] find the even numbers in the list.': [1, 0.0]
'[c167] keep only the elements that are divisible by 3.': [2, 1.0]
'[c167] keep only the numbers that are divisible by 3.': [1, 0.5]
'[c167] keep only the numbers that have two digits.': [1, 0.0]
'[c167] keep the elements that are divisible by 3.': [1, 0.375]
'[c167] keep the second and last elements.': [1, 0.0]
'[c167] remove any element that is not divisible by 3.': [1, 0.5]
'[c167] remove any elements that are greater than or equal to 10.': [1, 0.0]
'[c167] remove even numbers from the list.': [1, 0.0]
'[c167] remove the elements that are not divisible by 5.': [1, 0.0]
'[c167] remove the smallest number from the list.': [1, 0.0]
'[c167] select elements at even indices (starting from index 0).': [1, 0.0]
'[c167] select numbers that are divisible by 3.': [1, 0.5]
'[c167] select the elements that are multiples of 3.': [1, 0.75]
'[c167] select the first and third elements of the list.': [1, 0.0]
'[c167] take the second and last element of the list.': [1, 0.0]
'[c168] assign a rank to each element, with the lowest element getting rank 1 and the highest element getting rank 10.': [1, 0.0]
'[c168] assign each number a rank from 1 to 10, based on their position in the list when sorted in ascending order.': [1, 0.0]
'[c168] convert the elements to their corresponding digit sums.': [1, 0.0]
'[c168] create a list of numbers 1 to 10, excluding the given numbers.': [1, 0.125]
'[c168] create a list of numbers from 1 to 10 excluding the numbers in the given list.': [1, 0.125]
'[c168] create a list of numbers from 1 to 10, excluding the numbers present in the input list.': [1, 0.0]
'[c168] create a list of numbers from 1 to 10, excluding the numbers that appear in the original list.': [1, 0.125]
'[c168] create a list of numbers from 1 to 10.': [1, 0.0]
'[c168] generate a list of numbers from 1 to 10, excluding the numbers present in the original list.': [1, 0.0]
'[c168] generate a list of numbers from 1 to 10, excluding the numbers that appear in the original list.': [1, 0.125]
'[c168] generate a list of numbers from 1 to 10.': [2, 0.0]
'[c168] map each element in the input list to its position in a 1 to 10 list.': [1, 0.0]
'[c168] map the elements to their corresponding positions in ascending order.': [1, 0.0]
'[c168] replace each element with its corresponding rank in ascending order.': [1, 0.0]
? '[c168] sort the elements in ascending order and then assign each element a number from 1 to 10 based on its position in the sorted list.'
: [1, 0.125]
'[c168] sort the elements in ascending order and then replace them with the numbers 1 to 10.': [1, 0.0]
'[c168] sort the elements in ascending order.': [2, 0.0]
'[c168] sort the list in ascending order.': [1, 0.0]
'[c169] extract the maximum value from the list and return it as a single-element list.': [1, 0.0]
'[c169] find the largest number in the list.': [3, 0.0]
'[c169] find the maximum element in the list.': [1, 0.0]
'[c169] find the maximum number in the list.': [2, 0.0]
'[c169] find the maximum value and return a list with that value only.': [1, 0.0]
'[c169] find the maximum value in the list.': [3, 0.0]
'[c169] keep the first element and remove all other elements.': [1, 0.25]
'[c169] return the maximum element in the list.': [2, 0.0]
'[c169] return the maximum value in the list.': [1, 0.0]
'[c169] select the largest number from the list.': [1, 0.0]
'[c169] select the maximum element in the list.': [1, 0.125]
'[c169] select the maximum number from the list.': [2, 0.0]
'[c169] take the maximum element in the list.': [1, 0.0]
'[c170] find the maximum and minimum elements in the list and return them in a new list.': [1, 0.0]
'[c170] keep only the elements that are greater than or equal to 50.': [1, 0.0]
'[c170] keep only the first and last elements of the list.': [2, 2.0]
'[c170] keep only the first and last elements.': [1, 1.0]
'[c170] keep only the first and the last elements of the list.': [1, 1.0]
'[c170] keep only the maximum and minimum elements in the list.': [1, 0.0]
'[c170] keep only the maximum and minimum elements of the list.': [1, 0.125]
'[c170] keep only the maximum and minimum values in the list.': [1, 0.125]
'[c170] keep the first and last element of the list.': [2, 2.0]
'[c170] keep the first and last elements of the list.': [2, 2.0]
'[c170] keep the first and last elements.': [1, 1.0]
'[c170] return a list containing the first and last elements.': [1, 1.0]
'[c170] return a list with only the first and last elements.': [1, 1.0]
'[c170] select the first and last element of the list.': [1, 1.0]
'[c170] select the first and last elements of the list.': [2, 2.0]
'[c170] select the smallest and largest elements from the list.': [1, 0.0]
'[c171] add the element with its corresponding index multiplied by 6.': [1, 0.0]
'[c171] add the elements of the list to the previous element.': [1, 1.0]
'[c171] add the first element to each subsequent element.': [1, 0.0]
'[c171] calculate a cumulative sum for each element.': [1, 1.0]
'[c171] calculate the cumulative sum of the elements and replace each element with the cumulative sum.': [1, 1.0]
'[c171] calculate the cumulative sum of the elements and then double each element.': [1, 0.75]
'[c171] calculate the cumulative sum of the elements in the list.': [1, 0.875]
'[c171] calculate the cumulative sum of the elements.': [6, 5.25]
'[c171] calculate the cumulative sum of the given list, starting from the first element.': [1, 1.0]
'[c171] calculate the cumulative sum of the list.': [1, 0.875]
'[c171] calculate the cumulative sums of the list and multiply each element by its index + 1.': [1, 0.0]
'[c171] multiply each element by a certain factor and add another constant to it.': [1, 0.0]
'[c171] multiply each element by its position in the list starting from 1.': [1, 0.0]
'[c171] replace each element with the sum of that element and the previous element.': [1, 1.0]
'[c171] take each element in the list and multiply it by the index position.': [1, 0.0]
'[c172] calculate the square of each element.': [1, 0.125]
'[c172] multiply each element by the previous element.': [2, 1.625]
'[c172] raise each element to the power of 2, except for the first element which remains the same.': [1, 0.25]
'[c172] raise each element to the power of 2.': [1, 0.125]
'[c172] raise each element to the power of its index.': [1, 0.25]
'[c172] raise the number to the power of the index position in the list.': [1, 0.25]
'[c172] raise the number to the power of the index.': [1, 0.25]
'[c172] replace all occurrences of a number with its square if it is less than 10, otherwise replace it with 0.': [1, 0.125]
'[c172] replace any number greater than or equal to 10 with 0.': [1, 0.0]
'[c172] replace each element with its corresponding power of 3.': [1, 0.125]
'[c172] replace each element with its power of 3.': [1, 0.125]
'[c172] replace each element with the product of itself and the index+1.': [1, 0.0]
'[c172] replace each number with its cube if it is greater than or equal to 2, otherwise replace it with 0.': [1, 0.0]
'[c172] replace every element with the square of that element.': [1, 0.0]
? '[c172] replace the original element with the element raised to the power of the number of occurrences of the element in the list.'
: [1, 0.25]
'[c172] square each element and replace any 9 with 81.': [1, 0.125]
'[c172] square each element.': [2, 0.0]
'[c172] take the first element, multiply it by the index of the element plus one, and square it.': [1, 0.125]
'[c173] repeat the maximum value of the list for the number of elements in the list.': [1, 0.25]
'[c173] replace all elements after the third occurrence of the maximum element with the maximum element.': [1, 0.125]
'[c173] replace all numbers in the list with the largest number in the original list.': [1, 0.0]
'[c173] replace all the elements with the maximum element in the list.': [1, 0.0]
'[c173] replace all the elements with the maximum value in the list.': [1, 0.0]
'[c173] replace any element with the maximum value in the list.': [1, 0.0]
'[c173] replace any number greater than 30 with the maximum number in the list.': [1, 0.0]
'[c173] replace any number less than 10 with the maximum number in the list.': [1, 0.0]
'[c173] replace any number less than or equal to 10 with the maximum number.': [1, 0.0]
'[c173] replace each element in the list with the next largest element in the list.': [1, 0.0]
'[c173] replace each element with the maximum element in the list.': [2, 0.0]
'[c173] replace each element with the maximum of the elements before it.': [1, 1.0]
'[c173] replace each element with the maximum value in the list.': [1, 0.0]
'[c173] replace each element with the maximum value present in the list.': [1, 0.5]
'[c173] replace every element with the maximum value in the list.': [3, 0.0]
'[c173] replace the elements with the maximum value in the list.': [1, 0.0]
'[c173] replace the last element with the maximum value in the list.': [1, 0.0]
'[c174] remove all but the first two occurrences of each number in the list.': [1, 0.125]
'[c174] remove all duplicate elements from the list while maintaining their original order.': [1, 0.25]
'[c174] remove all duplicate elements from the list.': [1, 0.25]
'[c174] remove all duplicate elements.': [1, 0.125]
'[c174] remove all repeated elements.': [1, 0.375]
'[c174] remove any duplicate elements from the list.': [1, 0.125]
'[c174] remove consecutive duplicate elements from the list.': [1, 0.0]
'[c174] remove consecutive duplicate elements.': [1, 0.0]
'[c174] remove duplicate elements and keep the order.': [1, 0.375]
'[c174] remove duplicate elements from the list.': [2, 0.5]
'[c174] remove duplicate elements in the list.': [1, 0.125]
'[c174] remove duplicates from the list while maintaining the order of the elements.': [1, 0.125]
'[c174] remove duplicates from the list while maintaining the original order of elements.': [1, 0.25]
'[c174] remove duplicates from the list while preserving the order of the elements.': [1, 0.25]
'[c174] remove duplicates from the list.': [2, 0.5]
'[c174] remove the last element if it appears more than once in the list.': [1, 0.375]
'[c174] remove the last element if it is equal to the second-to-last element.': [1, 0.25]
'[c174] remove the last element if it is the same as the second-to-last element.': [1, 0.0]
'[c175] filter out numbers that are not multiples of 4 and sort them in ascending order.': [1, 0.0]
'[c175] filter out the numbers less than 10 and sort the remaining numbers in ascending order.': [1, 0.0]
'[c175] keep only the elements that are divisible by 5.': [1, 0.0]
'[c175] keep only the elements that are divisible by 7.': [1, 0.0]
'[c175] keep only the elements that are greater than or equal to 10.': [1, 0.0]
'[c175] keep only the numbers that are divisible by 2.': [1, 0.0]
'[c175] keep only the numbers that are divisible by both 2 and 7.': [1, 0.0]
'[c175] keep the first three elements of the list and remove the rest.': [1, 0.375]
'[c175] keep the numbers that are greater than or equal to 10.': [1, 0.0]
'[c175] remove any element that is divisible by 10.': [1, 0.0]
'[c175] remove any element that is not a prime number.': [1, 0.0]
'[c175] remove any number that is less than 10 and greater than 90.': [1, 0.0]
'[c175] remove duplicate values and sort the elements in ascending order.': [1, 0.0]
'[c175] return a list containing only the numbers that are greater than or equal to 10.': [1, 0.0]
? '[c175] select the elements from the original list until a number greater than 90 is reached or the end of the list is reached.'
: [1, 0.375]
'[c175] select the elements that are divisible by 2.': [1, 0.0]
'[c175] select the elements that are greater than 50.': [1, 0.0]
'[c175] select the first three elements of the list.': [1, 0.125]
'[c175] select the prime numbers from the list.': [1, 0.0]
'[c175] take the first three elements of the list.': [1, 0.125]
'[c176] add the corresponding elements in reverse order.': [1, 0.0]
'[c176] add the corresponding elements of the first half and the second half of the list, then reverse the result.': [1, 0.0]
'[c176] add the corresponding elements of the list together and take the last two digits of the result.': [1, 0.0]
'[c176] add the corresponding elements of the list together.': [1, 0.0]
'[c176] add the element at index i to the element at index i+1, and the element at index i-1 to the element at index i.': [1, 0.125]
'[c176] add the element itself to the element at the next index.': [1, 0.0]
'[c176] add the elements in pairs and only keep the last two digits of the resulting sum.': [1, 0.0]
'[c176] add the first and last element, then subtract the second and second-to-last element.': [1, 0.0]
'[c176] add the first and last elements, then multiply the result by 2, and finally subtract 1 from each element.': [1, 0.0]
? '[c176] add the first and second elements, then subtract the third and fourth elements, and repeat this pattern for the rest of the list.'
: [1, 0.0]
'[c176] add the first element to every other element in the list.': [1, 0.0]
'[c176] add the two digits of each number in the list and rearrange them in reverse order.': [1, 0.0]
'[c176] calculate the sum of each pair of consecutive elements, and then double each sum.': [1, 0.0]
? '[c176] convert each element into its corresponding ASCII value and then add the ASCII values of the corresponding elements in the reversed list.'
: [1, 0.0]
'[c176] multiply each element by 2 and add the index of the element.': [1, 0.0]
'[c176] perform element-wise addition of the first and last elements and then sort the resulting list in descending order.': [1, 0.0]
'[c176] perform the following steps:': [1, 0.0]
'[c176] subtract the element from 100 and then add the previous element if it exists.': [1, 0.0]
'[c176] subtract the last element from each element in the list.': [1, 0.0]
'[c177] append the list in reverse order after the original list.': [1, 0.75]
'[c177] append the list in reverse order to itself.': [1, 0.375]
'[c177] append the reverse of the list to the list.': [1, 0.5]
'[c177] append the reversed list at the end of the original list.': [1, 0.625]
'[c177] append the same list in reverse order.': [1, 0.25]
'[c177] concatenate the original list with its reverse.': [1, 0.0]
'[c177] create a copy of the input list, reverse it, and append it to the original list.': [1, 0.125]
'[c177] create a new list by alternating the first and last elements of the original list.': [1, 0.875]
'[c177] create a new list by appending the input list in reverse order, and then appending the input list again.': [1, 0.625]
'[c177] create a new list by concatenating the original list with its reverse.': [1, 0.75]
'[c177] create a new list by repeatedly appending the elements in reverse order.': [1, 0.625]
'[c177] repeat each element in reverse order.': [1, 0.625]
'[c177] repeat each element in the list twice and then reverse the list.': [1, 0.0]
'[c177] repeat each element twice and then reverse the list.': [1, 0.0]
? '[c177] repeat the first element, then alternate between the first element and the last element, and finally repeat the last element.'
: [1, 0.0]
'[c177] repeat the list in reverse order, and then concatenate it with the original list.': [1, 0.0]
'[c177] repeat the list in reverse order.': [1, 0.375]
'[c177] reverse the elements and repeat them twice in the order: [original list], [reversed list].': [1, 0.25]
'[c177] take the first two elements, reverse them, and then repeat them before and after the original list.': [1, 0.25]
'[c177] take the original list and append its reverse to it.': [1, 0.5]
'[c178] check if the list contains a number greater than 80.': [1, 0.0]
'[c178] extract all elements that are perfect squares.': [1, 0.0]
'[c178] filter out all numbers except for the smallest number in the list.': [1, 0.0]
'[c178] filter out all the elements that are not prime numbers.': [1, 0.0]
'[c178] filter out elements that are not perfect squares.': [1, 0.0]
'[c178] filter out numbers that are not divisible by 4 or numbers that are not prime.': [1, 0.0]
'[c178] find the elements that are divisible by 5.': [1, 0.0]
'[c178] find the maximum number in the list.': [1, 0.0]
'[c178] find the smallest number and remove all other numbers except for the smallest number.': [1, 0.0]
'[c178] keep only the numbers that are divisible by 3.': [2, 0.0]
'[c178] keep only the numbers that are multiples of 4.': [1, 0.0]
'[c178] only keep the elements that are greater than or equal to 5.': [1, 0.0]
'[c178] remove the last element from the list.': [2, 0.0]
'[c178] remove the last element of the list.': [1, 0.0]
'[c178] remove the smallest and largest elements from the list.': [1, 0.0]
'[c178] remove the smallest element in each list.': [1, 0.0]
'[c178] select only the numbers that are perfect squares.': [1, 0.0]
'[c178] select the numbers that are divisible by 5.': [1, 0.0]
'[c179] reverse the list.': [2, 0.0]
'[c179] sort the elements in ascending order.': [16, 0.0]
'[c179] sort the elements in non-decreasing order.': [2, 0.0]
'[c180] sort the elements in ascending order.': [19, 0.0]
'[c180] sort the elements in descending order.': [1, 0.0]
'[c181] rearrange the elements in descending order.': [1, 0.0]
'[c181] reverse the digits of each element.': [1, 0.0]
'[c181] reverse the order of the elements and replace each element with its complement (99 - element).': [1, 0.0]
'[c181] reverse the order of the first and second halves of the list.': [1, 0.375]
'[c181] sort the elements in ascending order.': [7, 0.0]
'[c181] sort the elements in descending order.': [1, 0.0]
'[c181] sort the list in ascending order.': [1, 0.0]
'[c181] swap the first and last element of the list.': [1, 0.0]
'[c181] swap the first and last element.': [1, 0.0]
'[c181] swap the first and last elements.': [2, 0.0]
'[c181] swap the first and second elements.': [1, 0.0]
'[c181] swap the maximum and minimum elements.': [1, 0.0]
'[c181] swap the second and second-last elements.': [1, 0.25]
'[c182] extract the elements at indices 2, 5, and 8 (0-indexed).': [1, 1.0]
'[c182] filter out all elements that are not divisible by 3.': [1, 0.0]
'[c182] filter out elements that are not greater than 10, and then sort the remaining elements in ascending order.': [1, 0.0]
'[c182] keep only the elements that appear more than once.': [1, 0.0]
'[c182] select elements at indices 2, 5, and 8.': [1, 0.875]
'[c182] select the element at index 2, index 5, and index -1.': [1, 0.375]
'[c182] select the elements at indices 2, 5, and 8.': [1, 0.875]
'[c182] select the elements at positions 2, 5, and 7.': [1, 0.0]
'[c182] select the elements at positions 2, 5, and 9 in the list and form a new list.': [1, 0.375]
'[c182] select the elements with the indices 2, 5, and 8.': [1, 0.875]
'[c182] select the maximum, second maximum, and third maximum elements in the list.': [1, 0.0]
'[c182] select the maximum, the minimum, and the third element from the input list.': [1, 0.0]
'[c182] select the numbers that are greater than or equal to 10 and less than or equal to 50.': [1, 0.0]
'[c182] select the second largest number from the list.': [1, 0.0]
'[c182] select the second, fifth, and last element of the list.': [1, 0.0]
'[c182] select the smallest, largest, and middle elements.': [1, 0.0]
'[c182] select the smallest, largest, and second largest elements from the list.': [1, 0.0]
'[c182] sort the elements in descending order and remove duplicates.': [1, 0.0]
'[c182] take the maximum and minimum values from each list and return them.': [1, 0.0]
'[c182] take the maximum value, middle value, and minimum value from the list.': [1, 0.0]
'[c183] count the frequency of each element and return a list of pairs [frequency, element].': [1, 0.0]
'[c183] count the frequency of each number and return a list of pairs [number, frequency].': [1, 0.0]
'[c183] count the number of distinct elements.': [1, 0.0]
? '[c183] count the number of occurrences of each element and create a list where each element corresponds to the count of that element.'
: [1, 0.0]
'[c183] count the number of unique elements in the list and generate a new list from 1 to that count in increasing order.': [1, 0.0]
'[c183] count the number of unique elements in the list and generate a new list with the numbers from 1 to the count.': [1, 0.125]
'[c183] count the number of unique elements in the list and return a list of the form [count, count+1, count+2, .': [1, 0.0]
'[c183] count the number of unique elements in the list and return a list with elements in ascending order.': [1, 0.0]
? '[c183] count the number of unique elements in the list and return the count followed by the next four elements in sorted order.'
: [1, 0.0]
'[c183] count the number of unique elements in the list, and then create a new list with the numbers 1 to the count.': [1, 0.0]
'[c183] count the number of unique elements in the list.': [1, 0.0]
? '[c183] count the occurrences of each element and create a list of tuples, where each tuple contains the element and its count in the original list.'
: [1, 0.0]
'[c183] count the occurrences of each element and return a list of the counts in ascending order.': [1, 0.0]
? '[c183] count the occurrences of each element and return a list of tuples with the element and its count, sorted in descending order of the count.'
: [1, 0.0]
'[c183] count the occurrences of each element and return a list with the element and its count.': [1, 0.0]
? '[c183] count the occurrences of each element in the list and generate a new list with the numbers from 1 to the count of each element.'
: [1, 0.0]
'[c183] count the occurrences of each number and return a list of tuples with the number and its count.': [1, 0.0]
'[c183] count the unique elements and the total number of elements in the input list.': [1, 0.0]
'[c183] count the unique elements in the list.': [1, 0.0]
'[c184] check if the list contains a single digit number.': [1, 0.0]
'[c184] filter out all numbers that are not equal to 4.': [1, 0.125]
'[c184] filter out all numbers that are not single-digit.': [1, 0.0]
'[c184] filter out all the elements that are less than or equal to 6.': [1, 0.0]
'[c184] filter out any number that has more than one digit.': [1, 0.0]
'[c184] filter out the elements that are greater than 10 and less than 20.': [1, 0.0]
'[c184] filter out the elements that are not single-digit numbers.': [1, 0.0]
'[c184] find and return all elements that are less than or equal to 50.': [1, 0.0]
'[c184] keep only the elements that are greater than or equal to 20.': [1, 0.0]
'[c184] select elements that are divisible by 2 or 3.': [1, 0.0]
'[c184] select elements that have a length of 1.': [1, 0.0]
'[c184] select every third element starting from the second element.': [1, 0.0]
'[c184] select the elements that are greater than 10 and less than 70.': [1, 0.0]
'[c184] select the elements that are less than or equal to 10 and sort them in ascending order.': [1, 0.0]
'[c184] select the elements that are prime numbers.': [2, 0.0]
'[c184] select the odd numbers.': [1, 0.0]
'[c184] select the prime numbers from the list.': [1, 0.0]
'[c184] take all the odd numbers from the list.': [1, 0.0]
'[c184] take the last digit of each number in the list.': [1, 0.0]
'[c185] find the sum and square it with the first element.': [1, 0.0]
'[c185] find the sum of the first and last elements, and then find the largest digit in the list.': [1, 0.0]
'[c185] find the sum of the first and second elements, then append the last element.': [1, 0.0]
'[c185] keep the first element, add 90 to the second element, and keep the last element.': [1, 0.0]
'[c185] keep the first element, multiply the second element by 3, and keep the last element.': [1, 0.125]
'[c185] keep the first element, sum all the elements except the first element, and append the sum at the end of the list.': [1, 0.0]
'[c185] keep the first element, sum all the numbers divisible by 2, and keep the last element.': [1, 0.0]
'[c185] perform addition on the first and third elements of the list.': [1, 0.0]
'[c185] replace each number with the sum of its digits.': [1, 0.0]
'[c185] replace the second element with 9 times the first element.': [1, 0.0]
'[c185] replace the second element with the sum of the second and third elements.': [1, 0.0]
'[c185] sum the first and last elements of the list and append it to the new list.': [1, 0.0]
'[c185] sum the first and last elements of the list.': [1, 0.0]
'[c185] sum the first and last elements, and append them to the new list.': [1, 0.0]
'[c185] sum the first and second elements and append the third element to the result.': [1, 0.0]
'[c185] sum up all the even elements in the list and append it to the end of the list.': [1, 0.0]
'[c185] take the first and third elements of the list and multiply them.': [1, 0.0]
'[c185] take the first element, multiply it by 3, and append it to a new list.': [1, 0.0]
'[c185] take the first element, then add the sum of the first and last element, and finally take the last element.': [1, 0.0]
'[c185] take the first number, add the sum of the digits of the second number, and append the last number.': [1, 0.0]
'[c186] filter out numbers that are not divisible by 3.': [1, 0.125]
'[c186] find the maximum number in the list and remove all other numbers.': [1, 0.125]
'[c186] find the maximum values from the list.': [1, 0.0]
'[c186] get the largest two numbers in the list.': [1, 0.0]
'[c186] keep only the numbers that are greater than or equal to 40.': [1, 0.375]
'[c186] remove all duplicate elements and sort the list in ascending order.': [1, 0.0]
'[c186] remove duplicate elements and sort the list in descending order.': [1, 0.0]
'[c186] remove duplicate elements from the list.': [1, 0.0]
'[c186] remove duplicates and sort the elements in descending order.': [1, 0.0]
'[c186] remove duplicates and sort the list in ascending order.': [1, 0.0]
'[c186] remove duplicates and sort the list in descending order.': [1, 0.0]
'[c186] return a list of elements that appear more than once.': [1, 0.0]
'[c186] select the elements greater than or equal to 50.': [1, 0.25]
'[c186] select the highest 3 numbers in the list.': [1, 0.25]
'[c186] select the highest two elements in the list.': [1, 0.0]
'[c186] select the maximum value and remove all other elements.': [1, 0.0]
'[c186] select the numbers that are divisible by 3.': [1, 0.125]
'[c186] select the numbers that are greater than 10.': [1, 0.375]
'[c186] select the three largest numbers from the list in descending order.': [1, 0.0]
'[c186] take the maximum three numbers in the list.': [1, 0.0]
'[c187] add the number 0 to the end of the list, followed by the entire list repeated twice.': [1, 1.0]
'[c187] append 0 and then repeat the input list.': [1, 0.875]
'[c187] append 0 at the end of the list, then append the original list again.': [1, 1.0]
'[c187] append 0 to the list, and then append the original list to itself.': [1, 1.0]
'[c187] append 0, followed by the original list.': [1, 1.0]
'[c187] append the elements of the original list to itself, followed by a 0 and then the original list.': [1, 0.875]
'[c187] append the first and second elements of the list to the end of the list, followed by appending 0 to the end.': [1, 1.0]
'[c187] append the first element of the list and then append the entire list again.': [1, 0.375]
'[c187] append the last element of the input list twice, followed by the original input list.': [1, 0.25]
'[c187] append the number 0 to the end of the list, and then repeat the entire list.': [1, 1.0]
'[c187] append the number 0 to the end of the list, then repeat the original list twice.': [1, 1.0]
'[c187] append the number 0 to the list, then append the original list.': [1, 1.0]
'[c187] append the number itself, then 0, and then the number itself again.': [1, 0.875]
'[c187] append the original list at the end of itself, followed by a 0.': [1, 1.0]
'[c187] append the original list to itself, followed by appending a 0 and the original list again.': [1, 1.0]
'[c187] append the reverse of the list to the original list, followed by appending the first element of the original list.': [1, 1.0]
'[c187] duplicate each element and append a 0 at the end of the list.': [1, 1.0]
'[c187] duplicate the list and append the first element at the end.': [1, 0.25]
'[c187] repeat the elements in the list, followed by appending the element 0 and then repeating the elements again.': [1, 1.0]
'[c187] repeat the list twice and append a 0 at the end.': [1, 1.0]
'[c188] check if a number is divisible by 2 or not.': [1, 0.125]
'[c188] check if each number is greater than or equal to 10.': [1, 0.0]
'[c188] check if the number is divisible by 3.': [1, 0.25]
'[c188] check if the number is divisible by 4, and if it is, the output is 0, otherwise, the output is 1.': [1, 0.0]
'[c188] check if the number is less than or equal to 10.': [1, 0.125]
'[c188] convert each element to its binary representation and count the number of 1''s in each binary representation.': [1, 0.0]
'[c188] convert each element to its binary representation and take the last digit.': [1, 0.0]
? '[c188] convert each number in the list into a binary representation and count the number of 1s in that binary representation.'
: [1, 0.0]
'[c188] convert each number into a string and count the number of ''0''s in the string.': [1, 0.125]
'[c188] convert each number to its binary representation and count the number of 1s in the binary representation.': [1, 0.0]
'[c188] convert each number to its binary representation and take the 4th digit from the right.': [1, 0.0]
'[c188] convert each number to its binary representation and then count the number of 1s in the binary representation.': [1, 0.0]
'[c188] convert each number to its binary representation and then count the number of ones in the binary representation.': [1, 0.0]
'[c188] convert the list elements into binary and count the number of 1''s in each binary representation.': [1, 0.0]
'[c188] determine whether the number is divisible by 2.': [1, 0.0]
'[c188] divide the number by 10 and return 0 if the number is even, or 1 if the number is odd.': [1, 0.0]
? '[c188] generate a list where the elements are 1 if the corresponding element from the question list is greater than or equal to 10, else 0.'
: [1, 0.0]
'[c188] map each element to 1 if it is divisible by 2, otherwise map it to 0.': [1, 0.125]
'[c188] replace the elements with 0 if they are even, and with 1 if they are odd.': [1, 0.125]
? '[c189] create a new list starting from the minimum value in the given list and ending at the maximum value in the given list, inclusive.'
: [1, 1.0]
'[c189] create a sorted list of unique elements from the given list.': [1, 0.125]
'[c189] create a sorted list without duplicate elements.': [1, 0.0]
'[c189] find the minimum and maximum numbers in the list and create a sequence from the minimum to the maximum.': [1, 1.0]
? '[c189] generate a list of consecutive integers starting from the smallest number in the list up to the largest number in the list.'
: [1, 1.0]
'[c189] generate a list of consecutive numbers starting from the first element and ending with the last element.': [1, 0.375]
? '[c189] generate a list of consecutive numbers starting from the minimum number in the list up to the maximum number in the list.'
: [1, 1.0]
'[c189] generate a list of consecutive numbers starting from the minimum value and ending with the maximum value.': [1, 1.0]
? '[c189] generate a list of consecutive numbers starting from the minimum value in the input list to the maximum value in the input list.'
: [1, 1.0]
'[c189] generate a list of numbers from the minimum number in the input list to the maximum number in the input list.': [1, 1.0]
'[c189] generate a range of numbers from the minimum value to the maximum value.': [1, 1.0]
? '[c189] generate a sequence of numbers starting from the minimum value in the list and incrementing by 1 until reaching the maximum value in the list.'
: [1, 1.0]
? '[c189] generate a sequence of numbers starting from the minimum value of the input list up to the maximum value of the input list.'
: [1, 0.0]
'[c189] remove duplicate elements and sort the list in ascending order.': [2, 0.0]
'[c189] remove duplicate elements and then increment each element starting from the smallest element.': [1, 0.75]
'[c189] remove duplicate elements from the list and sort it in ascending order.': [1, 0.125]
? '[c189] remove duplicate elements, sort the elements in ascending order, and add missing elements to form a consecutive sequence starting from the smallest element to the largest element.'
: [1, 0.875]
'[c189] remove duplicates and generate a sorted list from the unique elements.': [1, 0.125]
'[c189] remove duplicates and sort the elements in ascending order.': [1, 0.125]
'[c190] add 2 to all odd numbers in the list.': [1, 0.0]
'[c190] create a list of consecutive odd numbers that are greater than the input number.': [1, 0.0]
'[c190] create a list of numbers starting from the first element and incrementing by 2.': [1, 0.25]
'[c190] filter out elements that are not in the range of 0 to 100, inclusive.': [1, 0.0]
'[c190] find the factors of each number, sort them in increasing order, and remove duplicates.': [1, 0.0]
'[c190] find the odd numbers, increment them by 1, and return the result in a sorted list.': [1, 0.0]
'[c190] find the prime numbers from the given list and return them in ascending order.': [1, 0.0]
'[c190] generate a list of all prime numbers from 2 to the largest number in the input list.': [1, 0.0]
'[c190] generate a list of numbers starting from the first element and increasing by 2 until the last element is reached.': [1, 0.625]
'[c190] generate a list of odd numbers starting from 9.': [1, 0.125]
? '[c190] generate a list of odd numbers starting from the first element and incrementing by 2 until reaching a number greater than or equal to the last element.'
: [1, 0.125]
'[c190] generate a list of odd numbers starting from the first element to the second element, inclusive.': [1, 0.25]
'[c190] generate a sequence of numbers starting from the first element and incrementing by 2 until the last element.': [1, 0.5]
'[c190] generate a sequence starting from the first element and increasing by 2 until the last element is reached.': [1, 0.5]
'[c190] increment each element by 2 and then remove any duplicates.': [1, 0.0]
'[c190] keep only the numbers that are divisible by 2 and greater than 0.': [1, 0.0]
'[c190] remove any even numbers from the list and rearrange the remaining odd numbers in ascending order.': [1, 0.0]
'[c190] remove any numbers that are divisible by 5.': [1, 0.0]
'[c190] remove any numbers that are not divisible by 2.': [1, 0.0]
'[c190] return a list of elements that are divisible by 2.': [1, 0.0]
'[c191] duplicate each element multiple times depending on its value.': [1, 0.0]
'[c191] repeat the first element a certain number of times and then add the remaining elements.': [1, 0.0]
'[c191] repeat the first element a certain number of times based on the second element in the list.': [1, 0.0]
'[c191] repeat the first element n number of times, where n is the value of the second element.': [1, 0.0]
'[c191] repeat the largest number in the list a certain number of times.': [1, 0.0]
'[c191] repeat the last element a number of times equal to the first element.': [1, 0.0]
'[c191] repeat the maximum element in the list for each number of occurrences equal to its value.': [1, 0.0]
'[c191] repeat the maximum element in the list multiple times.': [2, 0.0]
'[c191] repeat the maximum element of the list multiple times.': [1, 0.0]
'[c191] repeat the maximum element of the list.': [1, 0.0]
'[c191] repeat the maximum number in the list multiple times.': [1, 0.0]
'[c191] repeat the maximum number in the list n times, where n is the number of elements in the list.': [1, 0.0]
'[c191] repeat the maximum number in the list.': [1, 0.0]
'[c191] repeat the maximum value in the list multiple times.': [1, 0.0]
'[c191] repeat the maximum value of the list.': [1, 0.0]
'[c191] replace all elements in the list with the maximum element in the list.': [1, 0.0]
'[c191] replace each element in the list with the maximum value in the list.': [1, 0.0]
'[c191] replace each element with the largest element from the input list.': [1, 0.0]
'[c191] replace each element with the maximum value in the original list.': [1, 0.0]
'[c192] calculate the sum of the digits for each number in the list.': [1, 0.0]
'[c192] calculate the sum of the digits of each number and return the corresponding list of sums.': [1, 0.0]
'[c192] calculate the sum of the digits of each number, then reverse the result.': [1, 0.0]
'[c192] convert each number to its corresponding last digit.': [1, 0.0]
'[c192] convert each number to its corresponding unit digit.': [1, 0.0]
'[c192] convert each number to its individual digits and keep them in the same order.': [1, 0.0]
'[c192] convert each number to its sum of digits.': [1, 0.0]
'[c192] divide each element by 10 and take the remainder.': [1, 0.0]
'[c192] extract the last digit of each number.': [2, 0.0]
'[c192] extract the ones digit of each number.': [1, 0.0]
'[c192] extract the units digit of each number.': [1, 0.0]
'[c192] replace each digit with the sum of its digits.': [1, 0.0]
'[c192] sum the digits of each number.': [1, 0.0]
'[c192] take the first digit of each element in the list.': [1, 0.25]
'[c192] take the last digit of each number.': [3, 0.0]
'[c192] take the modulo of each element with 10 and reverse the resulting list.': [1, 0.0]
'[c192] take the sum of each number and then convert it to a string.': [1, 0.0]
'[c193] sort the elements in ascending order.': [20, 0.0]
? '[c194] add the first and last element as the first and last element of the resulting list, then iterate through the remaining elements in reverse order.'
: [1, 0.0]
'[c194] add the first element to the end of the list, then add the length of the list to the beginning.': [1, 1.0]
'[c194] add the length of the list at the beginning and end of the list.': [1, 1.0]
'[c194] add the length of the list to the beginning and end of the list.': [1, 1.0]
? '[c194] add the length of the original list as the first element, reverse the list, and then append the length of the original list again.'
: [1, 1.0]
'[c194] append the first element, reverse the list, append the last element, then append the length of the original list.': [1, 0.75]
? '[c194] append the length of the list at the beginning, then reverse the list, and finally append the length of the list at the end.'
: [1, 1.0]
? '[c194] count the number of elements in the list, add it as the first element, then reverse the list and append the count as the last element.'
: [1, 1.0]
? '[c194] create a new list by appending the reverse of the original list to itself, then appending the length of the original list to the new list.'
: [1, 1.0]
? '[c194] first count the number of elements in the list, then append the last element, then append the elements in reverse order, and finally append the count again.'
: [1, 1.0]
? '[c194] generate a list of elements length/10, the maximum number in the list, the elements in reverse order, then the minimum number in the list.'
: [1, 0.25]
'[c194] generate a list with the following pattern: [N, .': [1, 1.0]
'[c194] insert the length of the list at the beginning and end of the list.': [1, 0.125]
'[c194] prepend the length of the list (plus 1) to the list, then append the length of the list (plus 1) to the list.': [1, 0.375]
'[c194] prepend the length of the list and the largest number in the list, then append the length of the list again.': [1, 1.0]
? '[c194] prepend the length of the list, then append the elements in reverse order, and finally append the length of the list again.'
: [1, 1.0]
'[c194] prepend the length of the list, then append the length of the list + 1.': [1, 0.125]
'[c194] sort the elements in ascending order and prepend the length of the list and append the length of the list.': [1, 0.0]
'[c195] add the numbers 23, 68, 42, 99, 71 to the end of the list.': [1, 0.0]
'[c195] append the elements 23, 68, 42, 99, 71 to the end of the list.': [1, 0.0]
'[c195] append the elements 23, 68, 42, 99, and 71 to the given list.': [1, 0.0]
'[c195] append the elements [23, 68, 42, 99, 71] at the end of the list.': [1, 0.0]
'[c195] append the elements [23, 68, 42, 99, 71] to the end of the input list.': [1, 0.0]
'[c195] append the elements [23, 68, 42, 99, 71].': [1, 1.0]
? '[c195] create a new list by taking the first element of the original list and then alternating between adding elements from the list [23, 68, 42, 99, 71] and the remaining elements of the original list.'
: [1, 0.0]
'[c195] insert the elements 23, 68, 42, 99, 71 in between the elements of the original list.': [1, 0.0]
'[c195] insert the elements [23, 68, 42, 99, 71] after each element in the list.': [1, 0.0]
'[c195] insert the numbers 23, 68, 42, 99, 71 after every number.': [1, 0.0]
'[c195] insert the numbers 23, 68, 42, 99, 71 in between each element of the original list.': [1, 0.0]
'[c195] insert the numbers 23, 68, 42, 99, 71 in between each pair of numbers in the list.': [1, 0.0]
'[c195] insert the numbers 23, 68, 42, 99, and 71 in between every pair of numbers in the given list.': [1, 0.0]
? '[c195] replace each element in the list with the corresponding element in [23, 68, 42, 99, 71] if it is not divisible by 4, and replace it with the current element if it is divisible by 4.'
: [1, 0.0]
'[c195] replace each number with its position in the list plus 23.': [1, 0.0]
'[c195] replace each number with the corresponding number from the sequence [23, 68, 42, 99, 71].': [1, 0.0]
'[c195] replace the elements with the numbers 23, 68, 42, 99, 71,  in order.': [1, 0.0]
'[c195] replace the last element with a series of fixed values: 23, 68, 42, 99, 71, and then append the new element.': [1, 0.125]
? '[c195] replace the second element with 23, the third element with 68, the fourth element with 42, the fifth element with 99, the sixth element with 71, and the seventh element with the last element of the input list.'
: [1, 1.0]
'[c195] replace the second element with the numbers 23, 68, 42, 99, 71, and then append the last element.': [1, 1.0]
'[c196] add the elements [17, 38, 82] to the front of the list, followed by [1, 55, 27].': [1, 1.0]
'[c196] add the numbers 17, 38, 82 to the beginning of the list, and then append the numbers 1, 55, 27 to the end.': [1, 1.0]
'[c196] add the numbers 17, 38, 82 to the beginning of the list, followed by the elements 1, 55, 27.': [1, 1.0]
'[c196] add the numbers 17, 38, 82 to the beginning of the list, then append the numbers 1, 55, 27 to the end of the list.': [1, 1.0]
'[c196] add the numbers 17, 38, 82, 1, 55, and 27 at the beginning of the list.': [1, 0.125]
? '[c196] add the sequence [17, 38, 82] to the beginning of the list, and append the sequence [1, 55, 27] to the end of the list.'
: [1, 1.0]
'[c196] append the elements [17, 38, 82] and [1, 55, 27] to the given list.': [1, 0.0]
'[c196] append the elements [17, 38, 82] and the elements [1, 55, 27] to the input list.': [1, 1.0]
'[c196] append the elements [17, 38, 82] at the beginning, followed by appending [1, 55, 27] at the end.': [1, 1.0]
'[c196] append the elements [17, 38, 82] to the given list.': [1, 0.0]
'[c196] append the elements [17, 38, 82] to the input list.': [1, 0.0]
'[c196] append the list [17, 38, 82] to the given list.': [1, 0.0]
? '[c196] append the numbers 17, 38, 82 to the beginning of the list, and then append the numbers 1, 55, 27 to the end of the list.'
: [1, 1.0]
'[c196] concatenate the list [17, 38, 82] at the beginning and [1, 55, 27] at the end.': [1, 1.0]
'[c196] insert the elements [17, 38, 82, 1, 55, 27] at the beginning of the list.': [1, 0.125]
'[c196] insert the elements [17, 38, 82] at the beginning and the elements [1, 55, 27] at the end.': [1, 1.0]
'[c196] insert the numbers 17, 38, 82 at the beginning and add the numbers 1, 55, 27 at the end.': [1, 1.0]
'[c196] prepend [17, 38, 82], append [1, 55, 27].': [1, 1.0]
'[c196] prepend the elements 17, 38, 82, then append the elements 1, 55, 27.': [1, 1.0]
'[c196] prepend the numbers [17, 38, 82] and append the numbers [1, 55, 27].': [1, 1.0]
'[c197] count the frequency of each element and return a list of those frequencies in the same order as the input list.': [1, 0.625]
'[c197] count the number of digits in each element and generate a new list using those counts.': [1, 0.125]
'[c197] count the number of occurrences of each element and replace the element with that count.': [1, 0.75]
'[c197] count the number of occurrences of each element and return a list with those counts in reverse order.': [1, 0.375]
'[c197] count the number of occurrences of each element in the list.': [1, 0.0]
'[c197] count the number of occurrences of each element, and replace each element with the corresponding count.': [1, 0.625]
'[c197] count the number of occurrences of the first element and generate a list with that count of the first element.': [1, 0.375]
'[c197] count the number of occurrences of the first element and return a list with that count for each element.': [1, 0.625]
'[c197] count the number of occurrences of the first element in the list and replace all elements with this count.': [1, 0.5]
'[c197] count the number of occurrences of the first element in the list and replace all other elements with that count.': [1, 0.375]
'[c197] count the number of occurrences of the first element in the list and replace each element with that count.': [1, 0.375]
'[c197] count the number of occurrences of the first element in the list, and replace each element with that count.': [1, 0.75]
'[c197] count the number of occurrences of the maximum element in the list.': [1, 0.75]
'[c197] count the number of times each element appears in the list and create a new list with those counts.': [1, 0.375]
? '[c197] count the number of times each element appears, and return a list of those counts in the same order as the original list.'
: [1, 0.75]
? '[c197] count the number of times the first element appears in the list and output that count as the only element in a new list.'
: [1, 0.0]
'[c197] count the number of times the first element appears in the list and replace each element with the count.': [1, 0.625]
'[c197] count the number of times the number 75 appears in the list.': [1, 0.0]
'[c197] count the occurrences of the number 75 in the list.': [1, 0.125]
'[c197] replace the element 77 with 5, the element 49 with 1, the element 53 with 3, and the element 69 with 2.': [1, 0.0]
'[c198] remove duplicate elements and sort the list in descending order.': [1, 1.0]
'[c198] sort the elements in descending order.': [18, 14.125]
'[c198] sort the list in descending order.': [1, 1.0]
? '[c199] add a new element for every existing element, where the new element is the position of the existing element in the list followed by the existing element itself.'
: [1, 0.25]
'[c199] add a number (starting from 1) before each element in the list.': [1, 0.125]
'[c199] add a number in the format of [position, element] for each element in the list, starting from position 1.': [1, 0.375]
'[c199] add an element''s position followed by the element itself to the output list.': [1, 0.25]
? '[c199] convert each number to its corresponding rank in the list (starting from 1) and then combine the ranks with the original numbers in alternate order.'
: [1, 0.25]
'[c199] create a list where each element is followed by its index, starting from 1.': [1, 1.0]
'[c199] generate a list by adding a number in increments of 1 based on the position of the original list elements.': [1, 0.875]
'[c199] generate a list of elements by alternating between the current element index and the element value.': [1, 0.375]
'[c199] generate a list of elements by alternating between the elements of the input list and their corresponding indices.': [1, 0.625]
? '[c199] generate a list of elements in the following pattern: [1, x, 2, y, 3, z], where x, y, and z are the given elements of the original list.'
: [1, 0.375]
'[c199] generate a list of elements in the form [1, element, 2, element, 3, element, 4, element].': [1, 0.625]
'[c199] generate a list where each element is a pair of a number and its index in the original list.': [1, 0.125]
'[c199] generate a list where each element is the index followed by the corresponding element.': [1, 1.0]
'[c199] generate a list where each element is the index of the element in the original list followed by the element itself.': [1, 0.0]
? '[c199] generate a list with the numbers from 1 to n, where n is the number of elements in the given list, and alternating with the elements in the given list.'
: [1, 0.125]
'[c199] insert a number in front of each element, starting from 1 and increasing by 1 each time.': [1, 0.25]
'[c199] insert a number representing the position of each element in the list.': [1, 0.125]
'[c199] insert the index of each element followed by the element itself.': [1, 0.25]
'[c199] prepend a sequence number starting from 1 before each element.': [1, 0.125]
'[c199] represent each number in the list with its index position and the number itself.': [1, 0.375]
'[c200] calculate the digit sum of each element and sort the elements in ascending order.': [1, 0.0]
'[c200] calculate the sum of the digits in each number and return a list of the digits.': [1, 0.0]
'[c200] extract the individual digits from each number and sort them in ascending order.': [1, 0.0]
'[c200] find the last digit of each number and sort them in ascending order.': [1, 0.0]
'[c200] find the remainder after dividing each element by 10.': [1, 0.0]
'[c200] find the remainder of each element when divided by 10 and sort them in ascending order.': [1, 0.0]
'[c200] find the remainder of each number when divided by 10 and sort the numbers in ascending order.': [1, 0.0]
'[c200] find the remainder of each number when divided by 10.': [1, 0.0]
'[c200] find the smallest digit in each number and sort them in ascending order.': [1, 0.0]
'[c200] replace each digit with its previous digit, and if it is 0, replace it with 9.': [1, 0.0]
'[c200] replace each number with the remainder when divided by 10.': [1, 0.0]
'[c200] replace each number with the sum of its digits, and then sort the resulting list in ascending order.': [1, 0.0]
'[c200] replace each number with the sum of its digits.': [1, 0.0]
'[c200] replace the first digit of each number with the smallest digit in the number.': [1, 0.0]
'[c200] sort the digits of each number in ascending order.': [1, 0.0]
'[c200] sort the elements in ascending order.': [1, 0.0]
'[c200] sort the numbers in ascending order and only keep unique values.': [1, 0.0]
'[c200] take the last digit of each element.': [1, 0.0]
'[c200] take the last digit of each number.': [2, 0.0]
'[c201] filter out all numbers that are not divisible by 10.': [1, 0.25]
'[c201] keep only the elements that are greater than or equal to 50.': [1, 0.125]
'[c201] remove the biggest number from the list.': [1, 0.25]
'[c201] remove the elements that are not divisible by 10.': [1, 0.375]
'[c201] remove the first element from the list.': [1, 0.375]
'[c201] remove the first element if it is greater than or equal to 50.': [1, 0.125]
'[c201] remove the first element if it is greater than the second element.': [1, 0.375]
'[c201] remove the first element of the list.': [1, 0.375]
'[c201] remove the largest element if there is more than one element in the list, otherwise return an empty list.': [1, 0.125]
'[c201] remove the maximum element.': [1, 0.25]
'[c201] remove the smallest element from the list.': [1, 0.125]
'[c201] remove the smallest element(s) from the list.': [1, 0.125]
'[c201] remove the smallest number from the list.': [1, 0.125]
'[c201] sort the elements in descending order.': [7, 0.0]
'[c202] calculate the sum of the digits of each number and replace the number with the result.': [1, 0.0]
'[c202] convert each number in the list to its corresponding digit sum (e.': [1, 0.0]
'[c202] count the number of digits in each element and return a list of those counts.': [1, 0.0]
'[c202] count the number of digits in each number and return a list of those counts in ascending order.': [1, 0.0]
'[c202] divide each element by 2 and take the integer part of the result.': [1, 0.0]
'[c202] divide each element by 8 and then take the remainder.': [1, 0.0]
'[c202] extract the last digit of each number and sort them in ascending order.': [1, 0.0]
'[c202] find the index of each element that is a perfect square, and return a list of those indices starting from 1.': [1, 0.0]
'[c202] find the position of the minimum and maximum elements in the list and return the positions as a list.': [1, 0.0]
'[c202] find the position of the number in the list starting from 1.': [1, 0.0]
? '[c202] find the position of the numbers that are divisible by 2 and divide them by 2, then sort the resulting numbers in ascending order.'
: [1, 0.0]
'[c202] find the prime factors of each number and sort them in ascending order.': [1, 0.0]
'[c202] find the prime numbers in the list.': [1, 0.0]
'[c202] find the smallest digit in each number and keep only those digits.': [1, 0.0]
'[c202] map each number to its corresponding digit sum.': [1, 0.0]
'[c202] replace each number with its digit sum.': [1, 0.0]
'[c202] replace the numbers with their corresponding positions in the list (starting from 1).': [1, 0.0]
'[c202] return the index of the elements that are multiples of 2 or 3.': [1, 0.25]
'[c202] take the integers in each list and determine if they are divisible by 2, 3, 5, or 7.': [1, 0.0]
'[c202] take the last digit of each number and sort them in ascending order.': [1, 0.0]
'[c203] divide each element by 2 and take the floor value.': [1, 0.0]
'[c203] divide each element by 2.': [1, 0.0]
'[c203] double each element except for the first element.': [1, 0.25]
'[c203] double each element in the list.': [1, 0.125]
'[c203] multiply each element by 2 except the first element.': [1, 0.625]
'[c203] multiply each element by 2.': [5, 0.625]
'[c203] multiply each element by 4.': [3, 0.25]
'[c203] multiply each element by 5.': [1, 0.0]
'[c203] multiply each element by a certain factor.': [1, 0.0]
'[c203] multiply each element in the list by 2.': [1, 0.0]
'[c203] multiply each element in the list by 4.': [1, 0.0]
'[c203] multiply each number by 2.': [2, 0.125]
'[c203] multiply each number by itself.': [1, 0.0]
'[c204] keep only the first occurrence of each unique element in the list.': [1, 0.125]
'[c204] keep only the unique elements in the list and preserve their order.': [1, 0.125]
'[c204] keep only the unique elements in the list.': [1, 0.125]
'[c204] remove all 0s from the list, while keeping the order of the other elements.': [1, 0.0]
'[c204] remove all 0s from the list.': [1, 0.0]
'[c204] remove all consecutive 0''s except the first occurrence.': [1, 0.0]
'[c204] remove all consecutive duplicate elements.': [1, 0.0]
'[c204] remove all consecutive occurrences of 0, except for the first one.': [1, 0.0]
'[c204] remove all duplicate elements and keep the order of the remaining elements.': [1, 0.125]
'[c204] remove all duplicates and reverse the list.': [1, 0.0]
'[c204] remove all elements that are not equal to 0.': [1, 0.0]
'[c204] remove all occurrences of 0.': [1, 0.0]
'[c204] remove all repeated elements and keep the original order.': [1, 0.125]
'[c204] remove all the zeros and duplicate values except for the first occurrence.': [1, 0.0]
'[c204] remove all the zeros from the list and then remove the duplicates.': [1, 0.0]
'[c204] remove all the zeros from the list.': [1, 0.125]
'[c204] remove all the zeros in the list.': [1, 0.125]
'[c204] remove duplicate elements and keep the original order of the remaining elements.': [1, 0.125]
'[c204] remove duplicates and keep only the unique elements and the number 0.': [1, 0.125]
'[c204] remove duplicates and keep the order of the remaining elements.': [1, 0.125]
'[c205] add up all the numbers in the list and take the square root of the sum.': [1, 0.25]
'[c205] calculate the square of the first element and verify if it is equal to the second element.': [1, 0.0]
'[c205] calculate the square of the first element in the list.': [1, 0.0]
'[c205] calculate the sum of all the elements and return the result modulo 100.': [1, 0.0]
'[c205] calculate the sum of the squares of the unique elements in the list.': [1, 0.0]
'[c205] find all the duplicates in the list, square them, and take the sum of all the squared duplicates.': [1, 0.0]
'[c205] find the maximum number in the list and return its square root.': [1, 0.0]
'[c205] find the maximum number in the list and return its square.': [1, 0.125]
'[c205] find the maximum value in the list and return its square.': [1, 0.0]
'[c205] find the minimum value in the list.': [1, 0.0]
'[c205] find the square of the smallest number in the list.': [1, 0.0]
? '[c205] find the square root of the first element, round it to the nearest integer, and remove any duplicates from the list.'
: [1, 0.0]
'[c205] find the sum of the squares of the numbers in the list and return the result as a single-element list.': [1, 0.0]
'[c205] keep only the numbers that are perfect squares.': [1, 0.125]
'[c205] multiply the first two numbers in the list and compute the square root of the result.': [1, 0.0]
'[c205] square each element and return only the unique values.': [1, 0.0]
'[c205] square each element and sum them.': [1, 0.0]
'[c205] square each element in the list and then sum them up.': [1, 0.0]
'[c205] sum all the numbers in the list and take the square root of the result.': [1, 0.0]
'[c205] sum up all the elements of the list and square the result.': [1, 0.0]
'[c206] find the maximum value in the list and repeat it multiple times.': [1, 0.0]
'[c206] find the smallest number in the list and repeat it three times.': [1, 0.0]
'[c206] keep only the elements that appear more than once.': [1, 0.0]
'[c206] keep only the numbers that appear more than once.': [1, 0.0]
'[c206] remove all duplicate elements and return the remaining elements in the same order.': [1, 0.0]
'[c206] remove all elements except the second and third element.': [1, 0.0]
'[c206] remove all elements that are not repeated in the list.': [1, 0.125]
'[c206] remove any duplicate numbers and then sort the numbers in ascending order.': [1, 0.0]
'[c206] remove duplicate elements and keep the order of the remaining elements.': [1, 0.0]
'[c206] remove duplicate numbers and arrange the remaining numbers in descending order.': [1, 0.0]
'[c206] remove duplicates and sort the elements in descending order.': [1, 0.0]
'[c206] remove duplicates from the list.': [1, 0.0]
'[c206] remove the first and last element of the list.': [1, 0.0]
'[c206] remove the first and last elements of the list.': [1, 0.0]
'[c206] return a list of the unique elements in the input list in descending order.': [1, 0.0]
'[c206] select and return the maximum and minimum elements in the list.': [1, 0.0]
'[c206] select elements that are greater than or equal to 50.': [1, 0.0]
'[c206] select the elements at the indices that are multiples of 2.': [1, 0.0]
'[c206] select the elements with values greater than or equal to 50.': [1, 0.0]
'[c206] select the numbers that are greater than or equal to 50.': [1, 0.0]
'[c207] add the first and last element of the list and append them to the original list.': [1, 0.0]
'[c207] add the first and last element of the list and replace the other elements with the sum.': [1, 0.0]
'[c207] add the first and last element, then multiply the result by 3 and subtract the first and last element.': [1, 0.0]
? '[c207] add the first and last elements and swap them, then add the second and second-to-last elements and swap them, and so on.'
: [1, 0.125]
'[c207] add the first and last elements of the list and append the result to both the beginning and end of the list.': [1, 0.0]
? '[c207] add the first and last elements, then subtract the second and second-to-last elements, and repeat this pattern until the list is complete.'
: [1, 0.0]
'[c207] add the first element to the last element, and then add the last element to the first element.': [1, 0.0]
? '[c207] calculate the sum of the first and last element, then the sum of the second and second-to-last element, and so on, and return a list with these sums.'
: [1, 0.125]
'[c207] create a new list where each element is the sum of the corresponding element from the original list and its index.': [1, 0.0]
? '[c207] find the mean of the first two elements, double it, and then create a new list with the doubled mean as each element.'
: [1, 0.0]
'[c207] mirror each element around the average of the list.': [1, 0.0]
'[c207] reverse the digits in each element.': [1, 0.0]
'[c207] reverse the digits of each element.': [1, 0.0]
'[c207] reverse the digits of each number and subtract 1 from the resulting number.': [1, 0.0]
'[c207] reverse the digits of each number in the list.': [2, 0.0]
'[c207] reverse the digits of each number.': [3, 0.0]
'[c207] reverse the numbers and add 3 to each element.': [1, 0.0]
'[c208] filter out all numbers that are less than 10.': [1, 0.0]
'[c208] find the smallest number in the list and append it to the end.': [1, 0.0]
'[c208] find the smallest number in the list.': [1, 0.125]
'[c208] keep only the elements that occur at least twice in the list and remove all other elements.': [1, 0.0]
'[c208] keep only the even elements in the list.': [1, 0.0]
'[c208] only keep the elements that appear more than once.': [1, 0.125]
'[c208] remove all elements from the list that are smaller than the largest element.': [1, 0.0]
'[c208] remove all elements that are not greater than or equal to 20.': [1, 0.0]
'[c208] remove all elements that occur more than once in the list.': [1, 0.0]
'[c208] remove all numbers that are less than 10.': [1, 0.0]
'[c208] remove all the duplicates in a list.': [1, 0.0]
'[c208] remove duplicate elements from the list, keeping only the first occurrence of each element.': [1, 0.125]
'[c208] remove duplicate elements.': [1, 0.0]
'[c208] remove duplicates and order the numbers in ascending order.': [1, 0.0]
'[c208] remove duplicates from the list while maintaining the order.': [1, 0.0]
'[c208] remove the element at index 0.': [1, 0.125]
'[c208] remove the first element and keep the rest of the list.': [1, 0.125]
'[c208] remove the first element and return the remaining elements.': [1, 0.0]
'[c208] remove the first element if it is smaller than the second element.': [1, 0.125]
'[c208] select the elements that are greater than 20.': [1, 0.0]
'[c209] add the smallest and largest elements to the list.': [1, 0.0]
'[c209] append the sum of the first and last elements at the end of the list.': [1, 0.0]
'[c209] append the sum of the smallest and largest elements at the beginning and end of the list, respectively.': [1, 0.125]
? '[c209] create a new list by inserting 99 before the maximum value in the input list and inserting the sum of the maximum and minimum values after the maximum value in the input list.'
: [1, 0.125]
'[c209] insert the maximum number in the middle of the list, and append the minimum number at the end.': [1, 0.0]
? '[c209] insert the square of the minimum value in each list at the beginning, and the square of the maximum value at the end.'
: [1, 0.0]
'[c209] insert the sum of the first and last element at the beginning and end of the list.': [1, 0.0]
? '[c209] insert the sum of the first and last element between the first and second element, and then append the last element to the end.'
: [1, 0.0]
'[c209] insert the sum of the first and last elements after the second element in the list.': [1, 0.0]
? '[c209] insert the sum of the first and last elements at the beginning of the list, and insert the sum of the second and second to last elements at the end of the list.'
: [1, 0.0]
'[c209] insert the sum of the first and last elements of the list between them.': [1, 0.0]
'[c209] insert the sum of the two adjacent elements between them.': [1, 0.0]
'[c209] prepend the maximum element of the list and append the minimum element of the list.': [1, 0.0]
'[c209] sort the elements in ascending order and then append the sum of the elements at the end.': [1, 0.0]
'[c209] sort the elements in ascending order and then append the sum of the first and last elements.': [1, 0.25]
? '[c209] sort the elements in ascending order and then insert the largest element plus one at the beginning and the smallest element plus one at the end.'
: [1, 0.0]
'[c209] sort the elements in ascending order.': [1, 0.0]
? '[c209] sort the list in ascending order and then insert the sum of the first and last elements at the beginning and the end of the list.'
: [1, 0.0]
'[c209] square each element.': [1, 0.0]
'[c210] append the last element of the list to the list.': [1, 0.0]
'[c210] append the last element to the list.': [3, 0.0]
'[c210] duplicate the largest element in the list.': [1, 0.0]
'[c210] duplicate the last element in the list.': [1, 0.0]
'[c210] find the largest number in the list and append it to the end.': [1, 0.0]
'[c210] insert the first element after every occurrence of the last element in the list.': [1, 0.0]
'[c210] insert the last element after each occurrence of that element.': [1, 0.0]
'[c210] insert the last element at the middle index.': [1, 0.0]
'[c210] insert the last element before each occurrence of the second-to-last element.': [1, 0.375]
'[c210] insert the last element in the list after each occurrence of that element.': [1, 0.0]
'[c210] insert the maximum number in the list after every occurrence of the maximum number.': [1, 0.0]
'[c210] insert the second element after every occurrence of the first element in the list.': [1, 0.0]
'[c210] remove duplicate elements and then append the last element to the end of the list.': [1, 0.0]
'[c210] repeat the last element if it appears more than once.': [1, 0.0]
'[c210] replace the last element with the second last element.': [1, 0.0]
? '[c210] replace the last element with the second-to-last element, and then append the second-to-last element to the end of the list.'
: [1, 0.0]
'[c210] replace the second occurrence of an element with the element itself.': [1, 0.0]
'[c210] replace the second occurrence of the maximum value with the maximum value itself.': [1, 0.0]
'[c211] concatenate the list in reverse order, followed by the original list.': [1, 0.0]
'[c211] create a new list by repeating each element twice and then reversing the list.': [1, 0.0]
? '[c211] create a new list by taking the last element, then the second element, then the second-to-last element, then the third element, and so on.'
: [1, 0.0]
'[c211] create a new list where each element is repeated twice, in reverse order.': [1, 0.0]
'[c211] reverse the elements and append the reverse of the elements to the original list.': [1, 0.0]
'[c211] reverse the elements and duplicate each element except the first and last.': [1, 0.0]
'[c211] reverse the elements and duplicate each element in the reversed list except for the first and last elements.': [1, 0.0]
'[c211] reverse the elements in pairs.': [1, 0.0]
'[c211] reverse the list and append the last element at the beginning and end.': [1, 0.0]
'[c211] reverse the list and duplicate each element.': [1, 0.0]
'[c211] reverse the list and repeat each element twice.': [1, 0.0]
'[c211] reverse the list and then duplicate each element.': [2, 0.0]
'[c211] reverse the list and then repeat each element twice.': [1, 0.0]
'[c211] reverse the list and then repeat the middle element.': [1, 0.0]
'[c211] reverse the list and then repeat the reversed list.': [1, 0.0]
'[c211] reverse the order of the elements and duplicate each element.': [1, 0.125]
'[c211] reverse the order of the elements and repeat each element twice.': [1, 0.0]
'[c211] sort the elements in ascending order and then duplicate each element.': [1, 0.0]
'[c211] take the first element, repeat it in reverse order, and concatenate the remaining elements in sorted order.': [1, 0.0]
'[c212] add three 3''s after every element.': [1, 0.0]
'[c212] add three 3''s at the end of the list.': [1, 0.0]
'[c212] append 3 three times to the end of the list.': [1, 0.0]
'[c212] insert the number 3 before and after every element in the list.': [1, 0.0]
'[c212] insert the number 3 three times after each element in the list.': [1, 0.0]
'[c212] insert the number 3 three times before each number in the list.': [1, 0.0]
'[c212] insert three 3''s after each element.': [5, 0.125]
'[c212] insert three 3''s after each number.': [2, 0.0]
'[c212] insert three 3''s after every element.': [2, 0.0]
'[c212] insert three 3s after each element of the input list.': [1, 0.0]
'[c212] insert three 3s after every element in the list.': [1, 0.0]
'[c212] insert three 3s before the last element.': [1, 0.0]
'[c212] insert three 3s in between each pair of numbers.': [1, 0.0]
'[c212] replace all non-prime numbers with the number 3.': [1, 0.0]
'[c213] select the three smallest numbers in the list and sort them in ascending order.': [1, 1.0]
'[c213] sort the elements in ascending order and then select the first 3 elements.': [1, 1.0]
'[c213] sort the elements in ascending order.': [16, 1.5]
'[c213] sort the list in ascending order and then take the first three elements.': [1, 0.875]
'[c213] sort the numbers in ascending order.': [1, 0.125]
'[c214] keep only the elements that are greater than 10.': [1, 0.0]
'[c214] remove all elements that are less than 10 and then remove duplicates.': [1, 0.0]
'[c214] remove any elements that are less than 10.': [1, 0.0]
'[c214] remove the elements that are divisible by 5.': [1, 0.0]
'[c214] remove the elements that are not divisible by 5.': [1, 0.0]
'[c214] remove the first and last elements from the list.': [1, 0.0]
'[c214] remove the first and last elements.': [1, 0.0]
'[c214] remove the first element if it is greater than or equal to the last element.': [1, 0.0]
'[c214] remove the first element if it is greater than the last element.': [2, 0.0]
'[c214] remove the first element if it is greater than the second element.': [1, 0.0]
'[c214] remove the first element if it is less than the last element.': [1, 0.0]
'[c214] remove the first element if it is not a single-digit number.': [1, 0.0]
'[c214] remove the first element if it is not divisible by 2, else remove the last element.': [1, 0.0]
'[c214] remove the first element if it is not greater than the second element.': [1, 0.0]
'[c214] remove the first element if it is smaller than the last element.': [1, 0.0]
'[c214] remove the first occurrence of the smallest element.': [1, 0.0]
'[c214] remove the smallest element from the list.': [2, 0.0]
'[c214] remove the smallest number from the list.': [1, 0.0]
'[c215] calculate the sum of the digits of each element and replace it with the result.': [1, 0.0]
'[c215] keep only the unique elements in the list, in the same order as they appear.': [1, 0.0]
'[c215] remove any number that is not divisible by 2 or 3.': [1, 0.0]
'[c215] remove duplicates from the list.': [1, 0.0]
'[c215] remove the first element if it is equal to the last element, and duplicate the last element.': [1, 0.0]
'[c215] remove the first element if it is smaller than the second element.': [1, 0.0]
'[c215] replace any number greater than 10 with the number 10.': [1, 0.0]
'[c215] replace any number greater than 10 with the number modulo 10.': [1, 0.0]
'[c215] replace any number greater than 9 with the sum of its digits.': [1, 0.0]
'[c215] replace any number greater than or equal to 10 with 10.': [1, 0.0]
'[c215] replace any number greater than or equal to 10 with the sum of its digits.': [1, 0.0]
'[c215] replace any number larger than 10 with the number 10.': [2, 0.0]
'[c215] replace each element with the sum of itself and the element after it.': [1, 0.0]
'[c215] replace numbers that are multiples of 3 with 3, and numbers that are multiples of 5 with 5.': [1, 0.0]
'[c215] replace the element at index 0 with the sum of the element at index 0 and the element at index 1.': [1, 0.0]
'[c215] replace the element at index 2 with the sum of the element at index 5 and the element at index 8.': [1, 0.0]
? '[c215] replace the first element with the second element, and if there is no second element, then remove the first element.'
: [1, 0.0]
'[c215] replace the second element with the element 5 if it is greater than 5, else replace it with the element 3.': [1, 0.0]
'[c215] sum the digits of each number and replace any number greater than 9 with the sum of its digits.': [1, 0.0]
'[c216] sort the elements in ascending order.': [18, 6.25]
'[c216] sort the list in ascending order.': [1, 0.5]
'[c216] sort the numbers in ascending order.': [1, 0.375]
'[c217] sort the elements in ascending order.': [16, 0.25]
'[c217] sort the list in ascending order.': [3, 0.125]
'[c217] sort the list in descending order.': [1, 0.0]
'[c218] find the repeated numbers and return them in a new list.': [1, 0.125]
'[c218] keep only the repeated elements.': [1, 0.125]
'[c218] keep only the unique elements in the list.': [1, 0.0]
'[c218] keep the elements that appear more than once, and remove the elements that appear only once.': [1, 0.0]
'[c218] only keep the first two elements of the list.': [1, 0.125]
'[c218] reduce the list to a list containing only the first element.': [1, 0.0]
'[c218] remove all duplicate elements and keep only the unique elements.': [1, 0.0]
'[c218] remove all duplicate elements from the list.': [1, 0.0]
'[c218] remove all duplicates and only keep one instance of each number.': [1, 0.0]
'[c218] remove all duplicates from the list.': [1, 0.0]
'[c218] remove all elements except for the first element and the elements that are the same as the first element.': [1, 0.0]
'[c218] remove all elements except for the first two elements.': [1, 0.0]
'[c218] remove all elements except the ones that are repeated.': [1, 0.0]
'[c218] remove all elements that are not equal to the first element of the list.': [1, 0.125]
'[c218] remove all repeated elements and only keep one of each element.': [1, 0.0]
'[c218] remove any duplicates from the list and keep only the unique elements.': [1, 0.0]
'[c218] remove duplicate elements and only keep one copy of each unique element.': [1, 0.0]
'[c218] remove duplicates and keep only unique elements.': [1, 0.0]
'[c218] remove duplicates and keep the original order.': [1, 0.0]
'[c218] return a list with only the first two elements.': [1, 0.125]
'[c219] keep only the elements that are divisible by 2 or contain the digit 7.': [1, 0.0]
'[c219] keep only the elements that are divisible by 2.': [1, 0.0]
'[c219] keep only the elements that are divisible by 3.': [2, 0.0]
'[c219] keep only the elements that are multiples of 2.': [1, 0.0]
'[c219] keep only the numbers that are divisible by 2.': [2, 0.0]
'[c219] keep the element if it is divisible by 10 or if it is the largest element in the list.': [1, 0.0]
'[c219] keep the elements that are divisible by 2 and greater than 10.': [1, 0.0]
'[c219] only keep the numbers that are divisible by 2 and greater than 10.': [1, 0.0]
'[c219] remove duplicate elements and sort the list in ascending order.': [1, 0.0]
'[c219] select elements that are divisible by 2.': [1, 0.0]
'[c219] select every second element starting from the second element.': [1, 0.125]
'[c219] select every third element starting from the first element.': [1, 0.5]
'[c219] select every third element starting from the second element.': [1, 0.5]
'[c219] select only the elements that are divisible by 10.': [1, 0.0]
'[c219] select the elements that are divisible by 4.': [1, 0.0]
'[c219] select the even numbers from the list.': [1, 0.0]
'[c219] select the numbers that are between 0 and 10 (inclusive) and greater than 50.': [1, 0.0]
'[c219] select the odd elements.': [1, 0.0]
'[c220] double each element.': [1, 0.375]
'[c220] multiply each element by 2 and the squared value of the next element.': [1, 0.125]
'[c220] multiply each element by 2 and then subtract the element itself.': [1, 0.5]
'[c220] multiply each element by 2, 2 and 3 respectively.': [1, 0.625]
'[c220] multiply each element by 2, except for the last element which is multiplied by 4.': [1, 0.25]
'[c220] multiply each element by 2, then add the index multiplied by 2.': [1, 0.0]
'[c220] multiply each element by 2.': [7, 3.25]
'[c220] multiply each element by 3 and add the index of each element.': [1, 0.0]
'[c220] multiply each element by 3 if it is divisible by 3, else multiply by 4.': [1, 0.0]
'[c220] multiply each element by 3.': [4, 1.375]
'[c220] multiply each number by 3, except for 0 which remains unchanged.': [1, 0.25]
'[c221] add up all the elements and take the remainder when divided by 100.': [1, 0.0]
'[c221] calculate the sum of all the elements and return the result modulo 100.': [1, 0.0]
'[c221] calculate the sum of all the numbers in the list and then divide it by 10, rounding it to the nearest integer.': [1, 0.0]
'[c221] compute the sum of the list and return the result.': [1, 0.0]
'[c221] find the largest even number in the list.': [1, 0.125]
'[c221] find the largest number in the list and return it.': [1, 0.0]
'[c221] find the largest number in the list.': [1, 0.0]
'[c221] find the maximum number in the list and return its corresponding ASCII value.': [1, 0.0]
'[c221] find the maximum value in the list.': [2, 0.0]
'[c221] find the sum of the elements and return the remainder after dividing by 100.': [1, 0.0]
'[c221] sum all the elements in the list and return the result as a list with a single element.': [1, 0.0]
'[c221] sum all the elements in the list and return the result as a single-element list.': [1, 0.0]
'[c221] sum all the elements in the list and take the last two digits of the sum.': [1, 0.0]
'[c221] sum all the elements in the list and take the remainder when divided by 100.': [1, 0.0]
'[c221] sum all the elements in the list and then take the sum modulo 100.': [1, 0.0]
'[c221] sum all the elements in the list.': [1, 0.0]
'[c221] sum all the numbers and only return the last digit.': [1, 0.0]
'[c221] sum the elements of the list and return the result.': [1, 0.0]
'[c221] sum up the elements and then take the last digit of the sum.': [1, 0.0]
'[c222] calculate the number of digits in each number and create a list with that many occurrences of the digit 8.': [1, 0.0]
'[c222] count the number of digits in each element and replace the element with that count.': [1, 0.0]
'[c222] count the number of digits in each element and replace them with that count.': [1, 0.0]
'[c222] count the number of digits in each element and return a list of that count.': [1, 0.0]
'[c222] count the number of digits in each element and return a list with that count for each element.': [1, 0.0]
'[c222] count the number of digits in each element and return only one digit.': [1, 0.0]
'[c222] count the number of digits in each element and return that count as a single digit number.': [1, 0.0]
? '[c222] generate a list of elements where each element represents the length of the corresponding element in the input list.'
: [1, 0.0]
'[c222] replace each element with 10.': [1, 0.0]
'[c222] replace each element with 3.': [1, 0.0]
'[c222] replace each element with the count of digits in that element.': [1, 0.0]
'[c222] replace each element with the minimum element in the list.': [1, 0.0]
'[c222] replace each element with the number 8.': [1, 0.125]
'[c222] replace each element with the number of digits in that element.': [2, 0.0]
'[c222] replace each number with the count of the number in the list.': [1, 0.125]
'[c222] replace each number with the number of digits in its binary representation.': [1, 0.0]
'[c222] return a list of all elements with a length equal to 3.': [1, 0.0]
'[c222] take the length of the list and return a list of that length with all elements equal to 10.': [1, 0.0]
'[c222] take the number of elements in the list and return a list of that length with all elements being 8.': [1, 0.0]
'[c223] add 1 to each digit in the number, and if the result exceeds 9, wrap around to 0.': [1, 0.0]
'[c223] add 70 to each element and then reverse the digits of each number.': [1, 0.5]
'[c223] add the number 9 to the first element and subtract the last element from each subsequent element.': [1, 0.0]
'[c223] replace each digit in the number with its complement (9 - digit).': [1, 0.0]
'[c223] replace the last digit of each number with a zero.': [1, 0.0]
'[c223] reverse each digit in each number.': [2, 0.25]
'[c223] reverse each number and concatenate them.': [1, 0.0]
'[c223] reverse the digits in each number.': [1, 0.125]
'[c223] reverse the digits of each number and add 10 to each digit.': [1, 0.625]
'[c223] reverse the digits of each number and swap the first and last digits.': [1, 0.125]
'[c223] reverse the digits of each number in the list.': [3, 0.375]
'[c223] reverse the digits of each number.': [3, 0.375]
'[c223] subtract 7 from each element.': [1, 0.0]
'[c223] subtract each digit from 9 and concatenate them.': [1, 0.0]
'[c223] subtract the second digit from the first digit and add 9 to the result.': [1, 0.0]
'[c224] reverse the list.': [1, 0.0]
'[c224] sort the elements in ascending order.': [14, 1.0]
'[c224] sort the elements in descending order.': [3, 0.0]
'[c224] sort the list in ascending order.': [2, 0.0]
'[c225] extract and return the elements at indices 2, 5, and 0.': [1, 0.0]
'[c225] filter out numbers that are not greater than or equal to 10.': [1, 0.0]
'[c225] find the smallest element in the list.': [1, 0.0]
'[c225] generate a new list consisting of the numbers greater than or equal to 50.': [1, 0.125]
'[c225] keep the elements that are greater than 10.': [1, 0.0]
'[c225] keep the elements that are greater than or equal to 50.': [1, 0.0]
'[c225] keep the largest 3 elements in the list and remove the rest.': [1, 0.0]
'[c225] remove all elements smaller than 10.': [1, 0.0]
'[c225] remove the first and last elements.': [1, 0.0]
'[c225] remove the first element and every second element after that.': [1, 0.125]
? '[c225] remove the first half of the elements if the length of the list is even, or remove the first half plus one element if the length of the list is odd.'
: [1, 0.0]
'[c225] remove the largest and smallest numbers from the list.': [1, 0.0]
'[c225] remove the smallest element.': [1, 0.0]
'[c225] select all elements that are even numbers.': [1, 0.0]
'[c225] select every other element starting from the second element.': [1, 0.0]
'[c225] select the elements at the indices that are multiples of 2.': [1, 0.0]
'[c225] select the elements that are greater than or equal to 10.': [1, 0.0]
'[c225] select the elements that are in the range from 0 to 50 (inclusive) and are divisible by 5.': [1, 0.0]
'[c225] select the elements with even indices.': [1, 0.0]
'[c225] select the numbers that are divisible by 2.': [1, 0.0]
'[c226] filter out elements that are not in the second half of the list.': [1, 0.0]
'[c226] filter out numbers that are less than 10.': [1, 0.125]
'[c226] find the common elements between the two lists.': [1, 0.0]
'[c226] find the maximum and minimum values in the list and return a new list with only those values.': [1, 0.125]
'[c226] find the mode of the list.': [1, 0.0]
'[c226] keep only the elements that appear more than once in the list.': [1, 0.125]
'[c226] keep only the elements that appear more than once.': [1, 0.0]
'[c226] keep only the elements that are greater than or equal to 10.': [1, 0.125]
'[c226] keep only the numbers between 10 and 90 (inclusive).': [1, 0.0]
'[c226] remove all duplicate elements from the list.': [1, 0.0]
'[c226] remove all elements that are not equal to the last element in the list.': [1, 0.0]
'[c226] remove all elements that are not repeated.': [1, 0.0]
'[c226] remove all elements that have a repeated digit.': [1, 0.125]
? '[c226] remove all the elements that are not equal to a certain value (54 in the first example, 80 in the second example, 58 in the third example, etc.'
: [1, 0.0]
'[c226] remove duplicate elements from the list.': [1, 0.0]
'[c226] remove duplicate numbers and keep the numbers in the original order.': [1, 0.0]
'[c226] return a sublist of elements that appear more than once.': [1, 0.125]
'[c226] return a sublist of elements that have a length greater than 2 and appear more than once.': [1, 0.125]
'[c226] return the sublist of elements whose value is greater than 10 and less than 80.': [1, 0.0]
'[c226] select the elements that occur more than once.': [1, 0.0]
? '[c227] put the smallest element at the beginning and the largest element at the end, while keeping the remaining elements in the same order.'
: [1, 0.125]
'[c227] rearrange the elements in ascending order.': [1, 0.125]
'[c227] remove duplicate elements and sort the list in ascending order.': [2, 0.25]
'[c227] remove duplicate numbers and sort the numbers in ascending order.': [1, 0.0]
'[c227] remove duplicates and sort the elements in ascending order.': [1, 0.125]
'[c227] sort the elements in ascending order.': [2, 0.25]
? '[c227] sort the elements in descending order, and if two or more elements have the same value, they are kept in the order they appeared.'
: [1, 0.125]
'[c227] sort the elements in descending order, and in case of a tie, sort them in ascending order.': [1, 0.0]
'[c227] sort the elements in descending order.': [7, 0.25]
'[c227] sort the list in ascending order.': [2, 0.0]
'[c227] sort the list in descending order.': [1, 0.125]
'[c228] assign a different unique number to each unique element in the list.': [1, 0.0]
'[c228] assign a distinct number to each distinct element in the list, starting from 1.': [1, 0.0]
'[c228] assign a new number to each unique element in the order they appear, starting from 1.': [1, 0.5]
'[c228] assign a number according to the position of each distinct value.': [1, 0.375]
? '[c228] assign a number to each distinct element in the list, starting from 1 and incrementing for each occurrence of the element.'
: [1, 0.0]
? '[c228] assign a unique number from 1 to 4 for each distinct element in the list and replace each element with its corresponding assigned number.'
: [1, 0.0]
'[c228] assign a unique number to each distinct element in the list in ascending order.': [1, 0.0]
'[c228] assign a unique number to each distinct element in the list in incremental order.': [1, 0.0]
'[c228] assign a unique number to each distinct element in the list starting from 1.': [1, 0.0]
'[c228] assign a unique number to each distinct element in the list, starting from 1.': [2, 0.375]
? '[c228] assign a unique number to each distinct element, starting from 1 and incrementing by 1 for each distinct element encountered.'
: [1, 0.0]
'[c228] assign a unique number to each unique element in the list.': [1, 0.0]
'[c228] assign each unique number in the list a ranking number starting from 1.': [1, 0.0]
'[c228] count the number of occurrences of each element and assign a corresponding number.': [1, 0.375]
? '[c228] count the number of times an element appears in the list, starting from 1 and incrementing by 1 for each occurrence.'
: [1, 0.75]
'[c228] replace each number with a unique number starting from 1, based on the order of appearance.': [1, 0.375]
'[c228] replace each occurrence of the element with a unique number starting from 1.': [1, 0.0]
'[c229] find the elements that repeat in the list.': [1, 0.0]
'[c229] remove duplicate elements and reverse the list.': [1, 0.125]
'[c229] return the smallest number in the list.': [1, 0.0]
'[c229] select the elements at indices that are multiples of 2 starting from the last element and going backwards.': [1, 0.0]
'[c229] select the elements with indices that are multiples of 2.': [1, 0.0]
'[c229] select the first three elements of the list and reverse them.': [1, 0.25]
'[c229] select the smallest, largest, and second largest elements from the list in that order.': [1, 0.0]
'[c229] sort the elements in ascending order.': [5, 0.0]
'[c229] sort the elements in decreasing order.': [1, 0.0]
'[c229] sort the elements in descending order.': [4, 0.0]
'[c229] sort the list in ascending order.': [1, 0.0]
'[c229] take the first two elements, the last two elements, and the middle element if the length is odd.': [1, 0.0]
? '[c229] take the smallest and largest numbers from the list and create a new list with only those two numbers in ascending order.'
: [1, 0.0]
'[c230] add 2 to each element and generate a sequence starting from the element itself and incrementing by 2.': [1, 0.625]
'[c230] add 2 to each element in the list, except for the first and last element.': [1, 0.125]
? '[c230] add 2 to each element of the list except the first and last elements, and then append the first element to the resulting list.'
: [1, 0.0]
'[c230] convert each number to its nearest even number.': [1, 0.0]
? '[c230] create a list of numbers from the minimum number in the list to the maximum number in the list, with a step size of 2.'
: [1, 0.125]
? '[c230] create a list that starts at the given number and increments by 2, stopping when it reaches a number that is greater than or equal to the given number.'
: [1, 0.75]
? '[c230] create a range of numbers between the smallest and largest elements, with a step size of 2, and including both the smallest and largest elements.'
: [1, 0.25]
? '[c230] generate a list by incrementing the first element by 2 and adding it to the list until it is greater than or equal to the last element.'
: [1, 0.25]
'[c230] generate a list of consecutive odd numbers between the two given numbers, including both endpoints.': [1, 0.375]
'[c230] generate a list of consecutive odd numbers starting from the given number.': [1, 0.125]
'[c230] generate a list of consecutive odd numbers starting from the smallest number in the input list.': [1, 0.0]
'[c230] generate a list of consecutive odd or even numbers starting from the first number in the input list.': [1, 0.375]
'[c230] generate a list of numbers starting from the first element and incrementing by 2 until the last element.': [1, 0.375]
? '[c230] generate a list of numbers starting from the minimum element of the input list up to the maximum element of the input list, with an increment of 2.'
: [1, 0.75]
? '[c230] generate a list of numbers starting from the minimum value in the input list and increasing by 2 until reaching the maximum value in the input list.'
: [1, 0.5]
'[c230] generate a list that starts with the smaller number and increments by 2 until the larger number is reached.': [1, 0.5]
'[c230] generate a list with odd numbers starting from the minimum value and ending at the maximum value, inclusive.': [1, 0.5]
? '[c230] generate a range of numbers between the minimum and maximum values in the list, with increment of 2 starting from the minimum value.'
: [1, 0.75]
? '[c230] generate a range of numbers starting from the first element and ending at the second element with an increment of 2.'
: [1, 0.375]
'[c230] increment every element by 2.': [2, 0.0]
'[c230] increment every element by 3.': [1, 0.0]
'[c231] calculate the number of unique elements in the list.': [1, 0.0]
'[c231] count the frequency of each element and return a list containing those frequencies.': [1, 0.5]
'[c231] count the number of distinct elements in the list.': [1, 0.0]
'[c231] count the number of occurrences of each element and return a list containing the counts in ascending order.': [1, 0.125]
'[c231] count the number of occurrences of each element and return a list of the counts.': [1, 0.125]
'[c231] count the number of occurrences of each element and return a list of those counts in ascending order.': [1, 0.25]
'[c231] count the number of occurrences of each element in the list and return a new list with these counts.': [1, 0.375]
'[c231] count the number of occurrences of each element in the list.': [1, 0.125]
'[c231] count the number of times each element appears in the list and replace each element with the count.': [1, 0.125]
'[c231] count the number of times each element appears in the list and return a new list with those counts.': [1, 0.125]
'[c231] count the number of times the first element appears in the list and output a list with that count repeated.': [1, 0.0]
'[c231] count the number of times the first element appears in the list.': [1, 0.0]
? '[c231] count the number of times the maximum element appears in the list, followed by counting the number of times the minimum element appears in the list.'
: [1, 0.125]
'[c231] count the number of unique elements in the list and return a list of counts in ascending order.': [1, 0.25]
'[c231] count the number of unique elements in the list and return a list with the count of each unique element.': [1, 0.0]
'[c231] count the number of unique elements in the list and return a list with the counts in increasing order.': [1, 0.0]
'[c231] count the number of unique elements in the list and return that count.': [1, 0.0]
'[c231] count the number of unique elements in the list.': [2, 0.0]
'[c231] count the occurrences of each number and return a list of those counts.': [1, 0.0]
'[c232] add the digits of each number and return the sum.': [1, 0.0]
'[c232] add the first and second element, and subtract the third element.': [1, 0.0]
'[c232] calculate the sum of the digits in each number and return a list containing the sum.': [1, 0.0]
'[c232] calculate the sum of the middle two numbers and subtract the sum of the outer two numbers.': [1, 0.0]
'[c232] calculate the sum of the numbers and then divide by the total count of numbers in the list.': [1, 1.0]
'[c232] calculate the sum of the numbers in the list and then subtract the largest number in the list from the sum.': [1, 0.0]
'[c232] concatenate the first and last digits of each number and find the sum.': [1, 0.0]
'[c232] extract the middle element of the list.': [1, 0.0]
'[c232] find the difference between the largest and smallest numbers in the list and return it.': [1, 0.0]
'[c232] find the difference between the maximum and minimum elements.': [1, 0.0]
'[c232] find the largest number in the list.': [1, 0.0]
'[c232] find the remainder of dividing each element by 11 and return the result.': [1, 0.0]
'[c232] find the sum of the digits and return it.': [1, 0.0]
'[c232] find the sum of the first and last elements of the list.': [1, 0.0]
'[c232] multiply the first two elements and subtract the third element.': [1, 0.0]
'[c232] subtract the second element from the first element and return the result.': [1, 0.0]
'[c232] subtract the second element from the first element and take the absolute value.': [1, 0.0]
'[c232] sum the digits of each number and return the result.': [1, 0.0]
'[c232] take the average of the numbers and round down to the nearest whole number.': [1, 1.0]
'[c232] take the sum of the digits of the first element in the list.': [1, 0.0]
'[c233] count the frequency of each element and return a list of the frequencies.': [1, 0.375]
'[c233] count the frequency of each unique element and return the frequencies in a new list.': [1, 0.125]
'[c233] count the frequency of the elements and return a list with the counts.': [1, 0.375]
'[c233] count the number of distinct elements in the list and return that count as a list.': [1, 0.0]
'[c233] count the number of distinct elements in the list and then represent the count in binary form.': [1, 0.0]
'[c233] count the number of occurrences of each element and create a new list with the counts.': [1, 0.5]
'[c233] count the number of occurrences of each element and return a list of those counts in ascending order.': [1, 0.375]
'[c233] count the number of occurrences of each element and return a list of those counts in reverse order.': [1, 0.375]
'[c233] count the number of occurrences of each element and return a list of those counts.': [2, 0.5]
'[c233] count the number of occurrences of each element in the list.': [1, 0.0]
'[c233] count the number of occurrences of each unique element and list them in ascending order.': [1, 0.375]
? '[c233] count the number of occurrences of each unique element in the list and create a new list with those counts in the same order as the unique elements.'
: [1, 0.5]
? '[c233] count the number of occurrences of each unique element in the list and return a list of those counts in ascending order.'
: [1, 0.375]
'[c233] count the number of occurrences of the most frequent element in the list.': [1, 0.0]
'[c233] count the number of times a number appears in the list.': [1, 0.375]
'[c233] count the number of times each element appears in the list and return a new list with the counts.': [1, 0.5]
'[c233] count the number of unique elements in the list and add them to a new list in reverse order.': [1, 0.0]
'[c233] count the occurrences of each element and output a list of counts in ascending order.': [1, 0.25]
'[c233] count the occurrences of each element and return a list of the frequencies in ascending order.': [1, 0.375]
'[c234] group identical elements together and maintain their original order.': [1, 0.0]
'[c234] group the elements by their value and sort them in ascending order.': [1, 0.0]
'[c234] remove all but one occurrence of each unique element and sort the remaining elements in ascending order.': [1, 0.0]
'[c234] remove all but the first two elements if they are equal.': [1, 0.125]
'[c234] remove all consecutive duplicates.': [1, 0.0]
'[c234] remove all duplicate elements from the list.': [2, 0.0]
'[c234] remove all duplicates and only keep the unique elements in the list.': [1, 0.0]
'[c234] remove all duplicates except for the first occurrence.': [1, 0.0]
'[c234] remove all duplicates from the list and keep only one instance of each element.': [1, 0.0]
'[c234] remove all duplicates from the list.': [1, 0.0]
'[c234] remove all elements except for the ones that repeat at least twice.': [1, 0.0]
'[c234] remove any duplicate elements from the list.': [1, 0.0]
'[c234] remove consecutive duplicates from the list.': [1, 0.0]
'[c234] remove consecutive duplicates in the list.': [1, 0.0]
'[c234] remove consecutive duplicates.': [1, 0.0]
'[c234] remove duplicate elements and keep the order of the remaining elements.': [1, 0.0]
'[c234] remove duplicate elements and keep the original order.': [1, 0.0]
'[c234] remove the duplicate elements.': [1, 0.0]
'[c234] remove the first and last elements of the list.': [1, 0.0]
? '[c235] create a decreasing sequence of numbers starting from the highest number and ending at the lowest number, followed by an increasing sequence of numbers starting from the lowest number and ending at the highest number.'
: [1, 0.125]
? '[c235] create a descending sequence starting from the first element and ending at 1, then append a descending sequence starting from the first element and ending at 2, and repeat this pattern.'
: [1, 0.0]
'[c235] create a list of integers in descending order from the maximum value in the list to the minimum value in the list.': [1, 0.125]
? '[c235] create a new list that includes the elements in the original list in decreasing order, followed by the elements in increasing order, excluding any duplicate elements.'
: [1, 0.0]
'[c235] decrement each element by 1, then count down from the largest number to the smallest number.': [1, 0.0]
'[c235] generate a list of consecutive numbers starting from the last element in the input list.': [1, 0.0]
'[c235] generate a list of consecutive numbers, starting from the largest number and decreasing by 1.': [1, 0.375]
? '[c235] generate a list of elements starting from the first element up to the last element in decreasing order, then append the list starting from the second element up to the second to last element in increasing order.'
: [1, 0.125]
? '[c235] generate a list of numbers decreasing by 1 starting from the first element, and append the last element of the input list.'
: [1, 0.0]
'[c235] generate a list of numbers starting from the first element and incrementing by 1 until reaching the second element.': [1, 0.875]
'[c235] generate a list starting from the first element and incrementing by one until it reaches the second element.': [1, 0.0]
? '[c235] generate a list starting with the first element and decrements by 1 until it reaches 0, and then increments by 1 until it reaches the last element.'
: [1, 0.25]
? '[c235] generate a list that starts from the first element, increments by 1 until the second element, then decrements by 1 until reaching the first element again.'
: [1, 0.25]
? '[c235] generate a list that starts with the first element, increments by 1 up to the second element, then decrements by 1 back to the first element.'
: [1, 0.75]
'[c235] generate a sequence of numbers from the first element to the last element, inclusive.': [1, 0.5]
'[c235] generate a sequence of numbers, starting from the first element and incrementing by 1 each time.': [1, 0.125]
? '[c235] remove consecutive duplicate elements and replace them with a sequence of numbers starting from 2 less than the original number, ending with the original number.'
: [1, 0.25]
'[c235] remove duplicate elements and sort the list in non-increasing order.': [1, 0.0]
'[c235] replace each element with a sequence of numbers starting from that element and counting down to 1.': [1, 0.0]
? '[c235] replace each element with a sequence starting from that element, decrementing each subsequent element by 1 until reaching 2, then incrementing each subsequent element by 1 until reaching the original element again.'
: [1, 0.125]
'[c236] calculate the average of the elements and round to the nearest whole number.': [1, 0.0]
'[c236] calculate the floor division of each number by 10 and then multiply by 5.': [1, 0.0]
'[c236] calculate the square root of each element and round it to the nearest integer.': [1, 0.0]
'[c236] calculate the sum of the digits of each number and return the smallest number in the list.': [1, 0.0]
'[c236] convert each number in the list to its sum of digits.': [1, 0.0]
'[c236] divide each element by 2 and get the floor value.': [1, 0.0]
'[c236] divide each element by 2 and round down to the nearest whole number.': [1, 0.0]
'[c236] divide each element by 2.': [1, 0.0]
'[c236] divide each number by 2 and keep only the integer part.': [1, 0.0]
'[c236] divide each number by 2 and round down to the nearest integer.': [2, 0.0]
'[c236] divide each number by 2 and round down to the nearest whole number.': [1, 0.0]
'[c236] divide each number by 2, round down to the nearest integer, and then subtract the index of the element.': [1, 0.0]
'[c236] find the average of the elements and round down to the nearest whole number, then add 1.': [1, 0.0]
'[c236] find the average of the elements and round them to the nearest whole number.': [1, 0.0]
'[c236] find the remainder of each number when divided by 4 and then divide it by 3.': [1, 0.0]
'[c236] find the sum of the digits in each number, and then find the sum of those sums.': [1, 0.0]
'[c236] find the two smallest numbers and create a list with those numbers in ascending order.': [1, 0.0]
'[c236] take the modulo of each number with 50.': [1, 0.0]
'[c236] take the sum of the digits in each element and return the remainder when divided by 10.': [1, 0.0]
'[c237] calculate the cumulative sum of the elements and only keep the even indexed sums.': [1, 0.0]
'[c237] calculate the cumulative sum of the elements in the list.': [1, 0.0]
'[c237] calculate the cumulative sum of the elements, excluding the first element.': [1, 0.0]
'[c237] calculate the cumulative sum of the elements.': [3, 0.0]
'[c237] calculate the partial sum of the elements.': [1, 0.0]
'[c237] calculate the sum of consecutive elements starting from the first element.': [1, 0.0]
'[c237] calculate the sum of consecutive pairs of elements in the list.': [1, 0.0]
'[c237] calculate the sum of each consecutive pair of elements.': [1, 0.0]
'[c237] calculate the sum of each unique element in the list.': [1, 0.0]
'[c237] calculate the sum of every pair of consecutive numbers in the list.': [1, 0.0]
'[c237] calculate the sum of the list and remove any duplicates.': [1, 0.0]
'[c237] compute the cumulative sum of the elements.': [1, 0.0]
'[c237] sum consecutive elements until a distinct element is encountered.': [1, 0.0]
'[c237] sum consecutive equal elements.': [1, 0.0]
'[c237] sum every consecutive pair of elements and append the sum to the new list.': [1, 0.0]
'[c237] sum up consecutive pairs of elements in the list.': [1, 0.0]
'[c237] sum up the elements in groups of consecutive duplicates, starting from the first element.': [1, 0.0]
'[c237] take the sum of adjacent pairs of elements.': [1, 0.0]
'[c238] keep only the unique elements in the list.': [1, 0.0]
'[c238] remove all duplicate elements from the list and maintain the order of the remaining elements.': [1, 0.0]
'[c238] remove all duplicate elements from the list.': [2, 0.25]
'[c238] remove all duplicate elements.': [1, 0.375]
'[c238] remove all duplicates and sort the elements in ascending order.': [1, 0.0]
'[c238] remove all duplicates from the list.': [1, 0.0]
'[c238] remove all duplicates in the list.': [1, 0.0]
'[c238] remove any duplicates in the list and return the list in its original order.': [1, 0.125]
'[c238] remove duplicate elements and keep the remaining elements in the same order.': [1, 0.125]
'[c238] remove duplicate elements and sort the array in ascending order.': [1, 0.0]
'[c238] remove duplicate elements and sort the list in ascending order.': [1, 0.0]
'[c238] remove duplicate elements and sort the list in non-decreasing order.': [1, 0.0]
'[c238] remove duplicate elements from the list.': [2, 0.125]
'[c238] remove duplicates and keep the order of the remaining elements.': [1, 0.0]
'[c238] remove duplicates and sort the elements in ascending order.': [1, 0.0]
'[c238] remove the duplicate elements from the list.': [1, 0.125]
'[c238] remove the first and last occurrence of each element.': [1, 0.25]
'[c238] return a new list with all elements that have a frequency greater than or equal to 3, excluding duplicates.': [1, 0.0]
'[c239] check if all elements in the list are the same.': [1, 0.5]
'[c239] check if all the elements in the list are equal.': [1, 0.25]
'[c239] check if the list contains the number 0.': [1, 0.0]
'[c239] count the number of elements divisible by 4.': [1, 0.25]
'[c239] count the number of elements in the list and take the remainder when divided by 2.': [1, 0.375]
? '[c239] count the number of occurrence of the number 3 and return 1 if the count is greater than or equal to 3, else return 0.'
: [1, 0.375]
'[c239] count the number of occurrences of a specific element.': [1, 0.5]
'[c239] count the number of occurrences of the first element in the list.': [3, 1.75]
'[c239] count the number of occurrences of the last element in the list.': [2, 1.375]
'[c239] count the number of occurrences of the number 3 in the list.': [1, 0.5]
'[c239] count the number of times the first element appears in the list.': [2, 0.875]
'[c239] count the occurrences of the maximum element in the list.': [1, 0.625]
'[c239] count the occurrences of the number 96 in the list.': [1, 0.375]
'[c239] find the mode (most frequent element) of the list.': [1, 0.125]
'[c239] find the mode of the list (the most frequently occurring element).': [1, 0.0]
'[c239] find the mode of the list, which is the element with the highest frequency.': [1, 0.0]
'[c240] count the frequency of each number and return the number with the highest frequency.': [1, 0.0]
'[c240] count the frequency of the number 2 in the list.': [1, 0.0]
'[c240] count the number of distinct elements in the list and return it.': [1, 0.0]
'[c240] count the number of distinct elements in the list and return that count.': [2, 0.0]
'[c240] count the number of distinct elements in the list and return the count.': [1, 0.0]
'[c240] count the number of duplicate elements and return that count.': [1, 0.0]
'[c240] count the number of occurrence of the first element in the list.': [1, 0.375]
? '[c240] count the number of occurrences of each element and return a list with the mode(s), the element(s) with the highest frequency.'
: [1, 0.25]
? '[c240] count the number of occurrences of each element in the list and return the count if it is greater than or equal to 2.'
: [1, 0.5]
'[c240] count the number of occurrences of the first element in the list.': [1, 0.375]
'[c240] count the number of occurrences of the largest element in the list.': [1, 0.25]
'[c240] count the number of occurrences of the most frequent element.': [1, 0.5]
'[c240] count the number of times the first element appears in the list.': [3, 1.5]
'[c240] count the number of unique elements in the list.': [1, 0.0]
'[c240] count the occurrences of each element and return the element with the highest count.': [1, 0.25]
'[c240] count the occurrences of the number 2 in the list and return that count.': [1, 0.25]
'[c240] find the mode (most frequently occurring element) of the list.': [1, 0.0]
'[c241] calculate the remainder of dividing the sum of the digits by 10.': [1, 0.125]
'[c241] count the number of digits in each element and output the result mod 10.': [1, 0.0]
'[c241] count the number of digits in each element and return the count as a single-element list.': [1, 0.25]
'[c241] count the number of digits in each number and return the count modulo 7.': [1, 0.125]
'[c241] count the number of elements greater than 10 in the list modulo 10.': [1, 0.0]
'[c241] count the number of elements greater than 50 in the list and return the count.': [1, 0.25]
'[c241] count the number of elements in the list that are greater than 25 and then take modulo 10 of that count.': [1, 0.25]
'[c241] count the number of even elements in the list and return that count.': [1, 0.125]
'[c241] count the number of even elements in the list.': [1, 0.125]
'[c241] count the number of even numbers in the list.': [2, 1.0]
'[c241] count the number of occurrences of the minimum element in the list.': [1, 0.0]
'[c241] determine the number of even elements in the list and return the remainder when divided by 7.': [1, 0.125]
'[c241] find the count of numbers that are divisible by 10.': [1, 0.125]
'[c241] find the minimum value in the list.': [1, 0.125]
'[c241] find the remainder of dividing the first element by 7.': [1, 0.0]
'[c241] find the remainder when dividing each element by 7.': [1, 0.0]
'[c241] find the smallest number in the list.': [2, 0.0]
'[c241] select the third element.': [1, 0.0]
'[c242] reverse the list.': [1, 0.125]
'[c242] sort the elements in ascending order.': [13, 0.75]
'[c242] sort the elements in descending order.': [4, 0.125]
'[c242] sort the elements in increasing order.': [1, 0.0]
'[c242] sort the elements in non-decreasing order.': [1, 0.0]
'[c243] count the number of elements in the list that are divisible by 4.': [1, 0.375]
'[c243] count the number of even numbers in the list and return it as a single-element list.': [1, 0.125]
'[c243] find the element with the minimum value and return it.': [1, 0.0]
'[c243] find the last digit of each number.': [1, 0.0]
'[c243] find the minimum value from the list.': [1, 0.0]
'[c243] find the minimum value in the list.': [2, 0.125]
'[c243] find the smallest digit in the list.': [1, 0.0]
'[c243] find the smallest element in the list.': [2, 0.125]
'[c243] find the smallest number in the list.': [8, 0.375]
'[c243] return a list containing the minimum number.': [1, 0.0]
'[c243] return the number of elements in the list.': [1, 0.0]
'[c244] check if any element in the list is divisible by 3.': [1, 0.375]
'[c244] check if the list contains the number 3.': [1, 0.375]
'[c244] count the number of 3s in the list and return it as a single element list.': [1, 0.75]
'[c244] count the number of elements greater than 60.': [1, 0.375]
'[c244] count the number of elements that are divisible by 10.': [1, 0.25]
'[c244] count the number of occurrences of the element 3 in the list, modulo 9.': [1, 0.375]
'[c244] count the number of occurrences of the first element and return that count.': [1, 0.625]
'[c244] count the number of occurrences of the first element in the list.': [1, 0.625]
'[c244] count the number of occurrences of the number 3 in the list and return it as a list.': [1, 0.875]
'[c244] count the number of occurrences of the number 3 in the list.': [4, 3.375]
'[c244] count the number of occurrences of the smallest element in the list.': [1, 0.5]
'[c244] count the number of odd numbers in the list and return the remainder when divided by 10.': [1, 0.125]
'[c244] count the number of times the number 3 appears in the list.': [2, 1.625]
'[c244] count the occurrences of each element and return the element with the maximum count.': [1, 0.125]
'[c244] count the occurrences of the number 3 in the list.': [1, 1.0]
'[c244] find the most frequent element in the list and return 0 if the count is greater than or equal to 4, else return 1.': [1, 0.25]
'[c245] check if the list contains the number 0 or the number 1.': [1, 0.375]
'[c245] count the number of elements that are divisible by 9.': [1, 0.25]
? '[c245] count the number of elements that are greater than or equal to 10 in the list, and return the last digit of that count.'
: [1, 0.25]
? '[c245] count the number of occurrences of each element, then return a list of the elements with an odd number of occurrences.'
: [1, 0.0]
'[c245] count the number of occurrences of the digit 6 in the list and return the result as a single-element list.': [1, 0.375]
'[c245] count the number of occurrences of the element 6 in the list and return the count modulo 10.': [1, 0.125]
'[c245] count the number of occurrences of the first element in the list and return it as a single-element list.': [1, 0.5]
'[c245] count the number of occurrences of the first element in the list.': [2, 1.0]
'[c245] count the number of occurrences of the first element.': [1, 0.375]
'[c245] count the number of occurrences of the maximum element in the list.': [1, 0.375]
'[c245] count the number of occurrences of the minimum element in the list.': [1, 0.125]
'[c245] count the number of occurrences of the number 64 in the list and return the last digit of the count.': [1, 0.375]
'[c245] count the number of times the element 26 appears in the list and return that count as a single-element list.': [1, 0.375]
'[c245] count the number of times the first element appears in the list.': [1, 0.625]
'[c245] count the number of times the last element appears in the list.': [1, 0.5]
'[c245] find the remainder of dividing the sum of the digits by 10.': [1, 0.0]
'[c245] find the smallest digit in the given list.': [1, 0.375]
'[c245] find the smallest digit in the number and return it.': [1, 0.25]
'[c245] keep only the digits that are multiples of 10 and sum them up modulo 10.': [1, 0.25]
'[c246] count the number of digits in each element and return that count.': [1, 0.0]
'[c246] count the number of elements divisible by 10.': [1, 0.0]
'[c246] count the number of elements in the list that are divisible by 2 and divisible by 3.': [1, 0.125]
'[c246] count the number of elements in the list that are divisible by 2.': [1, 0.125]
'[c246] count the number of elements in the list.': [4, 3.25]
'[c246] count the number of elements that are divisible by 10.': [1, 0.125]
'[c246] count the number of elements that are divisible by 9.': [1, 0.125]
'[c246] count the number of elements that are greater than or equal to 10.': [1, 0.0]
'[c246] count the number of even numbers in the list.': [1, 0.125]
'[c246] count the number of occurrences of the maximum element in the list.': [1, 0.0]
'[c246] count the number of times the last element appears in the list.': [1, 0.0]
'[c246] count the number of unique elements in the list and return a list containing that count.': [1, 1.0]
'[c246] count the number of unique elements in the list.': [2, 2.0]
'[c246] find the smallest digit in the list.': [1, 0.0]
'[c246] keep only the minimum element in the list.': [1, 0.0]
'[c246] return the length of the list.': [1, 0.0]
'[c247] keep only the elements that occur more than once in the list.': [1, 0.0]
'[c247] keep only the first occurrence of each element and remove all subsequent occurrences.': [1, 0.0]
'[c247] remove all consecutive duplicate elements.': [1, 0.0]
'[c247] remove all consecutive duplicate numbers.': [1, 0.0]
'[c247] remove all duplicate elements and keep only the unique elements in the list.': [1, 0.0]
'[c247] remove all duplicate elements from the list, keeping only the first occurrence of each element.': [1, 0.0]
'[c247] remove all duplicate elements from the list.': [1, 0.0]
'[c247] remove all duplicate elements, keeping only the first occurrence.': [1, 0.0]
'[c247] remove all duplicate values and stop at the first occurrence of 0.': [1, 0.0]
'[c247] remove all duplicates from the list.': [1, 0.0]
'[c247] remove all occurrences of the number 0.': [1, 0.0]
'[c247] remove all repeated elements and return the remaining unique elements in the same order.': [1, 0.0]
'[c247] remove all repeated elements.': [1, 0.0]
'[c247] remove all the duplicates from the list.': [1, 0.0]
'[c247] remove all the elements that are not equal to the first element.': [1, 0.125]
'[c247] remove any repeated elements in the list.': [1, 0.0]
'[c247] remove consecutive duplicate elements.': [2, 0.0]
'[c247] remove duplicate consecutive elements from the list.': [1, 0.0]
'[c247] remove duplicates from the list, keeping only the first occurrence of each element.': [1, 0.0]
'[c248] remove all duplicate elements from the list.': [2, 0.25]
'[c248] remove all duplicate numbers.': [1, 0.25]
'[c248] remove all duplicates except for the last occurrence of each element.': [1, 0.25]
'[c248] remove all duplicates from the list.': [3, 0.375]
'[c248] remove all elements equal to or greater than 10 from the original list.': [1, 0.0]
'[c248] remove all elements that are not equal to 0 or greater than or equal to 10.': [1, 0.0]
'[c248] remove all elements that are not equal to 0.': [1, 0.125]
'[c248] remove all elements that are not multiples of 4.': [1, 0.125]
'[c248] remove all elements that are not the first or the last element.': [1, 0.125]
'[c248] remove all multiples of 2.': [1, 0.0]
'[c248] remove all numbers except for the last two numbers in the list.': [1, 0.375]
'[c248] remove all numbers that are greater than 10.': [1, 0.0]
'[c248] remove all the duplicates in the list, keeping only the first occurrence of each unique element.': [1, 0.125]
'[c248] remove any duplicate elements from the list.': [1, 0.0]
'[c248] remove duplicates from the list.': [2, 0.125]
'[c248] remove the first occurrence of the maximum number from the list.': [1, 0.125]
'[c249] find the element that appears the most frequent and return that element.': [1, 0.125]
'[c249] find the mode of the list.': [1, 0.0]
'[c249] find the most frequent element in the list.': [1, 0.0]
'[c249] find the unique elements in the list.': [1, 0.125]
'[c249] keep only the unique elements and arrange them in the same order as they appear in the original list.': [1, 0.0]
'[c249] keep only the unique elements in the list.': [1, 0.125]
'[c249] keep only unique elements in the list.': [1, 0.125]
'[c249] keep the elements that appear more than once.': [1, 0.0]
'[c249] keep the unique elements in the list, while maintaining their original order.': [1, 0.125]
'[c249] only keep the unique elements in the list.': [1, 0.0]
'[c249] remove all duplicate elements and keep the elements in the same order.': [1, 0.125]
'[c249] remove all duplicate elements and sort the list in ascending order.': [1, 0.125]
'[c249] remove all duplicate numbers and only keep the unique ones.': [1, 0.0]
'[c249] remove all duplicate numbers.': [1, 0.125]
'[c249] remove all duplicates and return the unique elements in the original order.': [1, 0.0]
'[c249] remove duplicate elements from the list.': [1, 0.0]
'[c249] remove duplicates and keep the elements in the same order.': [1, 0.125]
'[c249] remove duplicates and sort the list in ascending order.': [1, 0.0]
'[c249] remove duplicates from the list, keeping only the first occurrence of each element.': [1, 0.125]
'[c249] select the unique numbers in the list and sort them in ascending order.': [1, 0.125]
'[c250] rearrange the elements in descending order.': [1, 0.0]
'[c250] remove all duplicate elements in the list and keep the order of the remaining elements.': [1, 0.0]
'[c250] remove consecutive duplicate elements.': [1, 0.0]
'[c250] remove duplicate adjacent elements.': [1, 0.0]
'[c250] remove duplicates and keep the elements in the original order.': [1, 0.0]
'[c250] sort the elements in ascending order.': [11, 0.0]
'[c250] sort the elements in descending order.': [3, 0.0]
'[c250] sort the list in ascending order.': [1, 0.0]
